Archive member included because of file (symbol)

c:\gcc850\lib\libc.a(lib_a-atoi.o)
                              obj/util.o (_atoi)
c:\gcc850\lib\libc.a(lib_a-memcpy.o)
                              obj/util.o (_memcpy)
c:\gcc850\lib\libc.a(lib_a-memset.o)
                              obj/I2Ceeprom.o (_memset)
c:\gcc850\lib\libc.a(lib_a-sprintf.o)
                              obj/util.o (_sprintf)
c:\gcc850\lib\libc.a(lib_a-strcmp.o)
                              obj/STRCLASS.o (_strcmp)
c:\gcc850\lib\libc.a(lib_a-strcpy.o)
                              obj/STRCLASS.o (_strcpy)
c:\gcc850\lib\libc.a(lib_a-strlen.o)
                              obj/STRCLASS.o (_strlen)
c:\gcc850\lib\libc.a(lib_a-strtol.o)
                              c:\gcc850\lib\libc.a(lib_a-atoi.o) (__strtol_r)
c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
                              c:\gcc850\lib\libc.a(lib_a-sprintf.o) (__svfprintf_r)
c:\gcc850\lib\libc.a(lib_a-ctype_.o)
                              c:\gcc850\lib\libc.a(lib_a-strtol.o) (___ctype_ptr__)
c:\gcc850\lib\libc.a(lib_a-dtoa.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (__dtoa_r)
c:\gcc850\lib\libc.a(lib_a-freer.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (__free_r)
c:\gcc850\lib\libc.a(lib_a-impure.o)
                              c:\gcc850\lib\libc.a(lib_a-sprintf.o) (__impure_ptr)
c:\gcc850\lib\libc.a(lib_a-locale.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (__localeconv_r)
c:\gcc850\lib\libc.a(lib_a-mallocr.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (__malloc_r)
c:\gcc850\lib\libc.a(lib_a-memchr.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (_memchr)
c:\gcc850\lib\libc.a(lib_a-memmove.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (_memmove)
c:\gcc850\lib\libc.a(lib_a-mlock.o)
                              c:\gcc850\lib\libc.a(lib_a-freer.o) (___malloc_lock)
c:\gcc850\lib\libc.a(lib_a-mprec.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (__Bfree)
c:\gcc850\lib\libc.a(lib_a-reallocr.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (__realloc_r)
c:\gcc850\lib\libc.a(lib_a-s_isinfd.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (___isinfd)
c:\gcc850\lib\libc.a(lib_a-s_isnand.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (___isnand)
c:\gcc850\lib\libc.a(lib_a-sbrkr.o)
                              c:\gcc850\lib\libc.a(lib_a-freer.o) (__sbrk_r)
c:\gcc850\lib\libc.a(lib_a-stat.o)
                              c:\gcc850\lib\libc.a(lib_a-sbrkr.o) (_errno)
c:\gcc850\lib\libc.a(lib_a-trap.o)
                              c:\gcc850\lib\libc.a(lib_a-stat.o) (___trap0)
c:\gcc850\lib\libc.a(lib_a-callocr.o)
                              c:\gcc850\lib\libc.a(lib_a-mprec.o) (__calloc_r)
c:\gcc850\lib\libc.a(lib_a-sbrk.o)
                              c:\gcc850\lib\libc.a(lib_a-sbrkr.o) (__sbrk)
c:\gcc850\lib\libc.a(lib_a-write.o)
                              c:\gcc850\lib\libc.a(lib_a-sbrk.o) (__write)
c:\gcc850\lib\libc.a(lib_a-abort.o)
                              c:\gcc850\lib\libc.a(lib_a-sbrk.o) (_abort)
c:\gcc850\lib\libc.a(lib_a-signal.o)
                              c:\gcc850\lib\libc.a(lib_a-abort.o) (_raise)
c:\gcc850\lib\libc.a(lib_a-signalr.o)
                              c:\gcc850\lib\libc.a(lib_a-signal.o) (__getpid_r)
c:\gcc850\lib\libc.a(lib_a-_Exit.o)
                              c:\gcc850\lib\libc.a(lib_a-abort.o) (__exit)
c:\gcc850\lib\libc.a(lib_a-getpid.o)
                              c:\gcc850\lib\libc.a(lib_a-signalr.o) (__getpid)
c:\gcc850\lib\libc.a(lib_a-kill.o)
                              c:\gcc850\lib\libc.a(lib_a-signalr.o) (__kill)
c:\gcc850\lib\libgcc.a(_mulsi3.o)
                              obj/IEETEST.o (___mulsi3)
c:\gcc850\lib\libgcc.a(_divsi3.o)
                              obj/util.o (___divsi3)
c:\gcc850\lib\libgcc.a(_udivsi3.o)
                              obj/main.o (___udivsi3)
c:\gcc850\lib\libgcc.a(_modsi3.o)
                              obj/util.o (___modsi3)
c:\gcc850\lib\libgcc.a(_umodsi3.o)
                              obj/main.o (___umodsi3)
c:\gcc850\lib\libgcc.a(_save_20c.o)
                              c:\gcc850\lib\libc.a(lib_a-mallocr.o) (__save_r20_r31)
c:\gcc850\lib\libgcc.a(_save_23c.o)
                              c:\gcc850\lib\libc.a(lib_a-mprec.o) (__save_r23_r31)
c:\gcc850\lib\libgcc.a(_save_25c.o)
                              c:\gcc850\lib\libc.a(lib_a-freer.o) (__save_r25_r31)
c:\gcc850\lib\libgcc.a(_save_26c.o)
                              c:\gcc850\lib\libc.a(lib_a-mprec.o) (__save_r26_r31)
c:\gcc850\lib\libgcc.a(_save_27c.o)
                              c:\gcc850\lib\libc.a(lib_a-mprec.o) (__save_r27_r31)
c:\gcc850\lib\libgcc.a(_save_28c.o)
                              c:\gcc850\lib\libc.a(lib_a-freer.o) (__save_r28_r31)
c:\gcc850\lib\libgcc.a(_save_29c.o)
                              c:\gcc850\lib\libc.a(lib_a-signal.o) (__save_r29_r31)
c:\gcc850\lib\libgcc.a(_save_31c.o)
                              c:\gcc850\lib\libc.a(lib_a-atoi.o) (__save_r31)
c:\gcc850\lib\libgcc.a(_save_varargs.o)
                              c:\gcc850\lib\libc.a(lib_a-sprintf.o) (__save_r6_r9)
c:\gcc850\lib\libgcc.a(_fixunssfsi.o)
                              obj/SOUND.o (___fixunssfsi)
c:\gcc850\lib\libgcc.a(_addsub_sf.o)
                              obj/SOUND.o (___subsf3)
c:\gcc850\lib\libgcc.a(_mul_sf.o)
                              obj/main.o (___mulsf3)
c:\gcc850\lib\libgcc.a(_div_sf.o)
                              obj/main.o (___divsf3)
c:\gcc850\lib\libgcc.a(_eq_sf.o)
                              obj/IEETEST.o (___eqsf2)
c:\gcc850\lib\libgcc.a(_ne_sf.o)
                              obj/util.o (___nesf2)
c:\gcc850\lib\libgcc.a(_gt_sf.o)
                              obj/ADC.o (___gtsf2)
c:\gcc850\lib\libgcc.a(_ge_sf.o)
                              c:\gcc850\lib\libgcc.a(_fixunssfsi.o) (___gesf2)
c:\gcc850\lib\libgcc.a(_lt_sf.o)
                              obj/CPUSIFRA_MANAGER.o (___ltsf2)
c:\gcc850\lib\libgcc.a(_le_sf.o)
                              obj/ADC.o (___lesf2)
c:\gcc850\lib\libgcc.a(_si_to_sf.o)
                              obj/main.o (___floatsisf)
c:\gcc850\lib\libgcc.a(_sf_to_si.o)
                              obj/PROTOCOLSIFRA.o (___fixsfsi)
c:\gcc850\lib\libgcc.a(_thenan_sf.o)
                              c:\gcc850\lib\libgcc.a(_addsub_sf.o) (___thenan_sf)
c:\gcc850\lib\libgcc.a(_usi_to_sf.o)
                              obj/SWTIM.o (___floatunsisf)
c:\gcc850\lib\libgcc.a(_addsub_df.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___subdf3)
c:\gcc850\lib\libgcc.a(_mul_df.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___muldf3)
c:\gcc850\lib\libgcc.a(_div_df.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___divdf3)
c:\gcc850\lib\libgcc.a(_eq_df.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (___eqdf2)
c:\gcc850\lib\libgcc.a(_ne_df.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (___nedf2)
c:\gcc850\lib\libgcc.a(_gt_df.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___gtdf2)
c:\gcc850\lib\libgcc.a(_ge_df.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___gedf2)
c:\gcc850\lib\libgcc.a(_lt_df.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (___ltdf2)
c:\gcc850\lib\libgcc.a(_si_to_df.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___floatsidf)
c:\gcc850\lib\libgcc.a(_df_to_si.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___fixdfsi)
c:\gcc850\lib\libgcc.a(_thenan_df.o)
                              c:\gcc850\lib\libgcc.a(_addsub_df.o) (___thenan_df)
c:\gcc850\lib\libgcc.a(_usi_to_df.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___floatunsidf)
c:\gcc850\lib\libgcc.a(_ucmpdi2.o)
                              c:\gcc850\lib\libgcc.a(_addsub_df.o) (___ucmpdi2)
c:\gcc850\lib\libgcc.a(_muldi3.o)
                              c:\gcc850\lib\libgcc.a(_mul_sf.o) (___muldi3)
c:\gcc850\lib\libgcc.a(_clzsi2.o)
                              c:\gcc850\lib\libgcc.a(_si_to_sf.o) (___clzsi2)
c:\gcc850\lib\libgcc.a(_pack_sf.o)
                              c:\gcc850\lib\libgcc.a(_addsub_sf.o) (___pack_f)
c:\gcc850\lib\libgcc.a(_unpack_sf.o)
                              c:\gcc850\lib\libgcc.a(_addsub_sf.o) (___unpack_f)
c:\gcc850\lib\libgcc.a(_fpcmp_parts_sf.o)
                              c:\gcc850\lib\libgcc.a(_eq_sf.o) (___fpcmp_parts_f)
c:\gcc850\lib\libgcc.a(_pack_df.o)
                              c:\gcc850\lib\libgcc.a(_addsub_df.o) (___pack_d)
c:\gcc850\lib\libgcc.a(_unpack_df.o)
                              c:\gcc850\lib\libgcc.a(_addsub_df.o) (___unpack_d)
c:\gcc850\lib\libgcc.a(_fpcmp_parts_df.o)
                              c:\gcc850\lib\libgcc.a(_eq_df.o) (___fpcmp_parts_d)
c:\gcc850\lib\libgcc.a(_clz.o)
                              c:\gcc850\lib\libgcc.a(_clzsi2.o) (___clz_tab)

Allocating common symbols
Common symbol       size              file

_errno              0x4               c:\gcc850\lib\libc.a(lib_a-stat.o)

Discarded input sections

 .gnu.linkonce.t._ZN21UartDeviceAbstraction9GetParityEv
                0x00000000        0x0 obj/PROTOCOLSTDUART.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction12GetFrameBitsEv
                0x00000000        0x0 obj/PROTOCOLSTDUART.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction11GetStopBitsEv
                0x00000000        0x0 obj/PROTOCOLSTDUART.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction11GetBaudRateEv
                0x00000000        0x0 obj/PROTOCOLSTDUART.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction12GetLastErrorEv
                0x00000000        0x0 obj/PROTOCOLSTDUART.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction8SetErrorEi
                0x00000000        0x0 obj/PROTOCOLSTDUART.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction9GetParityEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction12GetFrameBitsEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction11GetStopBitsEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction11GetBaudRateEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction12GetLastErrorEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction8SetErrorEi
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction23ClearTransmissionBufferEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction7TurnOffEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction6TurnOnEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00007000         0x0002ffff
rodata           0x00037000         0x00001fff
data             0x03ff5000         0x00005fff
stack            0x03ffdfe0         0x00001000
xdata            0x00110000         0x0001ffff
*default*        0x00000000         0xffffffff
ramcode          0x00000000         0xffffffff
tdata            0x00000000         0xffffffff
rosdata          0x00000000         0xffffffff
sdata            0x00000000         0xffffffff
disk             0x00000000         0xffffffff

Linker script and memory map

LOAD obj/startup.o

.init
 *(.init)

.plt
 *(.plt)

.text           0x00007000    0x289b6
                0x00007000                __stext = .
                0x00007000                __ctbp = .
 *(.call_table_data)
                0x00007000                . = ALIGN (0x10)
 *(.text)
 .text          0x00007000      0x7f4 obj/startup.o
                0x00007720                __return_interrupt
                0x000077e8                _cpu_initial
                0x00007000                _irqJump
                0x00007790                __restore_all_interrupt
                0x00007738                __save_all_interrupt
                0x00007700                __save_interrupt
 .text          0x000077f4       0x8c obj/crt0.o
                0x000077f4                _start
 .text          0x00007880       0x60 obj/crt1.o
                0x00007880                ___main
 .text          0x000078e0      0xb22 obj/main.o
                0x000078e0                FlashLed()
                0x000079e0                Asciihex_to_num(char*)
                0x00007a0e                Num_to_Asciihex(unsigned short, char*)
                0x00007ac6                _main
 .text          0x00008402      0x522 obj/IEETEST.o
                0x00008402                read_factory_gain_param(unsigned char, float*, float*, int*, int*)
                0x000085e0                testBase()
 .text          0x00008924      0xad8 obj/IRQSG2.o
                0x000090b4                _irq_INTCB1R
                0x00008924                _irq_init
                0x00008f8e                _irq_INTTP4CC1
                0x00008fe2                _irq_INTTP5CC0
                0x00008b84                _irq_INTP2
                0x00008bd4                _irq_INTP4
                0x00008ee6                _irq_INTTP3CC0
                0x00008dea                _irq_INTTP1CC0
                0x00008d96                _irq_INTTP0CC1
                0x00008a44                _irq_RESET
                0x00008d18                _irq_INTTQ0CC3
                0x000089be                _irq_resetVect
                0x00008b5c                _irq_INTP1
                0x00009354                _irq_INTDMA3
                0x00008ae4                _irq_ILGOP_TRAPDB
                0x00009132                _irq_INTCB2T
                0x000093d2                _irq_INTWT
                0x00009060                _irq_INTCB0R_INTIIC1
                0x0000932a                _irq_INTDMA2
                0x00008d6c                _irq_INTTP0CC0
                0x00008e68                _irq_INTTP2CC0
                0x00008f64                _irq_INTTP4CC0
                0x00008b0c                _irq_INTLVI
                0x00008fb8                _irq_INTTP5OV
                0x00008ebc                _irq_INTTP3OV
                0x000092d6                _irq_INTDMA0
                0x000092ac                _irq_INTAD
                0x0000900c                _irq_INTTP5CC1
                0x00008c24                _irq_INTP6
                0x00008bac                _irq_INTP3
                0x00008a6c                _irq_NMI
                0x0000908a                _irq_INTCB0T
                0x00008c74                _irq_INTTQ0OV
                0x00008e14                _irq_INTTP1CC1
                0x00009186                _irq_INTCB3T
                0x00009282                _irq_INTUA2T
                0x00009108                _irq_INTCB2R
                0x00008966                _irq_setVect
                0x0000937e                _irq_INTKR
                0x00009036                _irq_INTTM0EQ0
                0x00008b34                _irq_INTP0
                0x00008cc4                _irq_INTTQ0CC1
                0x000090de                _irq_INTCB1T
                0x000089f6                _irq_chkErrors
                0x00009258                _irq_INTUA2R_INTIIC0
                0x00008e92                _irq_INTTP2CC1
                0x0000915c                _irq_INTCB3R
                0x000091b0                _irq_INTUA0R_INTCB4R
                0x00008bfc                _irq_INTP5
                0x00008f10                _irq_INTTP3CC1
                0x00008c4c                _irq_INTP7
                0x00008a94                _irq_TRAP0
                0x000093a8                _irq_INTWTI
                0x00008dc0                _irq_INTTP1OV
                0x00008f3a                _irq_INTTP4OV
                0x00008abc                _irq_TRAP1
                0x0000922e                _irq_INTUA1T
                0x000091da                _irq_INTUA0T_INTCB4T
                0x00008cee                _irq_INTTQ0CC2
                0x00008e3e                _irq_INTTP2OV
                0x00009204                _irq_INTUA1R_INTIIC2
                0x00008d42                _irq_INTTP0OV
                0x00009300                _irq_INTDMA1
                0x00008c9c                _irq_INTTQ0CC0
 .text          0x000093fc      0x282 obj/ALLOC.o
                0x000093fc                _mem_init
                0x000094aa                _mem_alloc
                0x0000946c                _mem_count
                0x00009486                _mem_left
                0x000095aa                _mem_free
 .text          0x0000967e       0xa0 obj/NEW.o
                0x000096a0                operator delete(void*)
                0x000096c2                operator new[](unsigned int)
                0x000096f0                operator new(unsigned int)
                0x0000967e                operator delete[](void*)
 .text          0x0000971e      0x3e4 obj/STRCLASS.o
                0x000099e0                String::String(char const*)
                0x0000971e                String::String()
                0x00009740                String::String()
                0x00009762                String::operator=(char const*)
                0x0000980a                String::init(char*)
                0x000098aa                String::String(String const&)
                0x00009a52                String::operator=(String const&)
                0x0000990c                String::String(String const&)
                0x0000996e                String::String(char const*)
 .text          0x00009b02      0x10c obj/SWTIM.o
                0x00009b02                Timer::Timer()
                0x00009b0c                Timer::Timer()
                0x00009b6c                IncTimer::getMsec()
                0x00009b16                IncTimer::getTime()
                0x00009ba4                DecTimer::Match()
 .text          0x00009c0e      0x774 obj/util.o
                0x00009c2e                strset(char*, int)
                0x00009c46                HexToInt(int&, char*, int)
                0x00009f90                bubble_sort_array(int, unsigned long*)
                0x00009e6c                skipWhites(unsigned char*)
                0x00009f60                addstr(char*, char const*)
                0x00009f06                fsumstr(char*, char*, int, int, int)
                0x00009dea                ltrim(char*)
                0x00009de6                matherr(exception*)
                0x0000a1e0                cdaten(char*)
                0x0000a284                IntToHex(int, char*, unsigned int)
                0x00009edc                sumstr(char*, char*, int, int)
                0x0000a186                cdate(char*)
                0x0000a138                chgext(char*, char*)
                0x00009e32                rtrim(char*)
                0x00009d4e                _1on8_to_int(unsigned char)
                0x00009d70                windowFilter(short*, short*, int, int, int)
                0x00009e9a                packWhites(unsigned char*)
                0x00009fc0                fmtReal(long, int, int)
                0x00009c0e                my_pow10(short)
                0x0000a0b8                pperc(char*, float, float)
 .text          0x0000a382      0x420 obj/I2C_SW.o
                0x0000a70e                _i2c_ack
                0x0000a4d8                _i2c_putc
                0x0000a392                _i2c_start
                0x0000a410                _i2c_stop
                0x0000a656                _i2c_getc
                0x0000a382                _i2c_delay
                0x0000a48a                _i2c_init
 .text          0x0000a7a2      0x86e obj/I2Ceeprom.o
                0x0000a8e4                EE_write(void*, unsigned char, unsigned char)
                0x0000ab84                EE_sequential_random_read(unsigned char, unsigned char*, unsigned char)
                0x0000a7a2                EE_init()
                0x0000af9c                EE_read_current_address(unsigned char*)
                0x0000aeee                EE_random_byte_read(unsigned char, unsigned char*)
                0x0000ada8                EE_read_word(unsigned char)
                0x0000ae3e                EE_sequential_current_read(unsigned char*, unsigned char)
                0x0000ad12                EE_read_int(unsigned char)
                0x0000aa98                EE_byte_write(unsigned char, unsigned char)
                0x0000ac70                EE_read_float(unsigned char)
 .text          0x0000b010      0x664 obj/sioSG2.o
                0x0000b26c                _sio_getc_ch1
                0x0000b134                _sio_disable_rx_interrupt_ch1
                0x0000b184                _sio_disable_tx_interrupt_ch1
                0x0000b116                _sio_enable_rx_interrupt_ch2
                0x0000b300                _sio_clocksel_ch2
                0x0000b166                _sio_enable_tx_interrupt_ch2
                0x0000b4b8                _sio_fill_ch3
                0x0000b15c                _sio_enable_tx_interrupt_ch1
                0x0000b054                _sio_init_ch1
                0x0000b17a                _sio_disable_tx_interrupt_ch0
                0x0000b620                _sio_getw_ch3
                0x0000b45e                _sio_xfr_ch3
                0x0000b12a                _sio_disable_rx_interrupt_ch0
                0x0000b382                _sio_xfr_ch2
                0x0000b424                _sio_getc_ch3
                0x0000b1ea                _sio_getc_ch0
                0x0000b23a                _sio_putc_ch1
                0x0000b148                _sio_disable_rx_interrupt_ch3
                0x0000b120                _sio_enable_rx_interrupt_ch3
                0x0000b102                _sio_enable_rx_interrupt_ch0
                0x0000b198                _sio_disable_tx_interrupt_ch3
                0x0000b348                _sio_getc_ch2
                0x0000b18e                _sio_disable_tx_interrupt_ch2
                0x0000b418                _sio_busy_ch3
                0x0000b170                _sio_enable_tx_interrupt_ch3
                0x0000b1b8                _sio_putc_ch0
                0x0000b33c                _sio_busy_ch2
                0x0000b576                _sio_read_ch3
                0x0000b224                _sio_clocksel_ch1
                0x0000b1a2                _sio_clocksel_ch0
                0x0000b514                _sio_write_ch3
                0x0000b260                _sio_busy_ch1
                0x0000b5da                _sio_putw_ch3
                0x0000b3f2                _sio_putc_ch3
                0x0000b056                _sio_init_ch2
                0x0000b1de                _sio_busy_ch0
                0x0000b10c                _sio_enable_rx_interrupt_ch1
                0x0000b010                _sio_init_ch0
                0x0000b152                _sio_enable_tx_interrupt_ch0
                0x0000b13e                _sio_disable_rx_interrupt_ch2
                0x0000b3dc                _sio_clocksel_ch3
                0x0000b2a6                _sio_xfr_ch1
                0x0000b058                _sio_init_ch3
                0x0000b316                _sio_putc_ch2
 .text          0x0000b674      0x3e2 obj/SOUND.o
                0x0000b7a2                _goBuzzer
                0x0000b6b2                _shutBuzzer
                0x0000b69e                _buzzer_isPlaying
                0x0000b674                buzzer_stop()
                0x0000b73a                buzzer_start()
                0x0000b810                _buzzer_init
                0x0000b9a4                _buzzerManager
                0x0000b6c8                setPWM(unsigned short, unsigned char)
                0x0000b6a8                _buzzerSound
 .text          0x0000ba56     0x4ce6 obj/ADC.o
                0x0000bef8                CS5530_rstValidDataPresentInADCBuffer()
                0x0000e1fc                CS5530_sendCmd(CS5530_command, unsigned char*)
                0x0000c53c                setSPI1mode()
                0x0000c526                txBufferEmptySpi2()
                0x0000c200                CS5530_setAdcCoding(CS5530_adcCoding)
                0x0000c904                resetAdcValues(unsigned char)
                0x0000e16a                txBufferNotEmpty()
                0x0000c4de                startContinuousConversionSpi2()
                0x0000cf42                backup_new_gain_value(unsigned char, float)
                0x0000bc40                CS5530_Spi1Initialization()
                0x0000c2a8                CS5530_setSampleFrequencySpi2(CS5530_sampleFrequecies)
                0x0000bbb6                load_startSampling()
                0x000103bc                CS5530_resetAdcComunication()
                0x0000c994                controlAdcValuesRead()
                0x0000cea6                backup_date_adc_param(char*)
                0x0000c260                CS5530_setRstSysSpi2(CS5530_rstSys)
                0x0000c4c0                CS5530_setOpenCircuitDetectorSpi2(CS5530_openCircuitDetector)
                0x0000c4ea                CS5530_setIntGainADConv(int, unsigned char*)
                0x0000ceca                backup_calib_state(unsigned char, unsigned char)
                0x0000d3a2                CS5530_sendCmdSpi2(CS5530_command, unsigned char*)
                0x0000efd2                CS5530_getWatchdogAdcTimer()
                0x0000cabc                CS5530_validDataPresentInADCBufferSpi2()
                0x0000bfc4                CS5530_setInputShort(CS5530_inputShort)
                0x0000c51c                txBufferIsEmpty()
                0x0000c23c                CS5530_setPowerSafeModeSpi2(CS5530_powerSaveMode)
                0x0000c212                CS5530_setOpenCircuitDetector(CS5530_openCircuitDetector)
                0x0000c296                CS5530_setLatchBitsSpi2(CS5530_outputLatchBits)
                0x0000bfb2                CS5530_setRstSys(CS5530_rstSys)
                0x0000bf3c                CS5530_checkBlockCells(unsigned long*)
                0x0000d10a                get_factory_adc_param()
                0x0000c532                txBufferIsEmptySpi2()
                0x0000d310                txBufferNotEmptySpi2()
                0x0000d090                backup_factory_offset_value(unsigned char, unsigned short)
                0x0000cf7e                reset_backup_factory_values(unsigned char, unsigned char)
                0x0000bffa                CS5530_setSampleFrequecy(CS5530_sampleFrequecies)
                0x0000c230                startContinuousConversion()
                0x0000f8f8                CS5530_EntrySpi1()
                0x0000bfe8                CS5530_setLatchBits(CS5530_outputLatchBits)
                0x0000cfde                backup_factory_gain_param(unsigned char, float, int, int)
                0x0000bfd6                CS5530_setVoltageRef(CS5530_voltageRef)
                0x0000bf02                CS5530_setCounterWaitingData()
                0x00010470                CS5530_validDataPresentInADCBuffer()
                0x0000bbc4                load_stopSampling()
                0x0000c506                CS5530_rstValidDataPresentInADCBufferSpi2()
                0x0001021a                adc_serial_init()
                0x0000c272                CS5530_setInputShortSpi2(CS5530_inputShort)
                0x0000c24e                CS5530_setPowerDownModeSpi2(CS5530_powerDownMode)
                0x0000e18e                SPI_StartTx()
                0x0000bf0c                CS5530_getCounterWaitingData()
                0x0000c224                endContinuousConversion()
                0x0000c510                txBufferEmpty()
                0x0000d334                SPI2_StartTx()
                0x0000bf8e                CS5530_setPowerSafeMode(CS5530_powerSaveMode)
                0x0000eff0                CS5530_EntrySpi2()
                0x0000c5b4                setPINSPI1mode()
                0x0000c4d2                endContinuousConversionSpi2()
                0x0000c5dc                setSPI2mode()
                0x0000d2c8                get_adc_param()
                0x0000c4ae                CS5530_setAdcCodingSpi2(CS5530_adcCoding)
                0x0000cf06                backup_new_offset_value(unsigned char, unsigned short)
                0x0000bdc4                CS5530_Spi2Initialization()
                0x000103ee                adc_uC_init()
                0x0000ba56                samplePower()
                0x0000bf16                CS5530_checkBlockComunication(int)
                0x0000bf68                CS5530_setWatchdogAdcTimer(unsigned long)
                0x0000c66c                setPINSPI2mode()
                0x0000c284                CS5530_setVoltageRefSpi2(CS5530_voltageRef)
                0x0000bfa0                CS5530_setPowerDownMode(CS5530_powerDownMode)
 .text          0x0001073c      0x924 obj/PWM.o
                0x00010cb6                CloseLineEV(int)
                0x00010b36                getStateCoverM3300Pump()
                0x00010b2c                setStateCoverM3300Pump(bool)
                0x00010a22                getCoverPumpState()
                0x000109a6                enable_MOT(int)
                0x00010aa8                getSpeedPump(int)
                0x00010e90                pwmManager()
                0x00010a06                reg_pump_vel(unsigned char, unsigned char)
                0x00010968                enable_PWM_MOT(int)
                0x000107fc                init_PWM_MOT5()
                0x000107f6                init_PWM_MOT2()
                0x00010e02                EVsManager()
                0x000107fa                init_PWM_MOT4()
                0x00010a8c                setSpeedPump(int, unsigned char)
                0x00010a70                getRampPump(int)
                0x00010a38                setBlockRelay(int, int)
                0x00010a58                setRampPump(int, unsigned char)
                0x00010918                enable_PWM_EV()
                0x000107f8                init_PWM_MOT3()
                0x000109d0                disable_PWM_MOT(int)
                0x000108f0                changeEVstatus(unsigned char)
                0x00010ac0                setPwmCycle(int, unsigned char)
                0x00010946                disable_PWM_EV()
                0x00010afa                setPwmMotCycle(int, int)
                0x00010b40                OpenLineEV(int)
                0x0001073c                init_PWM_MOT1()
                0x000108bc                set_PWM_EVuC(unsigned char)
                0x000107fe                init_PWM_EVuC()
 .text          0x00011060     0x165c obj/QUEUEUART.o
                0x00012658                RingBuffer::RingBuffer(unsigned int)
                0x00011b4c                QueueUart::GetNumBytesInTransmissionBuffer()
                0x000112f8                UartDeviceAbstraction::SetTransmissionBuffer(unsigned char)
                0x00011874                UartDeviceAbstraction::TransmitData(unsigned char)
                0x00011e58                QueueUart::SetReceiveCallBack(void (*)(UartDeviceAbstraction*, unsigned int))
                0x00012154                UartDeviceAbstraction::SelectUart1()
                0x000118ec                UartDeviceAbstraction::ReceiveData()
                0x0001116c                UartDeviceAbstraction::TurnOn()
                0x00011f8e                QueueUart::TransmitData(unsigned char const*)
                0x0001140a                UartDeviceAbstraction::IrqHandUA2T(int)
                0x000110ca                RingBuffer::Equals(unsigned char const*, unsigned int)
                0x000119f0                QueueUart::TransmitLock()
                0x00011c2c                QueueUart::SetTransmitCallBack(void (*)(UartDeviceAbstraction*, bool))
                0x000112d6                UartDeviceAbstraction::IsTransmissionBufferEmpty()
                0x00012250                UartDeviceAbstraction::SelectUart0()
                0x00011832                UartDeviceAbstraction::StartTransmission()
                0x00011d98                QueueUart::ReceiveData(unsigned char&)
                0x00011976                QueueUart::StartTransmission()
                0x0001263a                RingBuffer::~RingBuffer()
                0x00011816                UartDeviceAbstraction::TransmitLock()
                0x00011d24                QueueUart::ReceiveData(unsigned short*, int&)
                0x00012338                UartDeviceAbstraction::UartDeviceAbstraction(UartDeviceAbstraction::UARTDevice)
                0x00011ae4                QueueUart::TransmitData(unsigned char const*, int)
                0x00011438                UartDeviceAbstraction::IrqHandUA0R(int)
                0x00011e64                QueueUart::GetNumBytesInReceptionBuffer()
                0x00012594                QueueUart::QueueUart(UartDeviceAbstraction::UARTDevice)
                0x00011110                UartDeviceAbstraction::Init()
                0x00011e5e                QueueUart::GetReceptionBufferSize()
                0x00011fd8                UartDeviceAbstraction::~UartDeviceAbstraction()
                0x0001132a                UartDeviceAbstraction::GetReceptionError()
                0x00011824                UartDeviceAbstraction::TransmitUnlock()
                0x00011b46                QueueUart::GetTransmissionBufferSize()
                0x000116a8                UartDeviceAbstraction::SetBaudRate(UartDeviceAbstraction::UARTBaudRate, bool)
                0x000118de                UartDeviceAbstraction::ReceiveUnlock()
                0x00011272                UartDeviceAbstraction::~UartDeviceAbstraction()
                0x0001120e                UartDeviceAbstraction::~UartDeviceAbstraction()
                0x00011c6c                QueueUart::ReceiveUnlock()
                0x0001185a                UartDeviceAbstraction::StartTransmission(unsigned char)
                0x000113ae                UartDeviceAbstraction::IrqHandUA0T(int)
                0x00011c9c                QueueUart::ClearReceptionBuffer()
                0x0001261c                RingBuffer::~RingBuffer()
                0x00011a6e                QueueUart::TransmitData(unsigned char)
                0x00011c32                QueueUart::ReceiveLock()
                0x00011ba4                QueueUart::TransmitCallback(UartDeviceAbstraction*)
                0x00011954                QueueUart::~QueueUart()
                0x000114d0                UartDeviceAbstraction::IrqHandUA2R(int)
                0x0001151c                UartDeviceAbstraction::SetParity(UartDeviceAbstraction::UARTParity, bool)
                0x000118d0                UartDeviceAbstraction::ReceiveLock()
                0x000118c4                UartDeviceAbstraction::ClearError()
                0x00011a3e                QueueUart::TransmitUnlock()
                0x00012422                UartDeviceAbstraction::UartDeviceAbstraction(UartDeviceAbstraction::UARTDevice)
                0x0001130e                UartDeviceAbstraction::GetReceptionBuffer()
                0x00011de4                QueueUart::ReceiveData(unsigned char*, int&)
                0x000115d0                UartDeviceAbstraction::SetFrameBits(UartDeviceAbstraction::UARTFrameBits, bool)
                0x00011060                RingBuffer::Clear(bool)
                0x00011b5a                QueueUart::GetFreeBytesInTransmissionBuffer()
                0x00011e72                QueueUart::GetFreeBytesInReceptionBuffer()
                0x00011efa                QueueUart::ReceiveCallback(UartDeviceAbstraction*, unsigned int)
                0x00011cba                QueueUart::ClearTransmissionBuffer()
                0x00011484                UartDeviceAbstraction::IrqHandUA1R(int)
                0x0001163c                UartDeviceAbstraction::SetStopBits(UartDeviceAbstraction::UARTStopBits, bool)
                0x00011cdc                QueueUart::ReceiveData(unsigned short&)
                0x000113dc                UartDeviceAbstraction::IrqHandUA1T(int)
                0x00012074                UartDeviceAbstraction::SelectUart2()
                0x0001192c                UartDeviceAbstraction::SetReceiveCallBack(void (*)(UartDeviceAbstraction*, unsigned int))
                0x0001268a                RingBuffer::RingBuffer(unsigned int)
                0x00011098                RingBuffer::Insert(unsigned char)
                0x000111c4                UartDeviceAbstraction::TurnOff()
                0x00012042                QueueUart::~QueueUart()
                0x00011932                QueueUart::~QueueUart()
                0x000118ca                UartDeviceAbstraction::SetTransmitCallBack(void (*)(UartDeviceAbstraction*))
                0x00011ebc                QueueUart::resetFifo()
                0x0001250c                QueueUart::QueueUart(UartDeviceAbstraction::UARTDevice)
 .text          0x000126bc      0x756 obj/PROTOCOLSTDUART.o
                0x0001281c                stdUartProtocolAbstraction::addDataToReceiveBuffer(unsigned char*, int, int)
                0x00012c76                stdUartProtocolAbstraction::stdUartProtocolAbstraction(UartDeviceAbstraction::UARTDevice)
                0x00012c32                stdUartProtocolAbstraction::~stdUartProtocolAbstraction()
                0x00012aae                stdUartProtocolAbstraction::checkTimeOutElapsed()
                0x00012c54                stdUartProtocolAbstraction::~stdUartProtocolAbstraction()
                0x000126c2                stdUartProtocolAbstraction::SetReceiveCallBack(void (*)(UartDeviceAbstraction*, unsigned int))
                0x000129dc                stdUartProtocolAbstraction::SendCommand(unsigned char*, int, int)
                0x00012c00                stdUartProtocolAbstraction::~stdUartProtocolAbstraction()
                0x000127b8                stdUartProtocolAbstraction::rstError()
                0x00012d44                stdUartProtocolAbstraction::stdUartProtocolAbstraction(UartDeviceAbstraction::UARTDevice)
                0x00012952                stdUartProtocolAbstraction::popPacketReceived(int&)
                0x000126ca                stdUartProtocolAbstraction::restoreIntialCondition()
                0x000126bc                stdUartProtocolAbstraction::SetDataAnalyseCallBack(bool (*)(unsigned short, stdUartProtocolAbstraction*))
                0x00012814                stdUartProtocolAbstraction::IsTransmissionAvailable()
                0x000126da                stdUartProtocolAbstraction::setError(int, bool)
                0x000127d2                stdUartProtocolAbstraction::getLastError()
                0x00012b30                stdUartProtocolAbstraction::Manager()
                0x00012a6e                stdUartProtocolAbstraction::setLastDataReceivedBuffer(int)
                0x000129ae                stdUartProtocolAbstraction::calculateChecksum(unsigned char*, unsigned char)
                0x000126c8                stdUartProtocolAbstraction::stdUartProtocolAbstractionReceiveCallback(UartDeviceAbstraction*, unsigned int)
                0x00012818                stdUartProtocolAbstraction::IsReceptionAvailable()
                0x00012992                stdUartProtocolAbstraction::getNewPacketReceived()
                0x0001287a                stdUartProtocolAbstraction::setReceivedOpCode(int)
                0x000127d8                stdUartProtocolAbstraction::popError()
                0x00012998                stdUartProtocolAbstraction::rstNewPacketReceived()
 .text          0x00012e12     0x1eb2 obj/PROTOCOLSIFRA.o
                0x00013456                SIFRAProtocol::getMsg()
                0x0001315a                SIFRAProtocol::SIFRA_getStatusCmdDecode()
                0x000134be                SIFRAProtocol::jumpToLoaderHandler()
                0x00012fa4                SIFRAProtocol::SIFRA_getInfoCmdDecode()
                0x00014c28                SIFRAProtocol::SIFRAProtocol(UartDeviceAbstraction::UARTDevice, int)
                0x000133a8                SIFRAProtocol::checksum(unsigned char, unsigned char, unsigned char)
                0x00012efc                SIFRAProtocol::SIFRA_decodeScalesPhaseCmd(unsigned char*)
                0x000132fa                SIFRAProtocol::getLastRemoteNodeID()
                0x00013208                SIFRAProtocol::SIFRA_setZeroCell8_Cell15()
                0x000131e0                SIFRAProtocol::SIFRA_setResetCalib()
                0x00012e12                SIFRAProtocol::SIFRA_decodeStartCmd(unsigned char*)
                0x000130fa                SIFRAProtocol::SIFRA_setScalesNotCalib()
                0x000131ba                SIFRAProtocol::SIFRA_setZeroVerification()
                0x00013256                SIFRAProtocol::SIFRA_setGainCell15()
                0x0001422a                SIFRAProtocol::Manager()
                0x00012edc                SIFRAProtocol::SIFRA_decodeWeightSensibilityCmd(unsigned char*)
                0x000133e2                SIFRAProtocol::sendMsg(int)
                0x00013300                SIFRAProtocol::checkOpCode(unsigned char, int, int&)
                0x00013ec6                SIFRAProtocol::sendSIFRAStatus()
                0x00012eec                SIFRAProtocol::SIFRA_decodeRestartFormulaCmd(unsigned char*)
                0x0001363c                SIFRAProtocol::sendSIFRARamDebug()
                0x0001477e                SIFRAProtocol::SIFRADataAnalyse(unsigned short, stdUartProtocolAbstraction*)
                0x0001327e                SIFRAProtocol::SIFRA_setJumpToLoader()
                0x00012ff0                SIFRAProtocol::SIFRA_getDebugStartCmdDecode()
                0x0001303c                SIFRAProtocol::SIFRA_getDebugRamCmdDecode()
                0x000132f4                SIFRAProtocol::setLastRemoteNodeID(unsigned char)
                0x00014b8c                SIFRAProtocol::SIFRAProtocol(UartDeviceAbstraction::UARTDevice, int)
                0x000132ee                SIFRAProtocol::getLocalNodeID()
                0x00013b68                SIFRAProtocol::sendSIFRAViaDebug()
                0x000132a6                SIFRAProtocol::resetApplicationHandler()
                0x00014112                SIFRAProtocol::sendSIFRAStart()
                0x00013088                SIFRAProtocol::SIFRA_restartWeightCoverControl()
                0x00014b5a                SIFRAProtocol::~SIFRAProtocol()
                0x000135da                SIFRAProtocol::sendAcknowledge()
                0x00013062                SIFRAProtocol::SIFRA_setWeightSensibility()
                0x00013180                SIFRAProtocol::SIFRA_setStart()
                0x00014b16                SIFRAProtocol::~SIFRAProtocol()
                0x00014b38                SIFRAProtocol::~SIFRAProtocol()
                0x000130d4                SIFRAProtocol::SIFRA_setScalesPhase()
                0x00012f18                SIFRAProtocol::sendSIFRALoadSamples(float)
                0x00013a50                SIFRAProtocol::sendSIFRAStartDebug()
                0x000132e8                SIFRAProtocol::setLocalNodeID(unsigned char)
                0x00013d54                SIFRAProtocol::sendSIFRAInfo()
                0x00013016                SIFRAProtocol::SIFRA_getDebugStatusCmdDecode()
                0x00012fca                SIFRAProtocol::SIFRA_getDebugViaCmdDecode()
                0x0001322e                SIFRAProtocol::SIFRA_setGainCell8()
                0x000130ae                SIFRAProtocol::SIFRA_restartFormula()
                0x00013120                SIFRAProtocol::SIFRA_set_Stop_All()
                0x00013810                SIFRAProtocol::sendSIFRAStatusDebug()
 .text          0x00014cc4    0x125b6 obj/CPUSIFRA_MANAGER.o
                0x00014ff8                SIFRA_Manager::SIFRAMsg_startAcquisitionHandler()
                0x00014cf0                SIFRA_Manager::SIFRABreak_Manager()
                0x0001c7e4                SIFRA_Manager::SIFRARisciacquo_Manager(int)
                0x00018d64                SIFRA_Manager::Verifica_encoder_motori()
                0x00017608                SIFRA_Manager::readLoadInLine8()
                0x00015a96                SIFRA_Manager::Find_Num_of_Enabled_Lines(unsigned char)
                0x0001f338                SIFRA_Manager::SIFRASacca_Manager()
                0x000160dc                SIFRA_Manager::salva_rapporto_flussopeso(int)
                0x0001c30e                SIFRA_Manager::SIFRAService_Manager()
                0x00015a00                SIFRA_Manager::controllo_vuoto(int)
                0x00015ece                SIFRA_Manager::calc_flusso_pompa()
                0x000154fa                SIFRA_Manager::SifraStopTimers()
                0x0001709a                SIFRA_Manager::SIFRA_resetStatusErrorStop()
                0x00021082                SIFRA_Manager::SIFRAMsg_debugRamAskedHandler()
                0x0001559e                SIFRA_Manager::setErrorEEpromReading()
                0x00020ef0                SIFRA_Manager::SIFRATest_OpenMoreEVs()
                0x0001c4ac                SIFRA_Manager::SIFRAST_Manager(int)
                0x00019ad2                SIFRA_Manager::Read_Param_Backup()
                0x00018c34                SIFRA_Manager::calc_next_theor_weight(int)
                0x00026a60                SIFRA_Manager::SIFRA_Manager(SIFRAProtocol*)
                0x00017212                SIFRA_Manager::set_unstable_threshold(unsigned char)
                0x00015856                SIFRA_Manager::getSIFRApreviousStatus()
                0x00014cda                SIFRA_Manager::~SIFRA_Manager()
                0x0001a048                SIFRA_Manager::Backup_StatoStart()
                0x0001587c                SIFRA_Manager::getSIFRAphase()
                0x0002117a                SIFRA_Manager::SIFRAMsg_infoAskedHandler()
                0x0001512a                SIFRA_Manager::SifraResetViaStatus()
                0x00015e3c                SIFRA_Manager::ResetMotorStepCounter()
                0x00018f62                SIFRA_Manager::controllo_non_cala(int, int)
                0x00019508                SIFRA_Manager::SIFRARampe_Manager(unsigned char, unsigned char)
                0x00023662                SIFRA_Manager::SIFRATest_FlussoPompa(int)
                0x0001ad52                SIFRA_Manager::readZeroInBothLine()
                0x000211b8                SIFRA_Manager::SIFRAMsg_statusAskedHandler()
                0x00019872                SIFRA_Manager::SifraResetStateMachine()
                0x0001686c                SIFRA_Manager::calc_param_weight(ChannelsBackupParam*)
                0x00021272                SIFRA_Manager::Decode_StartMsg()
                0x000164be                SIFRA_Manager::check_volume_error(int)
                0x00019426                SIFRA_Manager::SIFRASpeedPump_Manager(unsigned char)
                0x0002410e                SIFRA_Manager::SIFRACalibr_Manager()
                0x0001c09a                SIFRA_Manager::SIFRAOpenLineEV(int)
                0x000158a2                SIFRA_Manager::controllo_flussopeso(long, unsigned short, float)
                0x000155c2                SIFRA_Manager::GetSystemLoad(unsigned long*)
                0x000152f0                SIFRA_Manager::SifraResetStartCmd()
                0x0001b3ae                SIFRA_Manager::DefaultSystemReset()
                0x00015e9e                SIFRA_Manager::getStatePump(int)
                0x0001501a                SIFRA_Manager::SIFRAMsg_resetApplicationHandler()
                0x00016f0a                SIFRA_Manager::Encoder_counter()
                0x0001b69a                SIFRA_Manager::SIFRATestPinch()
                0x00017460                SIFRA_Manager::Init_Variables()
                0x0001b3f8                SIFRA_Manager::SIFRAStop_Manager()
                0x00016250                SIFRA_Manager::Set_START_Erogazione(int)
                0x000150b6                SIFRA_Manager::SIFRAMsg_protocolErrorHandler()
                0x0001b660                SIFRA_Manager::SIFRACloseLineEV(int)
                0x0001e484                SIFRA_Manager::SIFRAManual_Manager(int)
                0x00016b28                SIFRA_Manager::AdattaPesoSpecifico(unsigned short)
                0x0001576a                SIFRA_Manager::SIFRASetScalesPhase(unsigned char, unsigned char)
                0x00019228                SIFRA_Manager::FlashLed_hw_error()
                0x00016972                SIFRA_Manager::aggiorna_capacita(unsigned short, unsigned short, float)
                0x0001538e                SIFRA_Manager::SifraResetFillingData()
                0x00019a26                SIFRA_Manager::Read_Param_Encoder()
                0x0001797c                SIFRA_Manager::Verifica_peso_massimo()
                0x0001b2cc                SIFRA_Manager::SifraResetSystemParams()
                0x000170f0                SIFRA_Manager::SIFRA_resetStatusError()
                0x00019f72                SIFRA_Manager::default_struttura_flussopeso()
                0x000172f4                SIFRA_Manager::SIFRAPhase_manager()
                0x00016fa8                SIFRA_Manager::EncoderPumpsControl()
                0x00017b14                SIFRA_Manager::Verifica_celle()
                0x00024626                SIFRA_Manager::SIFRASetScalesNotCalib()
                0x0001bdf6                SIFRA_Manager::SIFRAError_Manager()
                0x00019b82                SIFRA_Manager::DownLoad_StatoStart()
                0x000153f4                SIFRA_Manager::SifraResetServiceData()
                0x0001632a                SIFRA_Manager::set_air_alarm(int)
                0x00015b3e                SIFRA_Manager::Find_Enable_line(unsigned char)
                0x000161c2                SIFRA_Manager::setta_led_pannello(int, bool)
                0x000197fe                SIFRA_Manager::setStatePump(int, int)
                0x000246a8                SIFRA_Manager::SIFRASample_Manager()
                0x0001a68a                SIFRA_Manager::readLoadInLine15()
                0x000163e4                SIFRA_Manager::check_conditions(int)
                0x0001507c                SIFRA_Manager::SIFRAMsg_hwErrorHandler()
                0x00016a96                SIFRA_Manager::ViaDaEseguire()
                0x00026246                SIFRA_Manager::SIFRA_Manager(SIFRAProtocol*)
                0x000211f6                SIFRA_Manager::SIFRAMsg_setStartHandler()
                0x00014cc4                SIFRA_Manager::~SIFRA_Manager()
                0x00025730                SIFRA_Manager::Manager()
                0x0001b258                SIFRA_Manager::SifraResetStatus()
                0x00019e16                SIFRA_Manager::Write_Param_Encoder()
                0x0001713e                SIFRA_Manager::Set_weight_threshold()
                0x00015ba6                SIFRA_Manager::read_encoder_motors(int)
                0x00024f16                SIFRA_Manager::SIFRAcheck_new_command()
                0x00015704                SIFRA_Manager::changeSIFRAstatus(unsigned char)
                0x00015452                SIFRA_Manager::SifraResetBackup()
                0x00017cac                SIFRA_Manager::SIFRAAirIn_Manager()
                0x00019ec2                SIFRA_Manager::Write_Param_Backup()
                0x000150f0                SIFRA_Manager::SIFRAMsg_unknownErrorHandler()
                0x000178e4                SIFRA_Manager::SIFRACalibResetData()
                0x0001a25e                SIFRA_Manager::VerificaESD_Damage()
                0x000210fe                SIFRA_Manager::SIFRAMsg_debugStartAskedHandler()
                0x000183ec                SIFRA_Manager::SIFRATestLed_Manager()
                0x0001d372                SIFRA_Manager::SIFRART_Manager(int)
                0x00017874                SIFRA_Manager::Setta_filtro_peso(int)
                0x0001a5ac                SIFRA_Manager::SetHardwareVersion()
                0x0001c16a                SIFRA_Manager::SIFRATestEMC_Manager()
                0x00014de4                SIFRA_Manager::SIFRAWeightControlRestart(char)
                0x00022a82                SIFRA_Manager::SIFRALed_Manager()
                0x00015830                SIFRA_Manager::getSIFRAstatus()
                0x00021234                SIFRA_Manager::SIFRAMsg_setStopAllHandler()
                0x000238dc                SIFRA_Manager::SIFRATest_Pompe(int)
                0x0002113c                SIFRA_Manager::SIFRAMsg_debugViaAskedHandler()
                0x0001717c                SIFRA_Manager::LoadControl()
                0x0001994e                SIFRA_Manager::Verifica_apertura_sportello()
                0x000162b0                SIFRA_Manager::reset_state_this_led(int, bool)
                0x00016a20                SIFRA_Manager::controllo_capacita_iniziale(unsigned short)
                0x000210c0                SIFRA_Manager::SIFRAMsg_debugStatusAskedHandler()
                0x00016c28                SIFRA_Manager::UpdateDebugStruct()
                0x00015c70                SIFRA_Manager::encoder_updateCnt()
 .text          0x0002727a      0x792 obj/NVRDRV.o
                0x00027348                _nvr_chkRead
                0x00027764                _nvr_readUserChkBlock
                0x00027420                _nvr_writeUserChkBlock
                0x000273c0                _drv_writeMem
                0x00027832                _nvr_readParam
                0x0002727a                _nvr_init
                0x000274c4                _nvr_writeParam
                0x0002762c                _nvr_chkVerify
                0x000273fa                _nvr_chkWrite
                0x000272b2                _nvr_setDeviceAddress
                0x000275ee                _nvr_writeUserMem
                0x00027382                _nvr_readUserMem
                0x0002729c                _nvr_errors
                0x0002730e                _drv_readMem
                0x000272d0                _nvr_chkCalcBuf
 .text          0x00027a0c      0x2aa obj/LEDS_PANEL.o
                0x00027b6c                _switchoff_leds
                0x00027a0c                _LedDrivers_clearFifo
                0x00027a64                _switchon_red_leds
                0x00027b14                _switchon_leds
                0x00027c50                _LedDrivers_init
                0x00027a2a                _LedDrivers_sendData
                0x00027bb4                _LedDrivers_DisplayTest
                0x00027abc                _switchon_green_leds
 .text          0x00027cb6       0x20 c:\gcc850\lib\libc.a(lib_a-atoi.o)
                0x00027cc6                _atoi
                0x00027cb6                __atoi_r
 .text          0x00027cd6       0x20 c:\gcc850\lib\libc.a(lib_a-memcpy.o)
                0x00027cd6                _memcpy
 .text          0x00027cf6       0x1a c:\gcc850\lib\libc.a(lib_a-memset.o)
                0x00027cf6                _memset
 .text          0x00027d10       0xa6 c:\gcc850\lib\libc.a(lib_a-sprintf.o)
                0x00027d10                _sprintf
                0x00027d66                __sprintf_r
 .text          0x00027db6       0x34 c:\gcc850\lib\libc.a(lib_a-strcmp.o)
                0x00027db6                _strcmp
 .text          0x00027dea       0x20 c:\gcc850\lib\libc.a(lib_a-strcpy.o)
                0x00027dea                _strcpy
 .text          0x00027e0a       0x1a c:\gcc850\lib\libc.a(lib_a-strlen.o)
                0x00027e0a                _strlen
 .text          0x00027e24      0x226 c:\gcc850\lib\libc.a(lib_a-strtol.o)
                0x00028030                _strtol
                0x00027e24                __strtol_r
 .text          0x0002804a     0x1a6a c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
                0x000281f4                __svfprintf_r
 .text          0x00029ab4        0x0 c:\gcc850\lib\libc.a(lib_a-ctype_.o)
 .text          0x00029ab4     0x1530 c:\gcc850\lib\libc.a(lib_a-dtoa.o)
                0x00029cc2                __dtoa_r
 .text          0x0002afe4      0x324 c:\gcc850\lib\libc.a(lib_a-freer.o)
                0x0002afe4                __malloc_trim_r
                0x0002b0b4                __free_r
 .text          0x0002b308        0x0 c:\gcc850\lib\libc.a(lib_a-impure.o)
 .text          0x0002b308       0x9a c:\gcc850\lib\libc.a(lib_a-locale.o)
                0x0002b38c                _setlocale
                0x0002b326                __setlocale_r
                0x0002b308                ___locale_charset
                0x0002b31c                _localeconv
                0x0002b312                __localeconv_r
 .text          0x0002b3a2      0x6a8 c:\gcc850\lib\libc.a(lib_a-mallocr.o)
                0x0002b3a2                __malloc_r
 .text          0x0002ba4a       0x32 c:\gcc850\lib\libc.a(lib_a-memchr.o)
                0x0002ba4a                _memchr
 .text          0x0002ba7c       0x48 c:\gcc850\lib\libc.a(lib_a-memmove.o)
                0x0002ba7c                _memmove
 .text          0x0002bac4        0x4 c:\gcc850\lib\libc.a(lib_a-mlock.o)
                0x0002bac4                ___malloc_lock
                0x0002bac6                ___malloc_unlock
 .text          0x0002bac8      0xbc8 c:\gcc850\lib\libc.a(lib_a-mprec.o)
                0x0002bef8                ___d2b
                0x0002be20                ___any_on
                0x0002bbb2                ___mcmp
                0x0002c206                ___multiply
                0x0002bc42                ___b2d
                0x0002bdd2                ___copybits
                0x0002bff8                ___mdiff
                0x0002c5d0                ___s2b
                0x0002bb36                ___lo0bits
                0x0002be8a                __Balloc
                0x0002bd78                __mprec_log10
                0x0002c44a                ___multadd
                0x0002bd04                ___ratio
                0x0002c430                ___i2b
                0x0002c50e                ___pow5mult
                0x0002c124                ___lshift
                0x0002bac8                __Bfree
                0x0002bae6                ___hi0bits
                0x0002bbee                ___ulp
 .text          0x0002c690      0x452 c:\gcc850\lib\libc.a(lib_a-reallocr.o)
                0x0002c690                __realloc_r
 .text          0x0002cae2       0x26 c:\gcc850\lib\libc.a(lib_a-s_isinfd.o)
                0x0002cae2                ___isinfd
 .text          0x0002cb08       0x1e c:\gcc850\lib\libc.a(lib_a-s_isnand.o)
                0x0002cb08                ___isnand
 .text          0x0002cb26       0x2a c:\gcc850\lib\libc.a(lib_a-sbrkr.o)
                0x0002cb26                __sbrk_r
 .text          0x0002cb50       0x16 c:\gcc850\lib\libc.a(lib_a-stat.o)
                0x0002cb50                __stat
 .text          0x0002cb66       0x12 c:\gcc850\lib\libc.a(lib_a-trap.o)
                0x0002cb66                ___trap0
 .text          0x0002cb78       0x8a c:\gcc850\lib\libc.a(lib_a-callocr.o)
                0x0002cb78                __calloc_r
 .text          0x0002cc02       0x5e c:\gcc850\lib\libc.a(lib_a-sbrk.o)
                0x0002cc02                __sbrk
 .text          0x0002cc60       0x16 c:\gcc850\lib\libc.a(lib_a-write.o)
                0x0002cc60                __write
 .text          0x0002cc76       0x10 c:\gcc850\lib\libc.a(lib_a-abort.o)
                0x0002cc76                _abort
 .text          0x0002cc86      0x1a8 c:\gcc850\lib\libc.a(lib_a-signal.o)
                0x0002cc86                __raise_r
                0x0002cdb8                ___sigtramp
                0x0002ccf2                _raise
                0x0002cd44                __init_signal
                0x0002cd54                ___sigtramp_r
                0x0002ce18                _signal
                0x0002cdca                __signal_r
                0x0002cd04                __init_signal_r
 .text          0x0002ce2e       0x3a c:\gcc850\lib\libc.a(lib_a-signalr.o)
                0x0002ce2e                __getpid_r
                0x0002ce3a                __kill_r
 .text          0x0002ce68       0x4a c:\gcc850\lib\libc.a(lib_a-_Exit.o)
                0x0002ce68                __exit
 .text          0x0002ceb2        0x4 c:\gcc850\lib\libc.a(lib_a-getpid.o)
                0x0002ceb2                __getpid
 .text          0x0002ceb6       0x18 c:\gcc850\lib\libc.a(lib_a-kill.o)
                0x0002ceb6                __kill
 .text          0x0002cece       0x3e c:\gcc850\lib\libgcc.a(_mulsi3.o)
                0x0002cece                ___mulsi3
 .text          0x0002cf0c       0x32 c:\gcc850\lib\libgcc.a(_divsi3.o)
                0x0002cf0c                ___divsi3
 .text          0x0002cf3e       0x36 c:\gcc850\lib\libgcc.a(_udivsi3.o)
                0x0002cf3e                ___udivsi3
 .text          0x0002cf74       0x2a c:\gcc850\lib\libgcc.a(_modsi3.o)
                0x0002cf74                ___modsi3
 .text          0x0002cf9e       0x2a c:\gcc850\lib\libgcc.a(_umodsi3.o)
                0x0002cf9e                ___umodsi3
 .text          0x0002cfc8       0x68 c:\gcc850\lib\libgcc.a(_save_20c.o)
                0x0002cffc                __return_r20_r31
                0x0002cfc8                __save_r20_r31
 .text          0x0002d030       0x50 c:\gcc850\lib\libgcc.a(_save_23c.o)
                0x0002d030                __save_r23_r31
                0x0002d058                __return_r23_r31
 .text          0x0002d080       0x40 c:\gcc850\lib\libgcc.a(_save_25c.o)
                0x0002d0a0                __return_r25_r31
                0x0002d080                __save_r25_r31
 .text          0x0002d0c0       0x38 c:\gcc850\lib\libgcc.a(_save_26c.o)
                0x0002d0dc                __return_r26_r31
                0x0002d0c0                __save_r26_r31
 .text          0x0002d0f8       0x30 c:\gcc850\lib\libgcc.a(_save_27c.o)
                0x0002d0f8                __save_r27_r31
                0x0002d110                __return_r27_r31
 .text          0x0002d128       0x28 c:\gcc850\lib\libgcc.a(_save_28c.o)
                0x0002d128                __save_r28_r31
                0x0002d13c                __return_r28_r31
 .text          0x0002d150       0x20 c:\gcc850\lib\libgcc.a(_save_29c.o)
                0x0002d160                __return_r29_r31
                0x0002d150                __save_r29_r31
 .text          0x0002d170       0x18 c:\gcc850\lib\libgcc.a(_save_31c.o)
                0x0002d17c                __return_r31
                0x0002d170                __save_r31
 .text          0x0002d188       0x14 c:\gcc850\lib\libgcc.a(_save_varargs.o)
                0x0002d188                __save_r6_r9
 .text          0x0002d19c       0x36 c:\gcc850\lib\libgcc.a(_fixunssfsi.o)
                0x0002d19c                ___fixunssfsi
 .text          0x0002d1d2      0x25e c:\gcc850\lib\libgcc.a(_addsub_sf.o)
                0x0002d378                ___subsf3
                0x0002d3da                ___addsf3
 .text          0x0002d430      0x174 c:\gcc850\lib\libgcc.a(_mul_sf.o)
                0x0002d430                ___mulsf3
 .text          0x0002d5a4      0x11c c:\gcc850\lib\libgcc.a(_div_sf.o)
                0x0002d5a4                ___divsf3
 .text          0x0002d6c0       0x66 c:\gcc850\lib\libgcc.a(_eq_sf.o)
                0x0002d6c0                ___eqsf2
 .text          0x0002d726       0x66 c:\gcc850\lib\libgcc.a(_ne_sf.o)
                0x0002d726                ___nesf2
 .text          0x0002d78c       0x60 c:\gcc850\lib\libgcc.a(_gt_sf.o)
                0x0002d78c                ___gtsf2
 .text          0x0002d7ec       0x60 c:\gcc850\lib\libgcc.a(_ge_sf.o)
                0x0002d7ec                ___gesf2
 .text          0x0002d84c       0x66 c:\gcc850\lib\libgcc.a(_lt_sf.o)
                0x0002d84c                ___ltsf2
 .text          0x0002d8b2       0x66 c:\gcc850\lib\libgcc.a(_le_sf.o)
                0x0002d8b2                ___lesf2
 .text          0x0002d918       0x70 c:\gcc850\lib\libgcc.a(_si_to_sf.o)
                0x0002d918                ___floatsisf
 .text          0x0002d988       0x82 c:\gcc850\lib\libgcc.a(_sf_to_si.o)
                0x0002d988                ___fixsfsi
 .text          0x0002da0a        0x0 c:\gcc850\lib\libgcc.a(_thenan_sf.o)
 .text          0x0002da0a       0x7a c:\gcc850\lib\libgcc.a(_usi_to_sf.o)
                0x0002da0a                ___floatunsisf
 .text          0x0002da84      0x3fa c:\gcc850\lib\libgcc.a(_addsub_df.o)
                0x0002ddb6                ___subdf3
                0x0002de20                ___adddf3
 .text          0x0002de7e      0x270 c:\gcc850\lib\libgcc.a(_mul_df.o)
                0x0002de7e                ___muldf3
 .text          0x0002e0ee      0x188 c:\gcc850\lib\libgcc.a(_div_df.o)
                0x0002e0ee                ___divdf3
 .text          0x0002e276       0x6e c:\gcc850\lib\libgcc.a(_eq_df.o)
                0x0002e276                ___eqdf2
 .text          0x0002e2e4       0x6e c:\gcc850\lib\libgcc.a(_ne_df.o)
                0x0002e2e4                ___nedf2
 .text          0x0002e352       0x68 c:\gcc850\lib\libgcc.a(_gt_df.o)
                0x0002e352                ___gtdf2
 .text          0x0002e3ba       0x68 c:\gcc850\lib\libgcc.a(_ge_df.o)
                0x0002e3ba                ___gedf2
 .text          0x0002e422       0x6e c:\gcc850\lib\libgcc.a(_lt_df.o)
                0x0002e422                ___ltdf2
 .text          0x0002e490       0x9e c:\gcc850\lib\libgcc.a(_si_to_df.o)
                0x0002e490                ___floatsidf
 .text          0x0002e52e       0xaa c:\gcc850\lib\libgcc.a(_df_to_si.o)
                0x0002e52e                ___fixdfsi
 .text          0x0002e5d8        0x0 c:\gcc850\lib\libgcc.a(_thenan_df.o)
 .text          0x0002e5d8       0xc2 c:\gcc850\lib\libgcc.a(_usi_to_df.o)
                0x0002e5d8                ___floatunsidf
 .text          0x0002e69a       0x12 c:\gcc850\lib\libgcc.a(_ucmpdi2.o)
                0x0002e69a                ___ucmpdi2
 .text          0x0002e6ac       0xde c:\gcc850\lib\libgcc.a(_muldi3.o)
                0x0002e6ac                ___muldi3
 .text          0x0002e78a       0x58 c:\gcc850\lib\libgcc.a(_clzsi2.o)
                0x0002e78a                ___clzsi2
 .text          0x0002e7e2      0x118 c:\gcc850\lib\libgcc.a(_pack_sf.o)
                0x0002e7e2                ___pack_f
 .text          0x0002e8fa       0xaa c:\gcc850\lib\libgcc.a(_unpack_sf.o)
                0x0002e8fa                ___unpack_f
 .text          0x0002e9a4       0x8c c:\gcc850\lib\libgcc.a(_fpcmp_parts_sf.o)
                0x0002e9a4                ___fpcmp_parts_f
 .text          0x0002ea30      0x1fc c:\gcc850\lib\libgcc.a(_pack_df.o)
                0x0002ea30                ___pack_d
 .text          0x0002ec2c       0xda c:\gcc850\lib\libgcc.a(_unpack_df.o)
                0x0002ec2c                ___unpack_d
 .text          0x0002ed06       0xa4 c:\gcc850\lib\libgcc.a(_fpcmp_parts_df.o)
                0x0002ed06                ___fpcmp_parts_d
 .text          0x0002edaa        0x0 c:\gcc850\lib\libgcc.a(_clz.o)
                0x0002edb0                . = ALIGN (0x10)
 *fill*         0x0002edaa        0x6 00
 *(.call_table_text)
 *(.gnu.warning)
 *(.gnu.linkonce.t*)
 .gnu.linkonce.t._ZN9HwChannelItLi5EE13physicalValueEt
                0x0002edb0       0x3a obj/main.o
                0x0002edb0                HwChannel<unsigned short, 5>::physicalValue(unsigned short)
 .gnu.linkonce.t._ZN9HwChannelImLi10EE13physicalValueEm
                0x0002edea       0x36 obj/main.o
                0x0002edea                HwChannel<unsigned long, 10>::physicalValue(unsigned long)
 .gnu.linkonce.t._ZN20VoltageHwChanManagerItLi5EE14getChannelTypeEv
                0x0002ee20        0xe obj/main.o
                0x0002ee20                VoltageHwChanManager<unsigned short, 5>::getChannelType()
 .gnu.linkonce.t._ZN13HwChanManagerItLi5EE14getChannelTypeEv
                0x0002ee2e        0x4 obj/main.o
                0x0002ee2e                HwChanManager<unsigned short, 5>::getChannelType()
 .gnu.linkonce.t._ZN13HwChanManagerImLi10EE14getChannelTypeEv
                0x0002ee32        0x4 obj/main.o
                0x0002ee32                HwChanManager<unsigned long, 10>::getChannelType()
 .gnu.linkonce.t._ZN6StringD0Ev
                0x0002ee36       0x4e obj/STRCLASS.o
                0x0002ee36                String::~String()
 .gnu.linkonce.t._ZN6StringD1Ev
                0x0002ee84       0x26 obj/STRCLASS.o
                0x0002ee84                String::~String()
 .gnu.linkonce.t._ZN21UartDeviceAbstraction9GetParityEv
                0x0002eeaa        0x6 obj/QUEUEUART.o
                0x0002eeaa                UartDeviceAbstraction::GetParity()
 .gnu.linkonce.t._ZN21UartDeviceAbstraction12GetFrameBitsEv
                0x0002eeb0        0x6 obj/QUEUEUART.o
                0x0002eeb0                UartDeviceAbstraction::GetFrameBits()
 .gnu.linkonce.t._ZN21UartDeviceAbstraction11GetStopBitsEv
                0x0002eeb6        0x6 obj/QUEUEUART.o
                0x0002eeb6                UartDeviceAbstraction::GetStopBits()
 .gnu.linkonce.t._ZN21UartDeviceAbstraction11GetBaudRateEv
                0x0002eebc        0x6 obj/QUEUEUART.o
                0x0002eebc                UartDeviceAbstraction::GetBaudRate()
 .gnu.linkonce.t._ZN21UartDeviceAbstraction12GetLastErrorEv
                0x0002eec2        0x6 obj/QUEUEUART.o
                0x0002eec2                UartDeviceAbstraction::GetLastError()
 .gnu.linkonce.t._ZN21UartDeviceAbstraction8SetErrorEi
                0x0002eec8        0x6 obj/QUEUEUART.o
                0x0002eec8                UartDeviceAbstraction::SetError(int)
 .gnu.linkonce.t._ZN9QueueUart6TurnOnEv
                0x0002eece       0x16 obj/QUEUEUART.o
                0x0002eece                QueueUart::TurnOn()
 .gnu.linkonce.t._ZN9QueueUart7TurnOffEv
                0x0002eee4       0x16 obj/QUEUEUART.o
                0x0002eee4                QueueUart::TurnOff()
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction7sendMsgEi
                0x0002eefa        0x4 obj/PROTOCOLSTDUART.o
                0x0002eefa                stdUartProtocolAbstraction::sendMsg(int)
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction6getMsgEv
                0x0002eefe        0x4 obj/PROTOCOLSTDUART.o
                0x0002eefe                stdUartProtocolAbstraction::getMsg()
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction23ClearTransmissionBufferEv
                0x0002ef02       0x16 obj/PROTOCOLSTDUART.o
                0x0002ef02                stdUartProtocolAbstraction::ClearTransmissionBuffer()
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction31GetNumBytesInTransmissionBufferEv
                0x0002ef18       0x16 obj/PROTOCOLSTDUART.o
                0x0002ef18                stdUartProtocolAbstraction::GetNumBytesInTransmissionBuffer()
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction7TurnOffEv
                0x0002ef2e       0x16 obj/PROTOCOLSTDUART.o
                0x0002ef2e                stdUartProtocolAbstraction::TurnOff()
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction6TurnOnEv
                0x0002ef44       0x16 obj/PROTOCOLSTDUART.o
                0x0002ef44                stdUartProtocolAbstraction::TurnOn()
 .gnu.linkonce.t._ZN13SIFRAProtocol31GetNumBytesInTransmissionBufferEv
                0x0002ef5a       0x16 obj/PROTOCOLSIFRA.o
                0x0002ef5a                SIFRAProtocol::GetNumBytesInTransmissionBuffer()
 .gnu.linkonce.t._ZN5Timer7getTimeEv
                0x0002ef70       0x5a obj/CPUSIFRA_MANAGER.o
                0x0002ef70                Timer::getTime()
 .gnu.linkonce.t._ZN5Timer7getMsecEv
                0x0002efca       0x1e obj/CPUSIFRA_MANAGER.o
                0x0002efca                Timer::getMsec()
 .gnu.linkonce.t._ZN8DecTimerC1Ev
                0x0002efe8       0x44 obj/CPUSIFRA_MANAGER.o
                0x0002efe8                DecTimer::DecTimer()
 .gnu.linkonce.t._ZN8DecTimer6PresetEm
                0x0002f02c       0x68 obj/CPUSIFRA_MANAGER.o
                0x0002f02c                DecTimer::Preset(unsigned long)
 .gnu.linkonce.t._ZN8DecTimer4StopEv
                0x0002f094       0x1e obj/CPUSIFRA_MANAGER.o
                0x0002f094                DecTimer::Stop()
 .gnu.linkonce.t._ZN8DecTimer9getStatusEv
                0x0002f0b2       0x22 obj/CPUSIFRA_MANAGER.o
                0x0002f0b2                DecTimer::getStatus()
 .gnu.linkonce.t._ZN13SIFRAProtocol11getLoadChanEv
                0x0002f0d4       0x1e obj/CPUSIFRA_MANAGER.o
                0x0002f0d4                SIFRAProtocol::getLoadChan()
 .gnu.linkonce.t._ZN13SIFRAProtocol14getLocalNODEIDEv
                0x0002f0f2       0x22 obj/CPUSIFRA_MANAGER.o
                0x0002f0f2                SIFRAProtocol::getLocalNODEID()
 .gnu.linkonce.t._ZN13SIFRA_Manager19readHardwareVersionEv
                0x0002f114       0x2c obj/CPUSIFRA_MANAGER.o
                0x0002f114                SIFRA_Manager::readHardwareVersion()
 .gnu.linkonce.t._ZN13CSmallRingBufI9ViaSampleLi2EE5clearEv
                0x0002f140       0x3e obj/CPUSIFRA_MANAGER.o
                0x0002f140                CSmallRingBuf<ViaSample, 2>::clear()
 .gnu.linkonce.t._ZN13CSmallRingBufI9ViaSampleLi2EEC1Ev
                0x0002f17e       0x36 obj/CPUSIFRA_MANAGER.o
                0x0002f17e                CSmallRingBuf<ViaSample, 2>::CSmallRingBuf()
 .gnu.linkonce.t._ZNK13CSmallRingBufI9ViaSampleLi2EE4fullEv
                0x0002f1b4       0x28 obj/CPUSIFRA_MANAGER.o
                0x0002f1b4                CSmallRingBuf<ViaSample, 2>::full() const
 .gnu.linkonce.t._ZNK13CSmallRingBufI9ViaSampleLi2EE7numItemEv
                0x0002f1dc       0x1e obj/CPUSIFRA_MANAGER.o
                0x0002f1dc                CSmallRingBuf<ViaSample, 2>::numItem() const
 .gnu.linkonce.t._ZNK13CSmallRingBufI9ViaSampleLi2EE5emptyEv
                0x0002f1fa       0x28 obj/CPUSIFRA_MANAGER.o
                0x0002f1fa                CSmallRingBuf<ViaSample, 2>::empty() const
 .gnu.linkonce.t._ZN13CSmallRingBufI9ViaSampleLi2EE14readLastPushedERS0_
                0x0002f222       0x60 obj/CPUSIFRA_MANAGER.o
                0x0002f222                CSmallRingBuf<ViaSample, 2>::readLastPushed(ViaSample&)
 .gnu.linkonce.t._ZN9HwChannelImLi10EE9isEnabledEv
                0x0002f282       0x22 obj/CPUSIFRA_MANAGER.o
                0x0002f282                HwChannel<unsigned long, 10>::isEnabled()
 .gnu.linkonce.t._ZN13CSmallRingBufI9ViaSampleLi2EE7datacpyEPhS2_S2_
                0x0002f2a4       0x58 obj/CPUSIFRA_MANAGER.o
                0x0002f2a4                CSmallRingBuf<ViaSample, 2>::datacpy(unsigned char*, unsigned char*, unsigned char*)
 .gnu.linkonce.t._ZN13CSmallRingBufI9ViaSampleLi2EE9push_backERKS0_
                0x0002f2fc       0xb2 obj/CPUSIFRA_MANAGER.o
                0x0002f2fc                CSmallRingBuf<ViaSample, 2>::push_back(ViaSample const&)
 .gnu.linkonce.t._ZN9HwChannelImLi10EE9setOffsetEl
                0x0002f3ae       0x26 obj/CPUSIFRA_MANAGER.o
                0x0002f3ae                HwChannel<unsigned long, 10>::setOffset(long)
 .gnu.linkonce.t._ZN13HwChanManagerImLi10EE9setOffsetEil
                0x0002f3d4       0x72 obj/CPUSIFRA_MANAGER.o
                0x0002f3d4                HwChanManager<unsigned long, 10>::setOffset(int, long)
 .gnu.linkonce.t._ZN9HwChannelImLi10EE9getOffsetEv
                0x0002f446       0x1e obj/CPUSIFRA_MANAGER.o
                0x0002f446                HwChannel<unsigned long, 10>::getOffset()
 .gnu.linkonce.t._ZN13HwChanManagerImLi10EE9getOffsetEi
                0x0002f464       0x78 obj/CPUSIFRA_MANAGER.o
                0x0002f464                HwChanManager<unsigned long, 10>::getOffset(int)
 .gnu.linkonce.t._ZN9HwChannelImLi10EE7setGainEd
                0x0002f4dc       0x26 obj/CPUSIFRA_MANAGER.o
                0x0002f4dc                HwChannel<unsigned long, 10>::setGain(double)
 .gnu.linkonce.t._ZN13HwChanManagerImLi10EE7setGainEid
                0x0002f502       0x72 obj/CPUSIFRA_MANAGER.o
                0x0002f502                HwChanManager<unsigned long, 10>::setGain(int, double)
 .gnu.linkonce.t._ZN9HwChannelImLi10EE16set_filter_valueEi
                0x0002f574       0xb4 obj/CPUSIFRA_MANAGER.o
                0x0002f574                HwChannel<unsigned long, 10>::set_filter_value(int)
 .gnu.linkonce.t._ZN13HwChanManagerImLi10EE16set_filter_valueEii
                0x0002f628       0x64 obj/CPUSIFRA_MANAGER.o
                0x0002f628                HwChanManager<unsigned long, 10>::set_filter_value(int, int)
 .gnu.linkonce.t._ZNK13CSmallRingBufImLi10EE5emptyEv
                0x0002f68c       0x28 obj/CPUSIFRA_MANAGER.o
                0x0002f68c                CSmallRingBuf<unsigned long, 10>::empty() const
 .gnu.linkonce.t._ZN9HwChannelImLi10EE19isSampleBufferEmptyEv
                0x0002f6b4       0x40 obj/CPUSIFRA_MANAGER.o
                0x0002f6b4                HwChannel<unsigned long, 10>::isSampleBufferEmpty()
 .gnu.linkonce.t._ZN13CSmallRingBufImLi10EE9pop_frontERm
                0x0002f6f4       0x76 obj/CPUSIFRA_MANAGER.o
                0x0002f6f4                CSmallRingBuf<unsigned long, 10>::pop_front(unsigned long&)
 .gnu.linkonce.t._ZN9HwChannelImLi10EE10popAdcDataERm
                0x0002f76a       0x80 obj/CPUSIFRA_MANAGER.o
                0x0002f76a                HwChannel<unsigned long, 10>::popAdcData(unsigned long&)
 .gnu.linkonce.t._ZN13HwChanManagerImLi10EE10popAdcDataEPm
                0x0002f7ea      0x186 obj/CPUSIFRA_MANAGER.o
                0x0002f7ea                HwChanManager<unsigned long, 10>::popAdcData(unsigned long*)
 .gnu.linkonce.t._ZN13SIFRAProtocol14setLocalNODEIDEh
                0x0002f970       0x46 obj/CPUSIFRA_MANAGER.o
                0x0002f970                SIFRAProtocol::setLocalNODEID(unsigned char)

.ctors          0x0002f9b8       0x20
                0x0002f9c0                . = ALIGN (0x10)
 *fill*         0x0002f9b8        0x8 00
                0x0002f9c0                ___ctors = .
 *(.ctors)
 .ctors         0x0002f9c0        0x4 obj/SWTIM.o
 .ctors         0x0002f9c4        0x4 obj/SOUND.o
 .ctors         0x0002f9c8        0x4 obj/ADC.o
 .ctors         0x0002f9cc        0x4 obj/PWM.o
 .ctors         0x0002f9d0        0x4 obj/PROTOCOLSIFRA.o
 .ctors         0x0002f9d4        0x4 obj/LEDS_PANEL.o
                0x0002f9d8                ___ctors_end = .

.dtors          0x0002f9d8        0x0
                0x0002f9d8                ___dtors = .
 *(.dtors)
                0x0002f9d8                ___dtors_end = .
                0x00030000                . = ALIGN (0x1000)
                0x00030000                __etext = .
                0x00030000                PROVIDE (_etext, .)

.ramcode        0x00000000        0x0 load address 0x00030000
                0x00000000                __ramcode_start = .
 *(.ramcode)
                0x00000000                . = ALIGN (0x4)
                0x00000000                __ramcode_end = .

.rodata         0x00037000      0x9f0
                0x00037000                __rodata_start = .
 *(.rodata)
 .rodata        0x00037000       0x38 obj/main.o
                0x00037000                _sAppName
                0x0003700a                _sAppRevision
                0x0003701c                _sAppDate
                0x00037013                _sHwVersion
                0x00037034                _sAppDateLength
                0x00037030                _sHwVersionLength
                0x0003702c                _sAppRevisionLength
                0x00037028                _sAppNameLength
 .rodata        0x00037038        0x1 obj/STRCLASS.o
 *fill*         0x00037039        0x3 00
 .rodata        0x0003703c       0xb8 obj/util.o
 .rodata        0x000370f4       0x75 c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
 .rodata        0x00037169      0x281 c:\gcc850\lib\libc.a(lib_a-ctype_.o)
                0x00037169                __ctype_
 .rodata        0x000373ea        0xf c:\gcc850\lib\libc.a(lib_a-dtoa.o)
 .rodata        0x000373f9        0x2 c:\gcc850\lib\libc.a(lib_a-impure.o)
 *fill*         0x000373fb        0x1 00
 .rodata        0x000373fc       0x48 c:\gcc850\lib\libc.a(lib_a-locale.o)
 .rodata        0x00037444      0x124 c:\gcc850\lib\libc.a(lib_a-mprec.o)
                0x00037534                ___mprec_tinytens
                0x0003750c                ___mprec_bigtens
                0x00037444                ___mprec_tens
 .rodata        0x00037568       0x1a c:\gcc850\lib\libc.a(lib_a-sbrk.o)
 *fill*         0x00037582        0x2 00
 .rodata        0x00037584       0x10 c:\gcc850\lib\libgcc.a(_thenan_sf.o)
                0x00037584                ___thenan_sf
 .rodata        0x00037594       0x14 c:\gcc850\lib\libgcc.a(_thenan_df.o)
                0x00037594                ___thenan_df
 .rodata        0x000375a8      0x100 c:\gcc850\lib\libgcc.a(_clz.o)
                0x000375a8                ___clz_tab
 *(.gnu.linkonce.r*)
 .gnu.linkonce.r._ZTV20GenericHwChanManagerImLi10EE
                0x000376a8        0xc obj/main.o
                0x000376a8                vtable for GenericHwChanManager<unsigned long, 10>
 .gnu.linkonce.r._ZTV13HwChanManagerImLi10EE
                0x000376b4        0xc obj/main.o
                0x000376b4                vtable for HwChanManager<unsigned long, 10>
 .gnu.linkonce.r._ZTV16GenericHwChannelImLi10EE
                0x000376c0        0xc obj/main.o
                0x000376c0                vtable for GenericHwChannel<unsigned long, 10>
 .gnu.linkonce.r._ZTV9HwChannelImLi10EE
                0x000376cc        0xc obj/main.o
                0x000376cc                vtable for HwChannel<unsigned long, 10>
 .gnu.linkonce.r._ZTV20VoltageHwChanManagerItLi5EE
                0x000376d8        0xc obj/main.o
                0x000376d8                vtable for VoltageHwChanManager<unsigned short, 5>
 .gnu.linkonce.r._ZTV13HwChanManagerItLi5EE
                0x000376e4        0xc obj/main.o
                0x000376e4                vtable for HwChanManager<unsigned short, 5>
 .gnu.linkonce.r._ZTV16VoltageHwChannelItLi5EE
                0x000376f0        0xc obj/main.o
                0x000376f0                vtable for VoltageHwChannel<unsigned short, 5>
 .gnu.linkonce.r._ZTV9HwChannelItLi5EE
                0x000376fc        0xc obj/main.o
                0x000376fc                vtable for HwChannel<unsigned short, 5>
 .gnu.linkonce.r._ZTV6String
                0x00037708       0x10 obj/STRCLASS.o
                0x00037708                vtable for String
 .gnu.linkonce.r._ZTV9QueueUart
                0x00037718       0xb0 obj/QUEUEUART.o
                0x00037718                vtable for QueueUart
 .gnu.linkonce.r._ZTV21UartDeviceAbstraction
                0x000377c8       0x70 obj/QUEUEUART.o
                0x000377c8                vtable for UartDeviceAbstraction
 .gnu.linkonce.r._ZTV26stdUartProtocolAbstraction
                0x00037838       0xdc obj/PROTOCOLSTDUART.o
                0x00037838                vtable for stdUartProtocolAbstraction
 .gnu.linkonce.r._ZTV13SIFRAProtocol
                0x00037914       0xdc obj/PROTOCOLSIFRA.o
                0x00037914                vtable for SIFRAProtocol
 *(.gcc_except_table)
                0x000379f0                . = ALIGN (0x4)

.rodata.cst4    0x000379f0        0xc
                0x000379f0                __rodata.cst4_start = .
 *(.rodata.cst4)
 .rodata.cst4   0x000379f0        0x8 c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
 .rodata.cst4   0x000379f8        0x4 c:\gcc850\lib\libc.a(lib_a-dtoa.o)
                0x000379fc                . = ALIGN (0x4)
                0x000379fc                __rodata_end = .
                0x000379fc                PROVIDE (_rodata_end, __rodata_end)
                0x00000000                __message_start = 0x0
                0x00000000                __message_end = 0x0

.data           0x03ff5000      0x858 load address 0x000379fc
                0x03ff5000                . = ALIGN (0x10)
                0x03ff5000                __data_start = .
 *(.data)
 .data          0x03ff5000        0x0 obj/startup.o
 .data          0x03ff5000        0x0 obj/crt0.o
 .data          0x03ff5000        0x0 obj/crt1.o
 .data          0x03ff5000        0x0 obj/main.o
 .data          0x03ff5000       0x14 obj/IEETEST.o
                0x03ff5008                _adc2Kg
                0x03ff5000                _FactoryGain
                0x03ff5010                _type_of_calibration_test
                0x03ff500c                _adc2Kgdx
                0x03ff5004                _Gain
 .data          0x03ff5014        0x2 obj/IRQSG2.o
 *fill*         0x03ff5016        0x2 00
 .data          0x03ff5018        0x8 obj/ALLOC.o
 .data          0x03ff5020        0x0 obj/NEW.o
 .data          0x03ff5020        0x0 obj/STRCLASS.o
 .data          0x03ff5020        0x0 obj/SWTIM.o
 .data          0x03ff5020        0x0 obj/util.o
 .data          0x03ff5020        0x0 obj/I2C_SW.o
 .data          0x03ff5020        0x0 obj/I2Ceeprom.o
 .data          0x03ff5020        0x0 obj/sioSG2.o
 .data          0x03ff5020        0x0 obj/SOUND.o
 .data          0x03ff5020        0x4 obj/ADC.o
 .data          0x03ff5024        0x0 obj/PWM.o
 .data          0x03ff5024        0x0 obj/QUEUEUART.o
 .data          0x03ff5024        0x0 obj/PROTOCOLSTDUART.o
 .data          0x03ff5024        0x0 obj/PROTOCOLSIFRA.o
 .data          0x03ff5024        0x8 obj/CPUSIFRA_MANAGER.o
                0x03ff5024                _m_tolleranza
 .data          0x03ff502c        0x0 obj/NVRDRV.o
 .data          0x03ff502c        0x0 obj/LEDS_PANEL.o
 .data          0x03ff502c        0x0 c:\gcc850\lib\libc.a(lib_a-atoi.o)
 .data          0x03ff502c        0x0 c:\gcc850\lib\libc.a(lib_a-memcpy.o)
 .data          0x03ff502c        0x0 c:\gcc850\lib\libc.a(lib_a-memset.o)
 .data          0x03ff502c        0x0 c:\gcc850\lib\libc.a(lib_a-sprintf.o)
 .data          0x03ff502c        0x0 c:\gcc850\lib\libc.a(lib_a-strcmp.o)
 .data          0x03ff502c        0x0 c:\gcc850\lib\libc.a(lib_a-strcpy.o)
 .data          0x03ff502c        0x0 c:\gcc850\lib\libc.a(lib_a-strlen.o)
 .data          0x03ff502c        0x0 c:\gcc850\lib\libc.a(lib_a-strtol.o)
 .data          0x03ff502c        0x0 c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
 .data          0x03ff502c        0x8 c:\gcc850\lib\libc.a(lib_a-ctype_.o)
                0x03ff5030                ___ctype_ptr__
                0x03ff502c                ___ctype_ptr
 .data          0x03ff5034        0x0 c:\gcc850\lib\libc.a(lib_a-dtoa.o)
 .data          0x03ff5034        0x0 c:\gcc850\lib\libc.a(lib_a-freer.o)
 .data          0x03ff5034      0x400 c:\gcc850\lib\libc.a(lib_a-impure.o)
 .data          0x03ff5434       0x10 c:\gcc850\lib\libc.a(lib_a-locale.o)
                0x03ff5434                ___mb_cur_max
                0x03ff5438                ___lc_ctype
 .data          0x03ff5444      0x410 c:\gcc850\lib\libc.a(lib_a-mallocr.o)
                0x03ff5444                ___malloc_av_
                0x03ff584c                ___malloc_trim_threshold
                0x03ff5850                ___malloc_sbrk_base
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-memchr.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-memmove.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-mlock.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-mprec.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-reallocr.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-s_isinfd.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-s_isnand.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-sbrkr.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-stat.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-trap.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-callocr.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-sbrk.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-write.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-abort.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-signal.o)
 .data          0x03ff5854        0x0 c:\gcc850\lib\libc.a(lib_a-signalr.o)
 .data          0x03ff5854        0x4 c:\gcc850\lib\libc.a(lib_a-_Exit.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libc.a(lib_a-getpid.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libc.a(lib_a-kill.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_mulsi3.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_divsi3.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_udivsi3.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_modsi3.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_umodsi3.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_save_20c.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_save_23c.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_save_25c.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_save_26c.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_save_27c.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_save_28c.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_save_29c.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_save_31c.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_save_varargs.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_fixunssfsi.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_addsub_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_mul_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_div_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_eq_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_ne_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_gt_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_ge_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_lt_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_le_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_si_to_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_sf_to_si.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_thenan_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_usi_to_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_addsub_df.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_mul_df.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_div_df.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_eq_df.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_ne_df.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_gt_df.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_ge_df.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_lt_df.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_si_to_df.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_df_to_si.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_thenan_df.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_usi_to_df.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_ucmpdi2.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_muldi3.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_clzsi2.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_pack_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_unpack_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_fpcmp_parts_sf.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_pack_df.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_unpack_df.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_fpcmp_parts_df.o)
 .data          0x03ff5858        0x0 c:\gcc850\lib\libgcc.a(_clz.o)
 *(.gnu.linkonce.d*)
                0x03ff5858                . = ALIGN (0x4)
                0x03ff5000                PROVIDE (_data_start, __data_start)

.got
 *(.got.plt)
 *(.got)

.dynamic
 *(.dynamic)

.tdata          0x03ff5858        0x0 load address 0x00038254
                0x03ff5858                PROVIDE (__ep, .)
 *(.tbyte)
 *(.tcommon_byte)
 *(.tdata)
 *(.tbss)
 *(.tcommon)
                0x03ff5858                __tdata_end = .

.rosdata        0x03ff5858        0x4 load address 0x00038254
 *(.rosdata)
 .rosdata       0x03ff5858        0x4 c:\gcc850\lib\libc.a(lib_a-impure.o)
                0x03ff5858                __global_impure_ptr

.sdata          0x03ff585c        0x4 load address 0x00038258
                0x03ffd85c                PROVIDE (__gp, (. + 0x8000))
 *(.sdata)
 .sdata         0x03ff585c        0x4 c:\gcc850\lib\libc.a(lib_a-impure.o)
                0x03ff585c                __impure_ptr
                0x03ff5860                __sbss_start = .
 *(.sbss)
 *(.scommon)
                0x03ff5860                __data_end = .
                0x03ff5860                PROVIDE (_data_end, __data_end)
                0x0003825c                PROVIDE (__datarom_end, ((((__rodata_end + SIZEOF (.data)) + SIZEOF (.tdata)) + SIZEOF (.rosdata)) + SIZEOF (.sdata)))
                0x0003825c                PROVIDE (_intflash_end, __datarom_end)
                0x03ff5860                _edata = DEFINED (__sbss_start)?__sbss_start:.
                0x03ff5860                PROVIDE (edata, _edata)

.bss            0x03ff5860      0xd9c
                0x03ff5860                __bss_start = DEFINED (__sbss_start)?__sbss_start:.
 *(.dynbss)
 *(.bss)
 .bss           0x03ff5860        0x0 obj/startup.o
 .bss           0x03ff5860        0x0 obj/crt0.o
 .bss           0x03ff5860        0x2 obj/crt1.o
 *fill*         0x03ff5862        0x2 00
 .bss           0x03ff5864       0x18 obj/main.o
                0x03ff586c                _SifraProtocol
                0x03ff5868                _powerVoltageChan
                0x03ff5876                _time_sec
                0x03ff5874                _time_msec
                0x03ff5870                _CpuSifra
                0x03ff5864                _weightChan
 .bss           0x03ff587c        0x1 obj/IEETEST.o
                0x03ff587c                _numchan
 *fill*         0x03ff587d        0x3 00
 .bss           0x03ff5880       0xf8 obj/IRQSG2.o
 .bss           0x03ff5978       0x14 obj/ALLOC.o
 .bss           0x03ff598c      0x3e8 obj/NEW.o
 .bss           0x03ff5d74        0x0 obj/STRCLASS.o
 .bss           0x03ff5d74        0x8 obj/SWTIM.o
                0x03ff5d74                _globalTimer
 .bss           0x03ff5d7c       0x32 obj/util.o
 .bss           0x03ff5dae        0x0 obj/I2C_SW.o
 .bss           0x03ff5dae        0x0 obj/I2Ceeprom.o
 .bss           0x03ff5dae        0x0 obj/sioSG2.o
 *fill*         0x03ff5dae        0x2 00
 .bss           0x03ff5db0       0x28 obj/SOUND.o
 .bss           0x03ff5dd8      0x544 obj/ADC.o
                0x03ff62cf                _m_confRegSpi2_PowerSave
                0x03ff6274                _powerSamplePeriod
                0x03ff62e6                _m_endContinuousConversionSpi2
                0x03ff62e7                _m_initializationSequenceStateSpi2
                0x03ff62a1                _m_TxState
                0x03ff6044                _ADC5_serial_fifo
                0x03ff5e0c                _ADC1_serial_fifo
                0x03ff62e1                _m_TxStateSpi2
                0x03ff629c                _m_confReg
                0x03ff62d2                _m_confRegSpi2_RstValid
                0x03ff5dd8                _mV_Power_ADC
                0x03ff62ac                _m_lastConfRegWrote
                0x03ff62e4                _m_numByteToReceivedSpi2
                0x03ff62a7                _m_initializationSequenceState
                0x03ff62d7                _m_confRegSpi2_UniBiPolar
                0x03ff6290                _m_confReg_RstSys
                0x03ff62a0                _m_confRegStatus
                0x03ff6160                _CS5530_rx_fifoSpi2
                0x03ff62f4                _timerSpi2
                0x03ff6282                _state_adc2
                0x03ff6300                _m_num_max_adc_for_channelSpi2
                0x03ff6304                _wait_reset_ADC
                0x03ff6234                _contadc1
                0x03ff62a8                _m_txBufferEmpty
                0x03ff627e                _state
                0x03ff62a2                _m_CommandSent
                0x03ff628e                _m_confReg_PowerSave
                0x03ff62d4                _m_confRegSpi2_VoltageRef
                0x03ff62ec                _m_lastConfRegSpi2Wrote
                0x03ff6294                _m_confReg_LatchBit
                0x03ff62b0                _m_validDataPresentInADCBuffer
                0x03ff628c                _vol_tick
                0x03ff628a                _chanToSample
                0x03ff62b4                _timerSpi
                0x03ff62a3                _m_numByteReceived
                0x03ff5f70                _CS5530_rx_fifo
                0x03ff62a5                _m_adcStates
                0x03ff62d1                _m_confRegSpi2_RstSys
                0x03ff62e8                _m_txBufferEmptySpi2
                0x03ff62dc                _m_confRegSpi2
                0x03ff6301                _adc_to_sampleSpi2
                0x03ff62aa                _m_startContinuousConversion
                0x03ff6296                _m_confReg_UniBiPolar
                0x03ff6278                _pwrVoltageAverage
                0x03ff628f                _m_confReg_PowerDown
                0x03ff608c                _CS5530_tx_fifoSpi2
                0x03ff6291                _m_confReg_RstValid
                0x03ff62a9                _m_spiOrPinMode
                0x03ff62e0                _m_confRegStatusSpi2
                0x03ff6298                _m_confReg_filterRate
                0x03ff62d3                _m_confRegSpi2_InputShort
                0x03ff62e5                _m_adcStatesSpi2
                0x03ff62e3                _m_numByteReceivedSpi2
                0x03ff627c                _numPwrSamples
                0x03ff5e9c                _CS5530_tx_fifo
                0x03ff6238                _m_data
                0x03ff62cc                _m_num_max_adc_for_channel
                0x03ff62d0                _m_confRegSpi2_PowerDown
                0x03ff62e9                _m_spiOrPinModeSpi2
                0x03ff6280                _state_adc1
                0x03ff5e54                _ADC2_serial_fifo
                0x03ff62d9                _m_confRegSpi2_filterRate
                0x03ff6295                _m_confReg_WordRate
                0x03ff62c0                _watchdog_adc_timer
                0x03ff6292                _m_confReg_InputShort
                0x03ff62d8                _m_confRegSpi2_OpenCircuitDetect
                0x03ff62ea                _m_startContinuousConversionSpi2
                0x03ff62ce                _adc_to_sample
                0x03ff623c                _Chan
                0x03ff6293                _m_confReg_VoltageRef
                0x03ff62d5                _m_confRegSpi2_LatchBit
                0x03ff62d6                _m_confRegSpi2_WordRate
                0x03ff6288                _state_adc5
                0x03ff62a4                _m_numByteToReceived
                0x03ff62f0                _m_validDataPresentInADCBufferSpi2
                0x03ff62a6                _m_endContinuousConversion
                0x03ff62cd                _numByteSent
                0x03ff6284                _state_adc3
                0x03ff6297                _m_confReg_OpenCircuitDetect
                0x03ff62e2                _m_CommandSentSpi2
                0x03ff6286                _state_adc4
 .bss           0x03ff631c       0x64 obj/PWM.o
                0x03ff6350                _stato_pompa
                0x03ff6324                _coverState_open
                0x03ff631c                _conta
                0x03ff6328                _pwm_ev
                0x03ff6359                _previousstate_EVs
                0x03ff6368                _EV_timer
                0x03ff6358                _state_EVs
                0x03ff635c                _PWM_timer
                0x03ff6354                _pre_stato_pompa
                0x03ff6320                _enable_EVs
                0x03ff6374                _MotorStatus
                0x03ff633c                _pwm_mot
 .bss           0x03ff6380        0xc obj/QUEUEUART.o
                0x03ff6388                UartDeviceAbstraction::m_pUart2DeviceAbstraction
                0x03ff6380                UartDeviceAbstraction::m_pUart0DeviceAbstraction
                0x03ff6384                UartDeviceAbstraction::m_pUart1DeviceAbstraction
 .bss           0x03ff638c        0x0 obj/PROTOCOLSTDUART.o
 .bss           0x03ff638c      0x1fc obj/PROTOCOLSIFRA.o
                0x03ff6414                _Via
                0x03ff6540                _bk
                0x03ff6410                _WeightCmd
                0x03ff63e8                _StatusDebug
                0x03ff6574                _structEnc
                0x03ff6534                _g_stateMachine
                0x03ff6390                _StartCmd
                0x03ff638c                _fp
                0x03ff63c4                _StatusCmd
                0x03ff6412                _g_scalesPhaseCmd
                0x03ff6411                _g_restartFormulaCmd
 .bss           0x03ff6588        0x4 obj/CPUSIFRA_MANAGER.o
                0x03ff6588                _fpp
 .bss           0x03ff658c        0xa obj/NVRDRV.o
                0x03ff658c                _m_chk
 *fill*         0x03ff6596        0x2 00
 .bss           0x03ff6598       0x1c obj/LEDS_PANEL.o
                0x03ff6598                _DISPLAY_tx_fifo
 .bss           0x03ff65b4        0x0 c:\gcc850\lib\libc.a(lib_a-atoi.o)
 .bss           0x03ff65b4        0x0 c:\gcc850\lib\libc.a(lib_a-memcpy.o)
 .bss           0x03ff65b4        0x0 c:\gcc850\lib\libc.a(lib_a-memset.o)
 .bss           0x03ff65b4        0x0 c:\gcc850\lib\libc.a(lib_a-sprintf.o)
 .bss           0x03ff65b4        0x0 c:\gcc850\lib\libc.a(lib_a-strcmp.o)
 .bss           0x03ff65b4        0x0 c:\gcc850\lib\libc.a(lib_a-strcpy.o)
 .bss           0x03ff65b4        0x0 c:\gcc850\lib\libc.a(lib_a-strlen.o)
 .bss           0x03ff65b4        0x0 c:\gcc850\lib\libc.a(lib_a-strtol.o)
 .bss           0x03ff65b4        0x0 c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
 .bss           0x03ff65b4        0x0 c:\gcc850\lib\libc.a(lib_a-ctype_.o)
 .bss           0x03ff65b4        0x0 c:\gcc850\lib\libc.a(lib_a-dtoa.o)
 .bss           0x03ff65b4        0x0 c:\gcc850\lib\libc.a(lib_a-freer.o)
 .bss           0x03ff65b4        0x0 c:\gcc850\lib\libc.a(lib_a-impure.o)
 .bss           0x03ff65b4        0xc c:\gcc850\lib\libc.a(lib_a-locale.o)
                0x03ff65b8                ___mlocale_changed
                0x03ff65bc                __PathLocale
                0x03ff65b4                ___nlocale_changed
 .bss           0x03ff65c0       0x34 c:\gcc850\lib\libc.a(lib_a-mallocr.o)
                0x03ff65c0                ___malloc_top_pad
                0x03ff65cc                ___malloc_current_mallinfo
                0x03ff65c4                ___malloc_max_sbrked_mem
                0x03ff65c8                ___malloc_max_total_mem
 .bss           0x03ff65f4        0x0 c:\gcc850\lib\libc.a(lib_a-memchr.o)
 .bss           0x03ff65f4        0x0 c:\gcc850\lib\libc.a(lib_a-memmove.o)
 .bss           0x03ff65f4        0x0 c:\gcc850\lib\libc.a(lib_a-mlock.o)
 .bss           0x03ff65f4        0x0 c:\gcc850\lib\libc.a(lib_a-mprec.o)
 .bss           0x03ff65f4        0x0 c:\gcc850\lib\libc.a(lib_a-reallocr.o)
 .bss           0x03ff65f4        0x0 c:\gcc850\lib\libc.a(lib_a-s_isinfd.o)
 .bss           0x03ff65f4        0x0 c:\gcc850\lib\libc.a(lib_a-s_isnand.o)
 .bss           0x03ff65f4        0x0 c:\gcc850\lib\libc.a(lib_a-sbrkr.o)
 .bss           0x03ff65f4        0x0 c:\gcc850\lib\libc.a(lib_a-stat.o)
 .bss           0x03ff65f4        0x0 c:\gcc850\lib\libc.a(lib_a-trap.o)
 .bss           0x03ff65f4        0x0 c:\gcc850\lib\libc.a(lib_a-callocr.o)
 .bss           0x03ff65f4        0x4 c:\gcc850\lib\libc.a(lib_a-sbrk.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libc.a(lib_a-write.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libc.a(lib_a-abort.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libc.a(lib_a-signal.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libc.a(lib_a-signalr.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libc.a(lib_a-_Exit.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libc.a(lib_a-getpid.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libc.a(lib_a-kill.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_mulsi3.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_divsi3.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_udivsi3.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_modsi3.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_umodsi3.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_save_20c.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_save_23c.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_save_25c.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_save_26c.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_save_27c.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_save_28c.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_save_29c.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_save_31c.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_save_varargs.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_fixunssfsi.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_addsub_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_mul_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_div_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_eq_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_ne_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_gt_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_ge_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_lt_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_le_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_si_to_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_sf_to_si.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_thenan_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_usi_to_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_addsub_df.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_mul_df.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_div_df.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_eq_df.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_ne_df.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_gt_df.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_ge_df.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_lt_df.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_si_to_df.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_df_to_si.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_thenan_df.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_usi_to_df.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_ucmpdi2.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_muldi3.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_clzsi2.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_pack_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_unpack_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_fpcmp_parts_sf.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_pack_df.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_unpack_df.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_fpcmp_parts_df.o)
 .bss           0x03ff65f8        0x0 c:\gcc850\lib\libgcc.a(_clz.o)
 *(COMMON)
 COMMON         0x03ff65f8        0x4 c:\gcc850\lib\libc.a(lib_a-stat.o)
                0x03ff65f8                _errno
                0x03ff65fc                _end = .
                0x03ff65fc                PROVIDE (end, .)
                0x03ff65fc                . = ALIGN (0x4)
                0x03ff65fc                __base_small_heap = .
                0x03ff65fc                PROVIDE (_base_small_heap, .)
                0x03ff65fc                . = ALIGN (0x4)
                0x03ff65fc                __base_heap = .
                0x03ff65fc                PROVIDE (_base_heap, .)

.stack          0x03ffdfe0     0x1000
                0x03ffdfe0                __end_small_heap = .
                0x03ffdfe0                PROVIDE (_end_small_heap, __end_small_heap)
                0x03ffdfe0                __end_heap = .
                0x03ffdfe0                PROVIDE (_end_heap, __end_heap)
                0x03ffdfe0                __stack = .
 *(.stack)
 .stack         0x03ffdfe0     0x1000 obj/startup.o
                0x03ffdfe0                __system_stack
                0x03ffefe0                __end_stack = .
                0x03ffefe0                PROVIDE (_end_stack, __end_stack)

.xdata          0x00110000        0x0
                0x00110000                __xdata_start = .
 *(.xdata)
                0x00110000                __xdata = .
                0x00110000                __xdata_end = .

.disk
 *(.disk)

.stab           0x00000000    0x445e0
 *(.stab)
 .stab          0x00000000      0x7e0 obj/crt1.o
 .stab          0x000007e0     0x1f50 obj/main.o
                               0x1f5c (size before relaxing)
 .stab          0x00002730      0xd74 obj/IEETEST.o
                                0xd80 (size before relaxing)
 .stab          0x000034a4     0x3eac obj/IRQSG2.o
                               0x3eb8 (size before relaxing)
 .stab          0x00007350      0xc54 obj/ALLOC.o
                                0xc60 (size before relaxing)
 .stab          0x00007fa4      0x924 obj/NEW.o
                                0x930 (size before relaxing)
 .stab          0x000088c8      0xf0c obj/STRCLASS.o
                                0xf18 (size before relaxing)
 .stab          0x000097d4      0xaec obj/SWTIM.o
                                0xaf8 (size before relaxing)
 .stab          0x0000a2c0     0x1608 obj/util.o
                               0x1614 (size before relaxing)
 .stab          0x0000b8c8      0xce4 obj/I2C_SW.o
                                0xcf0 (size before relaxing)
 .stab          0x0000c5ac     0x10f8 obj/I2Ceeprom.o
                               0x1104 (size before relaxing)
 .stab          0x0000d6a4     0x1c68 obj/sioSG2.o
                               0x1c74 (size before relaxing)
 .stab          0x0000f30c      0xe64 obj/SOUND.o
                                0xe70 (size before relaxing)
 .stab          0x00010170     0x756c obj/ADC.o
                               0x7578 (size before relaxing)
 .stab          0x000176dc     0x19e0 obj/PWM.o
                               0x19ec (size before relaxing)
 .stab          0x000190bc     0x3a08 obj/QUEUEUART.o
                               0x3a14 (size before relaxing)
 .stab          0x0001cac4     0x2130 obj/PROTOCOLSTDUART.o
                               0x213c (size before relaxing)
 .stab          0x0001ebf4     0x3e64 obj/PROTOCOLSIFRA.o
                               0x3e70 (size before relaxing)
 .stab          0x00022a58     0xc414 obj/CPUSIFRA_MANAGER.o
                               0xc420 (size before relaxing)
 .stab          0x0002ee6c     0x1338 obj/NVRDRV.o
                               0x1344 (size before relaxing)
 .stab          0x000301a4      0xbdc obj/LEDS_PANEL.o
                                0xbe8 (size before relaxing)
 .stab          0x00030d80      0x45c c:\gcc850\lib\libc.a(lib_a-atoi.o)
                                0x468 (size before relaxing)
 .stab          0x000311dc      0x1b0 c:\gcc850\lib\libc.a(lib_a-memcpy.o)
                                0x1bc (size before relaxing)
 .stab          0x0003138c      0x228 c:\gcc850\lib\libc.a(lib_a-memset.o)
                                0x42c (size before relaxing)
 .stab          0x000315b4      0x6b4 c:\gcc850\lib\libc.a(lib_a-sprintf.o)
                                0x8e8 (size before relaxing)
 .stab          0x00031c68      0x1e0 c:\gcc850\lib\libc.a(lib_a-strcmp.o)
                                0x408 (size before relaxing)
 .stab          0x00031e48      0x1bc c:\gcc850\lib\libc.a(lib_a-strcpy.o)
                                0x3e4 (size before relaxing)
 .stab          0x00032004      0x1d4 c:\gcc850\lib\libc.a(lib_a-strlen.o)
                                0x3fc (size before relaxing)
 .stab          0x000321d8      0x594 c:\gcc850\lib\libc.a(lib_a-strtol.o)
                                0x828 (size before relaxing)
 .stab          0x0003276c     0x2034 c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
                               0x24f0 (size before relaxing)
 .stab          0x000347a0      0x114 c:\gcc850\lib\libc.a(lib_a-ctype_.o)
                                0x120 (size before relaxing)
 .stab          0x000348b4     0x1d1c c:\gcc850\lib\libc.a(lib_a-dtoa.o)
                               0x2190 (size before relaxing)
 .stab          0x000365d0      0x750 c:\gcc850\lib\libc.a(lib_a-freer.o)
                                0xbac (size before relaxing)
 .stab          0x00036d20      0x174 c:\gcc850\lib\libc.a(lib_a-impure.o)
                                0x3d8 (size before relaxing)
 .stab          0x00036e94      0x4e0 c:\gcc850\lib\libc.a(lib_a-locale.o)
                                0x6cc (size before relaxing)
 .stab          0x00037374      0xee8 c:\gcc850\lib\libc.a(lib_a-mallocr.o)
                               0x1344 (size before relaxing)
 .stab          0x0003825c      0x258 c:\gcc850\lib\libc.a(lib_a-memchr.o)
                                0x480 (size before relaxing)
 .stab          0x000384b4      0x258 c:\gcc850\lib\libc.a(lib_a-memmove.o)
                                0x480 (size before relaxing)
 .stab          0x0003870c      0x204 c:\gcc850\lib\libc.a(lib_a-mlock.o)
                                0x420 (size before relaxing)
 .stab          0x00038910     0x2448 c:\gcc850\lib\libc.a(lib_a-mprec.o)
                               0x2958 (size before relaxing)
 .stab          0x0003ad58      0xa20 c:\gcc850\lib\libc.a(lib_a-reallocr.o)
                                0xe7c (size before relaxing)
 .stab          0x0003b778      0x1ec c:\gcc850\lib\libc.a(lib_a-s_isinfd.o)
                                0x618 (size before relaxing)
 .stab          0x0003b964      0x1bc c:\gcc850\lib\libc.a(lib_a-s_isnand.o)
                                0x60c (size before relaxing)
 .stab          0x0003bb20      0x270 c:\gcc850\lib\libc.a(lib_a-sbrkr.o)
                                0x654 (size before relaxing)
 .stab          0x0003bd90      0x450 c:\gcc850\lib\libc.a(lib_a-stat.o)
                                0x624 (size before relaxing)
 .stab          0x0003c1e0      0x2e8 c:\gcc850\lib\libc.a(lib_a-callocr.o)
                                0x744 (size before relaxing)
 .stab          0x0003c4c8      0x2dc c:\gcc850\lib\libc.a(lib_a-sbrk.o)
                                0x708 (size before relaxing)
 .stab          0x0003c7a4      0x1f8 c:\gcc850\lib\libc.a(lib_a-write.o)
                                0x624 (size before relaxing)
 .stab          0x0003c99c      0x24c c:\gcc850\lib\libc.a(lib_a-abort.o)
                                0x66c (size before relaxing)
 .stab          0x0003cbe8      0x7bc c:\gcc850\lib\libc.a(lib_a-signal.o)
                                0xac8 (size before relaxing)
 .stab          0x0003d3a4      0x2e8 c:\gcc850\lib\libc.a(lib_a-signalr.o)
                                0x72c (size before relaxing)
 .stab          0x0003d68c      0x228 c:\gcc850\lib\libc.a(lib_a-_Exit.o)
                                0x654 (size before relaxing)
 .stab          0x0003d8b4      0x1c8 c:\gcc850\lib\libc.a(lib_a-getpid.o)
                                0x5f4 (size before relaxing)
 .stab          0x0003da7c      0x1e0 c:\gcc850\lib\libc.a(lib_a-kill.o)
                                0x60c (size before relaxing)
 .stab          0x0003dc5c      0x36c c:\gcc850\lib\libgcc.a(_fixunssfsi.o)
                                0x378 (size before relaxing)
 .stab          0x0003dfc8      0x864 c:\gcc850\lib\libgcc.a(_addsub_sf.o)
                                0x90c (size before relaxing)
 .stab          0x0003e82c      0x5a0 c:\gcc850\lib\libgcc.a(_mul_sf.o)
                                0x720 (size before relaxing)
 .stab          0x0003edcc      0x4ec c:\gcc850\lib\libgcc.a(_div_sf.o)
                                0x66c (size before relaxing)
 .stab          0x0003f2b8      0x228 c:\gcc850\lib\libgcc.a(_eq_sf.o)
                                0x3a8 (size before relaxing)
 .stab          0x0003f4e0      0x228 c:\gcc850\lib\libgcc.a(_ne_sf.o)
                                0x3a8 (size before relaxing)
 .stab          0x0003f708      0x228 c:\gcc850\lib\libgcc.a(_gt_sf.o)
                                0x3a8 (size before relaxing)
 .stab          0x0003f930      0x228 c:\gcc850\lib\libgcc.a(_ge_sf.o)
                                0x3a8 (size before relaxing)
 .stab          0x0003fb58      0x228 c:\gcc850\lib\libgcc.a(_lt_sf.o)
                                0x3a8 (size before relaxing)
 .stab          0x0003fd80      0x228 c:\gcc850\lib\libgcc.a(_le_sf.o)
                                0x3a8 (size before relaxing)
 .stab          0x0003ffa8      0x2dc c:\gcc850\lib\libgcc.a(_si_to_sf.o)
                                0x45c (size before relaxing)
 .stab          0x00040284      0x288 c:\gcc850\lib\libgcc.a(_sf_to_si.o)
                                0x408 (size before relaxing)
 .stab          0x0004050c      0x120 c:\gcc850\lib\libgcc.a(_thenan_sf.o)
                                0x2a0 (size before relaxing)
 .stab          0x0004062c      0x2c4 c:\gcc850\lib\libgcc.a(_usi_to_sf.o)
                                0x444 (size before relaxing)
 .stab          0x000408f0      0x8e8 c:\gcc850\lib\libgcc.a(_addsub_df.o)
                                0x990 (size before relaxing)
 .stab          0x000411d8      0x5c4 c:\gcc850\lib\libgcc.a(_mul_df.o)
                                0x744 (size before relaxing)
 .stab          0x0004179c      0x4a4 c:\gcc850\lib\libgcc.a(_div_df.o)
                                0x624 (size before relaxing)
 .stab          0x00041c40      0x21c c:\gcc850\lib\libgcc.a(_eq_df.o)
                                0x39c (size before relaxing)
 .stab          0x00041e5c      0x21c c:\gcc850\lib\libgcc.a(_ne_df.o)
                                0x39c (size before relaxing)
 .stab          0x00042078      0x228 c:\gcc850\lib\libgcc.a(_gt_df.o)
                                0x3a8 (size before relaxing)
 .stab          0x000422a0      0x228 c:\gcc850\lib\libgcc.a(_ge_df.o)
                                0x3a8 (size before relaxing)
 .stab          0x000424c8      0x21c c:\gcc850\lib\libgcc.a(_lt_df.o)
                                0x39c (size before relaxing)
 .stab          0x000426e4      0x2f4 c:\gcc850\lib\libgcc.a(_si_to_df.o)
                                0x474 (size before relaxing)
 .stab          0x000429d8      0x270 c:\gcc850\lib\libgcc.a(_df_to_si.o)
                                0x3f0 (size before relaxing)
 .stab          0x00042c48      0x120 c:\gcc850\lib\libgcc.a(_thenan_df.o)
                                0x2a0 (size before relaxing)
 .stab          0x00042d68      0x300 c:\gcc850\lib\libgcc.a(_usi_to_df.o)
                                0x480 (size before relaxing)
 .stab          0x00043068      0x198 c:\gcc850\lib\libgcc.a(_clzsi2.o)
                                0x348 (size before relaxing)
 .stab          0x00043200      0x360 c:\gcc850\lib\libgcc.a(_pack_sf.o)
                                0x4e0 (size before relaxing)
 .stab          0x00043560      0x354 c:\gcc850\lib\libgcc.a(_unpack_sf.o)
                                0x4d4 (size before relaxing)
 .stab          0x000438b4      0x294 c:\gcc850\lib\libgcc.a(_fpcmp_parts_sf.o)
                                0x414 (size before relaxing)
 .stab          0x00043b48      0x36c c:\gcc850\lib\libgcc.a(_pack_df.o)
                                0x4ec (size before relaxing)
 .stab          0x00043eb4      0x33c c:\gcc850\lib\libgcc.a(_unpack_df.o)
                                0x4bc (size before relaxing)
 .stab          0x000441f0      0x2b8 c:\gcc850\lib\libgcc.a(_fpcmp_parts_df.o)
                                0x438 (size before relaxing)
 .stab          0x000444a8      0x138 c:\gcc850\lib\libgcc.a(_clz.o)
                                0x2e8 (size before relaxing)

.stabstr        0x00000000    0x3eb47
 *(.stabstr)
 .stabstr       0x00000000    0x3eb47 obj/crt1.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000      0x630
 *(.comment)
 .comment       0x00000000       0x12 obj/crt1.o
 .comment       0x00000012       0x12 obj/main.o
 .comment       0x00000024       0x12 obj/IEETEST.o
 .comment       0x00000036       0x12 obj/IRQSG2.o
 .comment       0x00000048       0x12 obj/ALLOC.o
 .comment       0x0000005a       0x12 obj/NEW.o
 .comment       0x0000006c       0x12 obj/STRCLASS.o
 .comment       0x0000007e       0x12 obj/SWTIM.o
 .comment       0x00000090       0x12 obj/util.o
 .comment       0x000000a2       0x12 obj/I2C_SW.o
 .comment       0x000000b4       0x12 obj/I2Ceeprom.o
 .comment       0x000000c6       0x12 obj/sioSG2.o
 .comment       0x000000d8       0x12 obj/SOUND.o
 .comment       0x000000ea       0x12 obj/ADC.o
 .comment       0x000000fc       0x12 obj/PWM.o
 .comment       0x0000010e       0x12 obj/QUEUEUART.o
 .comment       0x00000120       0x12 obj/PROTOCOLSTDUART.o
 .comment       0x00000132       0x12 obj/PROTOCOLSIFRA.o
 .comment       0x00000144       0x12 obj/CPUSIFRA_MANAGER.o
 .comment       0x00000156       0x12 obj/NVRDRV.o
 .comment       0x00000168       0x12 obj/LEDS_PANEL.o
 .comment       0x0000017a       0x12 c:\gcc850\lib\libc.a(lib_a-atoi.o)
 .comment       0x0000018c       0x12 c:\gcc850\lib\libc.a(lib_a-memcpy.o)
 .comment       0x0000019e       0x12 c:\gcc850\lib\libc.a(lib_a-memset.o)
 .comment       0x000001b0       0x12 c:\gcc850\lib\libc.a(lib_a-sprintf.o)
 .comment       0x000001c2       0x12 c:\gcc850\lib\libc.a(lib_a-strcmp.o)
 .comment       0x000001d4       0x12 c:\gcc850\lib\libc.a(lib_a-strcpy.o)
 .comment       0x000001e6       0x12 c:\gcc850\lib\libc.a(lib_a-strlen.o)
 .comment       0x000001f8       0x12 c:\gcc850\lib\libc.a(lib_a-strtol.o)
 .comment       0x0000020a       0x12 c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
 .comment       0x0000021c       0x12 c:\gcc850\lib\libc.a(lib_a-ctype_.o)
 .comment       0x0000022e       0x12 c:\gcc850\lib\libc.a(lib_a-dtoa.o)
 .comment       0x00000240       0x12 c:\gcc850\lib\libc.a(lib_a-freer.o)
 .comment       0x00000252       0x12 c:\gcc850\lib\libc.a(lib_a-impure.o)
 .comment       0x00000264       0x12 c:\gcc850\lib\libc.a(lib_a-locale.o)
 .comment       0x00000276       0x12 c:\gcc850\lib\libc.a(lib_a-mallocr.o)
 .comment       0x00000288       0x12 c:\gcc850\lib\libc.a(lib_a-memchr.o)
 .comment       0x0000029a       0x12 c:\gcc850\lib\libc.a(lib_a-memmove.o)
 .comment       0x000002ac       0x12 c:\gcc850\lib\libc.a(lib_a-mlock.o)
 .comment       0x000002be       0x12 c:\gcc850\lib\libc.a(lib_a-mprec.o)
 .comment       0x000002d0       0x12 c:\gcc850\lib\libc.a(lib_a-reallocr.o)
 .comment       0x000002e2       0x12 c:\gcc850\lib\libc.a(lib_a-s_isinfd.o)
 .comment       0x000002f4       0x12 c:\gcc850\lib\libc.a(lib_a-s_isnand.o)
 .comment       0x00000306       0x12 c:\gcc850\lib\libc.a(lib_a-sbrkr.o)
 .comment       0x00000318       0x12 c:\gcc850\lib\libc.a(lib_a-stat.o)
 .comment       0x0000032a       0x12 c:\gcc850\lib\libc.a(lib_a-callocr.o)
 .comment       0x0000033c       0x12 c:\gcc850\lib\libc.a(lib_a-sbrk.o)
 .comment       0x0000034e       0x12 c:\gcc850\lib\libc.a(lib_a-write.o)
 .comment       0x00000360       0x12 c:\gcc850\lib\libc.a(lib_a-abort.o)
 .comment       0x00000372       0x12 c:\gcc850\lib\libc.a(lib_a-signal.o)
 .comment       0x00000384       0x12 c:\gcc850\lib\libc.a(lib_a-signalr.o)
 .comment       0x00000396       0x12 c:\gcc850\lib\libc.a(lib_a-_Exit.o)
 .comment       0x000003a8       0x12 c:\gcc850\lib\libc.a(lib_a-getpid.o)
 .comment       0x000003ba       0x12 c:\gcc850\lib\libc.a(lib_a-kill.o)
 .comment       0x000003cc       0x12 c:\gcc850\lib\libgcc.a(_fixunssfsi.o)
 .comment       0x000003de       0x12 c:\gcc850\lib\libgcc.a(_addsub_sf.o)
 .comment       0x000003f0       0x12 c:\gcc850\lib\libgcc.a(_mul_sf.o)
 .comment       0x00000402       0x12 c:\gcc850\lib\libgcc.a(_div_sf.o)
 .comment       0x00000414       0x12 c:\gcc850\lib\libgcc.a(_eq_sf.o)
 .comment       0x00000426       0x12 c:\gcc850\lib\libgcc.a(_ne_sf.o)
 .comment       0x00000438       0x12 c:\gcc850\lib\libgcc.a(_gt_sf.o)
 .comment       0x0000044a       0x12 c:\gcc850\lib\libgcc.a(_ge_sf.o)
 .comment       0x0000045c       0x12 c:\gcc850\lib\libgcc.a(_lt_sf.o)
 .comment       0x0000046e       0x12 c:\gcc850\lib\libgcc.a(_le_sf.o)
 .comment       0x00000480       0x12 c:\gcc850\lib\libgcc.a(_si_to_sf.o)
 .comment       0x00000492       0x12 c:\gcc850\lib\libgcc.a(_sf_to_si.o)
 .comment       0x000004a4       0x12 c:\gcc850\lib\libgcc.a(_thenan_sf.o)
 .comment       0x000004b6       0x12 c:\gcc850\lib\libgcc.a(_usi_to_sf.o)
 .comment       0x000004c8       0x12 c:\gcc850\lib\libgcc.a(_addsub_df.o)
 .comment       0x000004da       0x12 c:\gcc850\lib\libgcc.a(_mul_df.o)
 .comment       0x000004ec       0x12 c:\gcc850\lib\libgcc.a(_div_df.o)
 .comment       0x000004fe       0x12 c:\gcc850\lib\libgcc.a(_eq_df.o)
 .comment       0x00000510       0x12 c:\gcc850\lib\libgcc.a(_ne_df.o)
 .comment       0x00000522       0x12 c:\gcc850\lib\libgcc.a(_gt_df.o)
 .comment       0x00000534       0x12 c:\gcc850\lib\libgcc.a(_ge_df.o)
 .comment       0x00000546       0x12 c:\gcc850\lib\libgcc.a(_lt_df.o)
 .comment       0x00000558       0x12 c:\gcc850\lib\libgcc.a(_si_to_df.o)
 .comment       0x0000056a       0x12 c:\gcc850\lib\libgcc.a(_df_to_si.o)
 .comment       0x0000057c       0x12 c:\gcc850\lib\libgcc.a(_thenan_df.o)
 .comment       0x0000058e       0x12 c:\gcc850\lib\libgcc.a(_usi_to_df.o)
 .comment       0x000005a0       0x12 c:\gcc850\lib\libgcc.a(_clzsi2.o)
 .comment       0x000005b2       0x12 c:\gcc850\lib\libgcc.a(_pack_sf.o)
 .comment       0x000005c4       0x12 c:\gcc850\lib\libgcc.a(_unpack_sf.o)
 .comment       0x000005d6       0x12 c:\gcc850\lib\libgcc.a(_fpcmp_parts_sf.o)
 .comment       0x000005e8       0x12 c:\gcc850\lib\libgcc.a(_pack_df.o)
 .comment       0x000005fa       0x12 c:\gcc850\lib\libgcc.a(_unpack_df.o)
 .comment       0x0000060c       0x12 c:\gcc850\lib\libgcc.a(_fpcmp_parts_df.o)
 .comment       0x0000061e       0x12 c:\gcc850\lib\libgcc.a(_clz.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.zdata
 *(.zdata)
 *(.zbss)
 *(reszdata)
 *(.zcommon)

.rozdata
 *(.rozdata)
 *(romzdata)
 *(romzbss)
LOAD obj/crt0.o
LOAD obj/crt1.o
LOAD obj/main.o
LOAD obj/IEETEST.o
LOAD obj/IRQSG2.o
LOAD obj/ALLOC.o
LOAD obj/NEW.o
LOAD obj/STRCLASS.o
LOAD obj/SWTIM.o
LOAD obj/util.o
LOAD obj/I2C_SW.o
LOAD obj/I2Ceeprom.o
LOAD obj/sioSG2.o
LOAD obj/SOUND.o
LOAD obj/ADC.o
LOAD obj/PWM.o
LOAD obj/QUEUEUART.o
LOAD obj/PROTOCOLSTDUART.o
LOAD obj/PROTOCOLSIFRA.o
LOAD obj/CPUSIFRA_MANAGER.o
LOAD obj/NVRDRV.o
LOAD obj/LEDS_PANEL.o
LOAD c:\gcc850\lib\v850e\libm.a
LOAD c:\gcc850\lib\libc.a
LOAD c:\gcc850\lib\libgcc.a
OUTPUT(SG2.OUR elf32-v850)
