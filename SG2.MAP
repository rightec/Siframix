Archive member included because of file (symbol)

c:\gcc850\lib\libc.a(lib_a-atoi.o)
                              obj/util.o (_atoi)
c:\gcc850\lib\libc.a(lib_a-memcpy.o)
                              obj/util.o (_memcpy)
c:\gcc850\lib\libc.a(lib_a-memset.o)
                              obj/I2Ceeprom.o (_memset)
c:\gcc850\lib\libc.a(lib_a-sprintf.o)
                              obj/util.o (_sprintf)
c:\gcc850\lib\libc.a(lib_a-strcmp.o)
                              obj/STRCLASS.o (_strcmp)
c:\gcc850\lib\libc.a(lib_a-strcpy.o)
                              obj/STRCLASS.o (_strcpy)
c:\gcc850\lib\libc.a(lib_a-strlen.o)
                              obj/STRCLASS.o (_strlen)
c:\gcc850\lib\libc.a(lib_a-strtol.o)
                              c:\gcc850\lib\libc.a(lib_a-atoi.o) (__strtol_r)
c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
                              c:\gcc850\lib\libc.a(lib_a-sprintf.o) (__svfprintf_r)
c:\gcc850\lib\libc.a(lib_a-ctype_.o)
                              c:\gcc850\lib\libc.a(lib_a-strtol.o) (___ctype_ptr__)
c:\gcc850\lib\libc.a(lib_a-dtoa.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (__dtoa_r)
c:\gcc850\lib\libc.a(lib_a-freer.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (__free_r)
c:\gcc850\lib\libc.a(lib_a-impure.o)
                              c:\gcc850\lib\libc.a(lib_a-sprintf.o) (__impure_ptr)
c:\gcc850\lib\libc.a(lib_a-locale.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (__localeconv_r)
c:\gcc850\lib\libc.a(lib_a-mallocr.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (__malloc_r)
c:\gcc850\lib\libc.a(lib_a-memchr.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (_memchr)
c:\gcc850\lib\libc.a(lib_a-memmove.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (_memmove)
c:\gcc850\lib\libc.a(lib_a-mlock.o)
                              c:\gcc850\lib\libc.a(lib_a-freer.o) (___malloc_lock)
c:\gcc850\lib\libc.a(lib_a-mprec.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (__Bfree)
c:\gcc850\lib\libc.a(lib_a-reallocr.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (__realloc_r)
c:\gcc850\lib\libc.a(lib_a-s_isinfd.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (___isinfd)
c:\gcc850\lib\libc.a(lib_a-s_isnand.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (___isnand)
c:\gcc850\lib\libc.a(lib_a-sbrkr.o)
                              c:\gcc850\lib\libc.a(lib_a-freer.o) (__sbrk_r)
c:\gcc850\lib\libc.a(lib_a-stat.o)
                              c:\gcc850\lib\libc.a(lib_a-sbrkr.o) (_errno)
c:\gcc850\lib\libc.a(lib_a-trap.o)
                              c:\gcc850\lib\libc.a(lib_a-stat.o) (___trap0)
c:\gcc850\lib\libc.a(lib_a-callocr.o)
                              c:\gcc850\lib\libc.a(lib_a-mprec.o) (__calloc_r)
c:\gcc850\lib\libc.a(lib_a-sbrk.o)
                              c:\gcc850\lib\libc.a(lib_a-sbrkr.o) (__sbrk)
c:\gcc850\lib\libc.a(lib_a-write.o)
                              c:\gcc850\lib\libc.a(lib_a-sbrk.o) (__write)
c:\gcc850\lib\libc.a(lib_a-abort.o)
                              c:\gcc850\lib\libc.a(lib_a-sbrk.o) (_abort)
c:\gcc850\lib\libc.a(lib_a-signal.o)
                              c:\gcc850\lib\libc.a(lib_a-abort.o) (_raise)
c:\gcc850\lib\libc.a(lib_a-signalr.o)
                              c:\gcc850\lib\libc.a(lib_a-signal.o) (__getpid_r)
c:\gcc850\lib\libc.a(lib_a-_Exit.o)
                              c:\gcc850\lib\libc.a(lib_a-abort.o) (__exit)
c:\gcc850\lib\libc.a(lib_a-getpid.o)
                              c:\gcc850\lib\libc.a(lib_a-signalr.o) (__getpid)
c:\gcc850\lib\libc.a(lib_a-kill.o)
                              c:\gcc850\lib\libc.a(lib_a-signalr.o) (__kill)
c:\gcc850\lib\libgcc.a(_mulsi3.o)
                              obj/util.o (___mulsi3)
c:\gcc850\lib\libgcc.a(_divsi3.o)
                              obj/util.o (___divsi3)
c:\gcc850\lib\libgcc.a(_udivsi3.o)
                              obj/main.o (___udivsi3)
c:\gcc850\lib\libgcc.a(_modsi3.o)
                              obj/util.o (___modsi3)
c:\gcc850\lib\libgcc.a(_umodsi3.o)
                              obj/main.o (___umodsi3)
c:\gcc850\lib\libgcc.a(_save_20c.o)
                              c:\gcc850\lib\libc.a(lib_a-mallocr.o) (__save_r20_r31)
c:\gcc850\lib\libgcc.a(_save_23c.o)
                              c:\gcc850\lib\libc.a(lib_a-mprec.o) (__save_r23_r31)
c:\gcc850\lib\libgcc.a(_save_25c.o)
                              c:\gcc850\lib\libc.a(lib_a-freer.o) (__save_r25_r31)
c:\gcc850\lib\libgcc.a(_save_26c.o)
                              c:\gcc850\lib\libc.a(lib_a-mprec.o) (__save_r26_r31)
c:\gcc850\lib\libgcc.a(_save_27c.o)
                              c:\gcc850\lib\libc.a(lib_a-mprec.o) (__save_r27_r31)
c:\gcc850\lib\libgcc.a(_save_28c.o)
                              c:\gcc850\lib\libc.a(lib_a-freer.o) (__save_r28_r31)
c:\gcc850\lib\libgcc.a(_save_29c.o)
                              c:\gcc850\lib\libc.a(lib_a-signal.o) (__save_r29_r31)
c:\gcc850\lib\libgcc.a(_save_31c.o)
                              c:\gcc850\lib\libc.a(lib_a-atoi.o) (__save_r31)
c:\gcc850\lib\libgcc.a(_save_varargs.o)
                              c:\gcc850\lib\libc.a(lib_a-sprintf.o) (__save_r6_r9)
c:\gcc850\lib\libgcc.a(_fixunssfsi.o)
                              obj/SOUND.o (___fixunssfsi)
c:\gcc850\lib\libgcc.a(_addsub_sf.o)
                              obj/SOUND.o (___subsf3)
c:\gcc850\lib\libgcc.a(_mul_sf.o)
                              obj/main.o (___mulsf3)
c:\gcc850\lib\libgcc.a(_div_sf.o)
                              obj/main.o (___divsf3)
c:\gcc850\lib\libgcc.a(_ne_sf.o)
                              obj/util.o (___nesf2)
c:\gcc850\lib\libgcc.a(_gt_sf.o)
                              obj/ADC.o (___gtsf2)
c:\gcc850\lib\libgcc.a(_ge_sf.o)
                              c:\gcc850\lib\libgcc.a(_fixunssfsi.o) (___gesf2)
c:\gcc850\lib\libgcc.a(_lt_sf.o)
                              obj/CPUSIFRA_MANAGER.o (___ltsf2)
c:\gcc850\lib\libgcc.a(_le_sf.o)
                              obj/ADC.o (___lesf2)
c:\gcc850\lib\libgcc.a(_si_to_sf.o)
                              obj/main.o (___floatsisf)
c:\gcc850\lib\libgcc.a(_sf_to_si.o)
                              obj/PROTOCOLSIFRA.o (___fixsfsi)
c:\gcc850\lib\libgcc.a(_thenan_sf.o)
                              c:\gcc850\lib\libgcc.a(_addsub_sf.o) (___thenan_sf)
c:\gcc850\lib\libgcc.a(_usi_to_sf.o)
                              obj/SWTIM.o (___floatunsisf)
c:\gcc850\lib\libgcc.a(_addsub_df.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___subdf3)
c:\gcc850\lib\libgcc.a(_mul_df.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___muldf3)
c:\gcc850\lib\libgcc.a(_div_df.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___divdf3)
c:\gcc850\lib\libgcc.a(_eq_df.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (___eqdf2)
c:\gcc850\lib\libgcc.a(_ne_df.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (___nedf2)
c:\gcc850\lib\libgcc.a(_gt_df.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___gtdf2)
c:\gcc850\lib\libgcc.a(_ge_df.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___gedf2)
c:\gcc850\lib\libgcc.a(_lt_df.o)
                              c:\gcc850\lib\libc.a(lib_a-svfprintf.o) (___ltdf2)
c:\gcc850\lib\libgcc.a(_si_to_df.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___floatsidf)
c:\gcc850\lib\libgcc.a(_df_to_si.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___fixdfsi)
c:\gcc850\lib\libgcc.a(_thenan_df.o)
                              c:\gcc850\lib\libgcc.a(_addsub_df.o) (___thenan_df)
c:\gcc850\lib\libgcc.a(_usi_to_df.o)
                              c:\gcc850\lib\libc.a(lib_a-dtoa.o) (___floatunsidf)
c:\gcc850\lib\libgcc.a(_ucmpdi2.o)
                              c:\gcc850\lib\libgcc.a(_addsub_df.o) (___ucmpdi2)
c:\gcc850\lib\libgcc.a(_muldi3.o)
                              c:\gcc850\lib\libgcc.a(_mul_sf.o) (___muldi3)
c:\gcc850\lib\libgcc.a(_clzsi2.o)
                              c:\gcc850\lib\libgcc.a(_si_to_sf.o) (___clzsi2)
c:\gcc850\lib\libgcc.a(_pack_sf.o)
                              c:\gcc850\lib\libgcc.a(_addsub_sf.o) (___pack_f)
c:\gcc850\lib\libgcc.a(_unpack_sf.o)
                              c:\gcc850\lib\libgcc.a(_addsub_sf.o) (___unpack_f)
c:\gcc850\lib\libgcc.a(_fpcmp_parts_sf.o)
                              c:\gcc850\lib\libgcc.a(_ne_sf.o) (___fpcmp_parts_f)
c:\gcc850\lib\libgcc.a(_pack_df.o)
                              c:\gcc850\lib\libgcc.a(_addsub_df.o) (___pack_d)
c:\gcc850\lib\libgcc.a(_unpack_df.o)
                              c:\gcc850\lib\libgcc.a(_addsub_df.o) (___unpack_d)
c:\gcc850\lib\libgcc.a(_fpcmp_parts_df.o)
                              c:\gcc850\lib\libgcc.a(_eq_df.o) (___fpcmp_parts_d)
c:\gcc850\lib\libgcc.a(_clz.o)
                              c:\gcc850\lib\libgcc.a(_clzsi2.o) (___clz_tab)

Allocating common symbols
Common symbol       size              file

_errno              0x4               c:\gcc850\lib\libc.a(lib_a-stat.o)

Discarded input sections

 .gnu.linkonce.t._ZN21UartDeviceAbstraction9GetParityEv
                0x00000000        0x0 obj/PROTOCOLSTDUART.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction12GetFrameBitsEv
                0x00000000        0x0 obj/PROTOCOLSTDUART.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction11GetStopBitsEv
                0x00000000        0x0 obj/PROTOCOLSTDUART.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction11GetBaudRateEv
                0x00000000        0x0 obj/PROTOCOLSTDUART.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction12GetLastErrorEv
                0x00000000        0x0 obj/PROTOCOLSTDUART.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction8SetErrorEi
                0x00000000        0x0 obj/PROTOCOLSTDUART.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction9GetParityEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction12GetFrameBitsEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction11GetStopBitsEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction11GetBaudRateEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction12GetLastErrorEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN21UartDeviceAbstraction8SetErrorEi
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction23ClearTransmissionBufferEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction7TurnOffEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction6TurnOnEv
                0x00000000        0x0 obj/PROTOCOLSIFRA.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00110000         0x0002ffff
rodata           0x00140000         0x00004fff
data             0x00145000         0x0000ffff
stack            0x00163000         0x00001fff
xdata            0x00165000         0x00003fff
xheap            0x0017f000         0x00000fff
*default*        0x00000000         0xffffffff
ramcode          0x00000000         0xffffffff
disk             0x00000000         0xffffffff

Linker script and memory map

LOAD obj/startup.o

.init
 *(.init)

.plt
 *(.plt)

.text           0x00110000    0x1eb50
                0x00110000                __stext = .
                0x00110000                __ctbp = .
 *(.call_table_data)
                0x00110000                . = ALIGN (0x10)
 *(.text)
 .text          0x00110000      0x7f4 obj/startup.o
                0x00110720                __return_interrupt
                0x001107e8                _cpu_initial
                0x00110000                _irqJump
                0x00110790                __restore_all_interrupt
                0x00110738                __save_all_interrupt
                0x00110700                __save_interrupt
 .text          0x001107f4       0x8c obj/crt0.o
                0x001107f4                _start
 .text          0x00110880       0x60 obj/crt1.o
                0x00110880                ___main
 .text          0x001108e0      0xb22 obj/main.o
                0x001108e0                FlashLed()
                0x001109e0                Asciihex_to_num(char*)
                0x00110a0e                Num_to_Asciihex(unsigned short, char*)
                0x00110ac6                _main
 .text          0x00111402      0xad8 obj/IRQSG2.o
                0x00111b92                _irq_INTCB1R
                0x00111402                _irq_init
                0x00111a6c                _irq_INTTP4CC1
                0x00111ac0                _irq_INTTP5CC0
                0x00111662                _irq_INTP2
                0x001116b2                _irq_INTP4
                0x001119c4                _irq_INTTP3CC0
                0x001118c8                _irq_INTTP1CC0
                0x00111874                _irq_INTTP0CC1
                0x00111522                _irq_RESET
                0x001117f6                _irq_INTTQ0CC3
                0x0011149c                _irq_resetVect
                0x0011163a                _irq_INTP1
                0x00111e32                _irq_INTDMA3
                0x001115c2                _irq_ILGOP_TRAPDB
                0x00111c10                _irq_INTCB2T
                0x00111eb0                _irq_INTWT
                0x00111b3e                _irq_INTCB0R_INTIIC1
                0x00111e08                _irq_INTDMA2
                0x0011184a                _irq_INTTP0CC0
                0x00111946                _irq_INTTP2CC0
                0x00111a42                _irq_INTTP4CC0
                0x001115ea                _irq_INTLVI
                0x00111a96                _irq_INTTP5OV
                0x0011199a                _irq_INTTP3OV
                0x00111db4                _irq_INTDMA0
                0x00111d8a                _irq_INTAD
                0x00111aea                _irq_INTTP5CC1
                0x00111702                _irq_INTP6
                0x0011168a                _irq_INTP3
                0x0011154a                _irq_NMI
                0x00111b68                _irq_INTCB0T
                0x00111752                _irq_INTTQ0OV
                0x001118f2                _irq_INTTP1CC1
                0x00111c64                _irq_INTCB3T
                0x00111d60                _irq_INTUA2T
                0x00111be6                _irq_INTCB2R
                0x00111444                _irq_setVect
                0x00111e5c                _irq_INTKR
                0x00111b14                _irq_INTTM0EQ0
                0x00111612                _irq_INTP0
                0x001117a2                _irq_INTTQ0CC1
                0x00111bbc                _irq_INTCB1T
                0x001114d4                _irq_chkErrors
                0x00111d36                _irq_INTUA2R_INTIIC0
                0x00111970                _irq_INTTP2CC1
                0x00111c3a                _irq_INTCB3R
                0x00111c8e                _irq_INTUA0R_INTCB4R
                0x001116da                _irq_INTP5
                0x001119ee                _irq_INTTP3CC1
                0x0011172a                _irq_INTP7
                0x00111572                _irq_TRAP0
                0x00111e86                _irq_INTWTI
                0x0011189e                _irq_INTTP1OV
                0x00111a18                _irq_INTTP4OV
                0x0011159a                _irq_TRAP1
                0x00111d0c                _irq_INTUA1T
                0x00111cb8                _irq_INTUA0T_INTCB4T
                0x001117cc                _irq_INTTQ0CC2
                0x0011191c                _irq_INTTP2OV
                0x00111ce2                _irq_INTUA1R_INTIIC2
                0x00111820                _irq_INTTP0OV
                0x00111dde                _irq_INTDMA1
                0x0011177a                _irq_INTTQ0CC0
 .text          0x00111eda      0x282 obj/ALLOC.o
                0x00111eda                _mem_init
                0x00111f88                _mem_alloc
                0x00111f4a                _mem_count
                0x00111f64                _mem_left
                0x00112088                _mem_free
 .text          0x0011215c       0xa0 obj/NEW.o
                0x0011217e                operator delete(void*)
                0x001121a0                operator new[](unsigned int)
                0x001121ce                operator new(unsigned int)
                0x0011215c                operator delete[](void*)
 .text          0x001121fc      0x3e4 obj/STRCLASS.o
                0x001124be                String::String(char const*)
                0x001121fc                String::String()
                0x0011221e                String::String()
                0x00112240                String::operator=(char const*)
                0x001122e8                String::init(char*)
                0x00112388                String::String(String const&)
                0x00112530                String::operator=(String const&)
                0x001123ea                String::String(String const&)
                0x0011244c                String::String(char const*)
 .text          0x001125e0      0x10c obj/SWTIM.o
                0x001125e0                Timer::Timer()
                0x001125ea                Timer::Timer()
                0x0011264a                IncTimer::getMsec()
                0x001125f4                IncTimer::getTime()
                0x00112682                DecTimer::Match()
 .text          0x001126ec      0x774 obj/util.o
                0x0011270c                strset(char*, int)
                0x00112724                HexToInt(int&, char*, int)
                0x00112a6e                bubble_sort_array(int, unsigned long*)
                0x0011294a                skipWhites(unsigned char*)
                0x00112a3e                addstr(char*, char const*)
                0x001129e4                fsumstr(char*, char*, int, int, int)
                0x001128c8                ltrim(char*)
                0x001128c4                matherr(exception*)
                0x00112cbe                cdaten(char*)
                0x00112d62                IntToHex(int, char*, unsigned int)
                0x001129ba                sumstr(char*, char*, int, int)
                0x00112c64                cdate(char*)
                0x00112c16                chgext(char*, char*)
                0x00112910                rtrim(char*)
                0x0011282c                _1on8_to_int(unsigned char)
                0x0011284e                windowFilter(short*, short*, int, int, int)
                0x00112978                packWhites(unsigned char*)
                0x00112a9e                fmtReal(long, int, int)
                0x001126ec                my_pow10(short)
                0x00112b96                pperc(char*, float, float)
 .text          0x00112e60      0x420 obj/I2C_SW.o
                0x001131ec                _i2c_ack
                0x00112fb6                _i2c_putc
                0x00112e70                _i2c_start
                0x00112eee                _i2c_stop
                0x00113134                _i2c_getc
                0x00112e60                _i2c_delay
                0x00112f68                _i2c_init
 .text          0x00113280      0x86e obj/I2Ceeprom.o
                0x001133c2                EE_write(void*, unsigned char, unsigned char)
                0x00113662                EE_sequential_random_read(unsigned char, unsigned char*, unsigned char)
                0x00113280                EE_init()
                0x00113a7a                EE_read_current_address(unsigned char*)
                0x001139cc                EE_random_byte_read(unsigned char, unsigned char*)
                0x00113886                EE_read_word(unsigned char)
                0x0011391c                EE_sequential_current_read(unsigned char*, unsigned char)
                0x001137f0                EE_read_int(unsigned char)
                0x00113576                EE_byte_write(unsigned char, unsigned char)
                0x0011374e                EE_read_float(unsigned char)
 .text          0x00113aee      0x664 obj/sioSG2.o
                0x00113d4a                _sio_getc_ch1
                0x00113c12                _sio_disable_rx_interrupt_ch1
                0x00113c62                _sio_disable_tx_interrupt_ch1
                0x00113bf4                _sio_enable_rx_interrupt_ch2
                0x00113dde                _sio_clocksel_ch2
                0x00113c44                _sio_enable_tx_interrupt_ch2
                0x00113f96                _sio_fill_ch3
                0x00113c3a                _sio_enable_tx_interrupt_ch1
                0x00113b32                _sio_init_ch1
                0x00113c58                _sio_disable_tx_interrupt_ch0
                0x001140fe                _sio_getw_ch3
                0x00113f3c                _sio_xfr_ch3
                0x00113c08                _sio_disable_rx_interrupt_ch0
                0x00113e60                _sio_xfr_ch2
                0x00113f02                _sio_getc_ch3
                0x00113cc8                _sio_getc_ch0
                0x00113d18                _sio_putc_ch1
                0x00113c26                _sio_disable_rx_interrupt_ch3
                0x00113bfe                _sio_enable_rx_interrupt_ch3
                0x00113be0                _sio_enable_rx_interrupt_ch0
                0x00113c76                _sio_disable_tx_interrupt_ch3
                0x00113e26                _sio_getc_ch2
                0x00113c6c                _sio_disable_tx_interrupt_ch2
                0x00113ef6                _sio_busy_ch3
                0x00113c4e                _sio_enable_tx_interrupt_ch3
                0x00113c96                _sio_putc_ch0
                0x00113e1a                _sio_busy_ch2
                0x00114054                _sio_read_ch3
                0x00113d02                _sio_clocksel_ch1
                0x00113c80                _sio_clocksel_ch0
                0x00113ff2                _sio_write_ch3
                0x00113d3e                _sio_busy_ch1
                0x001140b8                _sio_putw_ch3
                0x00113ed0                _sio_putc_ch3
                0x00113b34                _sio_init_ch2
                0x00113cbc                _sio_busy_ch0
                0x00113bea                _sio_enable_rx_interrupt_ch1
                0x00113aee                _sio_init_ch0
                0x00113c30                _sio_enable_tx_interrupt_ch0
                0x00113c1c                _sio_disable_rx_interrupt_ch2
                0x00113eba                _sio_clocksel_ch3
                0x00113d84                _sio_xfr_ch1
                0x00113b36                _sio_init_ch3
                0x00113df4                _sio_putc_ch2
 .text          0x00114152      0x3e2 obj/SOUND.o
                0x00114280                _goBuzzer
                0x00114190                _shutBuzzer
                0x0011417c                _buzzer_isPlaying
                0x00114152                buzzer_stop()
                0x00114218                buzzer_start()
                0x001142ee                _buzzer_init
                0x00114482                _buzzerManager
                0x001141a6                setPWM(unsigned short, unsigned char)
                0x00114186                _buzzerSound
 .text          0x00114534     0x4ce6 obj/ADC.o
                0x001149d6                CS5530_rstValidDataPresentInADCBuffer()
                0x00116cda                CS5530_sendCmd(CS5530_command, unsigned char*)
                0x0011501a                setSPI1mode()
                0x00115004                txBufferEmptySpi2()
                0x00114cde                CS5530_setAdcCoding(CS5530_adcCoding)
                0x001153e2                resetAdcValues(unsigned char)
                0x00116c48                txBufferNotEmpty()
                0x00114fbc                startContinuousConversionSpi2()
                0x00115a20                backup_new_gain_value(unsigned char, float)
                0x0011471e                CS5530_Spi1Initialization()
                0x00114d86                CS5530_setSampleFrequencySpi2(CS5530_sampleFrequecies)
                0x00114694                load_startSampling()
                0x00118e9a                CS5530_resetAdcComunication()
                0x00115472                controlAdcValuesRead()
                0x00115984                backup_date_adc_param(char*)
                0x00114d3e                CS5530_setRstSysSpi2(CS5530_rstSys)
                0x00114f9e                CS5530_setOpenCircuitDetectorSpi2(CS5530_openCircuitDetector)
                0x00114fc8                CS5530_setIntGainADConv(int, unsigned char*)
                0x001159a8                backup_calib_state(unsigned char, unsigned char)
                0x00115e80                CS5530_sendCmdSpi2(CS5530_command, unsigned char*)
                0x00117ab0                CS5530_getWatchdogAdcTimer()
                0x0011559a                CS5530_validDataPresentInADCBufferSpi2()
                0x00114aa2                CS5530_setInputShort(CS5530_inputShort)
                0x00114ffa                txBufferIsEmpty()
                0x00114d1a                CS5530_setPowerSafeModeSpi2(CS5530_powerSaveMode)
                0x00114cf0                CS5530_setOpenCircuitDetector(CS5530_openCircuitDetector)
                0x00114d74                CS5530_setLatchBitsSpi2(CS5530_outputLatchBits)
                0x00114a90                CS5530_setRstSys(CS5530_rstSys)
                0x00114a1a                CS5530_checkBlockCells(unsigned long*)
                0x00115be8                get_factory_adc_param()
                0x00115010                txBufferIsEmptySpi2()
                0x00115dee                txBufferNotEmptySpi2()
                0x00115b6e                backup_factory_offset_value(unsigned char, unsigned short)
                0x00115a5c                reset_backup_factory_values(unsigned char, unsigned char)
                0x00114ad8                CS5530_setSampleFrequecy(CS5530_sampleFrequecies)
                0x00114d0e                startContinuousConversion()
                0x001183d6                CS5530_EntrySpi1()
                0x00114ac6                CS5530_setLatchBits(CS5530_outputLatchBits)
                0x00115abc                backup_factory_gain_param(unsigned char, float, int, int)
                0x00114ab4                CS5530_setVoltageRef(CS5530_voltageRef)
                0x001149e0                CS5530_setCounterWaitingData()
                0x00118f4e                CS5530_validDataPresentInADCBuffer()
                0x001146a2                load_stopSampling()
                0x00114fe4                CS5530_rstValidDataPresentInADCBufferSpi2()
                0x00118cf8                adc_serial_init()
                0x00114d50                CS5530_setInputShortSpi2(CS5530_inputShort)
                0x00114d2c                CS5530_setPowerDownModeSpi2(CS5530_powerDownMode)
                0x00116c6c                SPI_StartTx()
                0x001149ea                CS5530_getCounterWaitingData()
                0x00114d02                endContinuousConversion()
                0x00114fee                txBufferEmpty()
                0x00115e12                SPI2_StartTx()
                0x00114a6c                CS5530_setPowerSafeMode(CS5530_powerSaveMode)
                0x00117ace                CS5530_EntrySpi2()
                0x00115092                setPINSPI1mode()
                0x00114fb0                endContinuousConversionSpi2()
                0x001150ba                setSPI2mode()
                0x00115da6                get_adc_param()
                0x00114f8c                CS5530_setAdcCodingSpi2(CS5530_adcCoding)
                0x001159e4                backup_new_offset_value(unsigned char, unsigned short)
                0x001148a2                CS5530_Spi2Initialization()
                0x00118ecc                adc_uC_init()
                0x00114534                samplePower()
                0x001149f4                CS5530_checkBlockComunication(int)
                0x00114a46                CS5530_setWatchdogAdcTimer(unsigned long)
                0x0011514a                setPINSPI2mode()
                0x00114d62                CS5530_setVoltageRefSpi2(CS5530_voltageRef)
                0x00114a7e                CS5530_setPowerDownMode(CS5530_powerDownMode)
 .text          0x0011921a      0x924 obj/PWM.o
                0x00119794                CloseLineEV(int)
                0x00119614                getStateCoverM3300Pump()
                0x0011960a                setStateCoverM3300Pump(bool)
                0x00119500                getCoverPumpState()
                0x00119484                enable_MOT(int)
                0x00119586                getSpeedPump(int)
                0x0011996e                pwmManager()
                0x001194e4                reg_pump_vel(unsigned char, unsigned char)
                0x00119446                enable_PWM_MOT(int)
                0x001192da                init_PWM_MOT5()
                0x001192d4                init_PWM_MOT2()
                0x001198e0                EVsManager()
                0x001192d8                init_PWM_MOT4()
                0x0011956a                setSpeedPump(int, unsigned char)
                0x0011954e                getRampPump(int)
                0x00119516                setBlockRelay(int, int)
                0x00119536                setRampPump(int, unsigned char)
                0x001193f6                enable_PWM_EV()
                0x001192d6                init_PWM_MOT3()
                0x001194ae                disable_PWM_MOT(int)
                0x001193ce                changeEVstatus(unsigned char)
                0x0011959e                setPwmCycle(int, unsigned char)
                0x00119424                disable_PWM_EV()
                0x001195d8                setPwmMotCycle(int, int)
                0x0011961e                OpenLineEV(int)
                0x0011921a                init_PWM_MOT1()
                0x0011939a                set_PWM_EVuC(unsigned char)
                0x001192dc                init_PWM_EVuC()
 .text          0x00119b3e     0x165c obj/QUEUEUART.o
                0x0011b136                RingBuffer::RingBuffer(unsigned int)
                0x0011a62a                QueueUart::GetNumBytesInTransmissionBuffer()
                0x00119dd6                UartDeviceAbstraction::SetTransmissionBuffer(unsigned char)
                0x0011a352                UartDeviceAbstraction::TransmitData(unsigned char)
                0x0011a936                QueueUart::SetReceiveCallBack(void (*)(UartDeviceAbstraction*, unsigned int))
                0x0011ac32                UartDeviceAbstraction::SelectUart1()
                0x0011a3ca                UartDeviceAbstraction::ReceiveData()
                0x00119c4a                UartDeviceAbstraction::TurnOn()
                0x0011aa6c                QueueUart::TransmitData(unsigned char const*)
                0x00119ee8                UartDeviceAbstraction::IrqHandUA2T(int)
                0x00119ba8                RingBuffer::Equals(unsigned char const*, unsigned int)
                0x0011a4ce                QueueUart::TransmitLock()
                0x0011a70a                QueueUart::SetTransmitCallBack(void (*)(UartDeviceAbstraction*, bool))
                0x00119db4                UartDeviceAbstraction::IsTransmissionBufferEmpty()
                0x0011ad2e                UartDeviceAbstraction::SelectUart0()
                0x0011a310                UartDeviceAbstraction::StartTransmission()
                0x0011a876                QueueUart::ReceiveData(unsigned char&)
                0x0011a454                QueueUart::StartTransmission()
                0x0011b118                RingBuffer::~RingBuffer()
                0x0011a2f4                UartDeviceAbstraction::TransmitLock()
                0x0011a802                QueueUart::ReceiveData(unsigned short*, int&)
                0x0011ae16                UartDeviceAbstraction::UartDeviceAbstraction(UartDeviceAbstraction::UARTDevice)
                0x0011a5c2                QueueUart::TransmitData(unsigned char const*, int)
                0x00119f16                UartDeviceAbstraction::IrqHandUA0R(int)
                0x0011a942                QueueUart::GetNumBytesInReceptionBuffer()
                0x0011b072                QueueUart::QueueUart(UartDeviceAbstraction::UARTDevice)
                0x00119bee                UartDeviceAbstraction::Init()
                0x0011a93c                QueueUart::GetReceptionBufferSize()
                0x0011aab6                UartDeviceAbstraction::~UartDeviceAbstraction()
                0x00119e08                UartDeviceAbstraction::GetReceptionError()
                0x0011a302                UartDeviceAbstraction::TransmitUnlock()
                0x0011a624                QueueUart::GetTransmissionBufferSize()
                0x0011a186                UartDeviceAbstraction::SetBaudRate(UartDeviceAbstraction::UARTBaudRate, bool)
                0x0011a3bc                UartDeviceAbstraction::ReceiveUnlock()
                0x00119d50                UartDeviceAbstraction::~UartDeviceAbstraction()
                0x00119cec                UartDeviceAbstraction::~UartDeviceAbstraction()
                0x0011a74a                QueueUart::ReceiveUnlock()
                0x0011a338                UartDeviceAbstraction::StartTransmission(unsigned char)
                0x00119e8c                UartDeviceAbstraction::IrqHandUA0T(int)
                0x0011a77a                QueueUart::ClearReceptionBuffer()
                0x0011b0fa                RingBuffer::~RingBuffer()
                0x0011a54c                QueueUart::TransmitData(unsigned char)
                0x0011a710                QueueUart::ReceiveLock()
                0x0011a682                QueueUart::TransmitCallback(UartDeviceAbstraction*)
                0x0011a432                QueueUart::~QueueUart()
                0x00119fae                UartDeviceAbstraction::IrqHandUA2R(int)
                0x00119ffa                UartDeviceAbstraction::SetParity(UartDeviceAbstraction::UARTParity, bool)
                0x0011a3ae                UartDeviceAbstraction::ReceiveLock()
                0x0011a3a2                UartDeviceAbstraction::ClearError()
                0x0011a51c                QueueUart::TransmitUnlock()
                0x0011af00                UartDeviceAbstraction::UartDeviceAbstraction(UartDeviceAbstraction::UARTDevice)
                0x00119dec                UartDeviceAbstraction::GetReceptionBuffer()
                0x0011a8c2                QueueUart::ReceiveData(unsigned char*, int&)
                0x0011a0ae                UartDeviceAbstraction::SetFrameBits(UartDeviceAbstraction::UARTFrameBits, bool)
                0x00119b3e                RingBuffer::Clear(bool)
                0x0011a638                QueueUart::GetFreeBytesInTransmissionBuffer()
                0x0011a950                QueueUart::GetFreeBytesInReceptionBuffer()
                0x0011a9d8                QueueUart::ReceiveCallback(UartDeviceAbstraction*, unsigned int)
                0x0011a798                QueueUart::ClearTransmissionBuffer()
                0x00119f62                UartDeviceAbstraction::IrqHandUA1R(int)
                0x0011a11a                UartDeviceAbstraction::SetStopBits(UartDeviceAbstraction::UARTStopBits, bool)
                0x0011a7ba                QueueUart::ReceiveData(unsigned short&)
                0x00119eba                UartDeviceAbstraction::IrqHandUA1T(int)
                0x0011ab52                UartDeviceAbstraction::SelectUart2()
                0x0011a40a                UartDeviceAbstraction::SetReceiveCallBack(void (*)(UartDeviceAbstraction*, unsigned int))
                0x0011b168                RingBuffer::RingBuffer(unsigned int)
                0x00119b76                RingBuffer::Insert(unsigned char)
                0x00119ca2                UartDeviceAbstraction::TurnOff()
                0x0011ab20                QueueUart::~QueueUart()
                0x0011a410                QueueUart::~QueueUart()
                0x0011a3a8                UartDeviceAbstraction::SetTransmitCallBack(void (*)(UartDeviceAbstraction*))
                0x0011a99a                QueueUart::resetFifo()
                0x0011afea                QueueUart::QueueUart(UartDeviceAbstraction::UARTDevice)
 .text          0x0011b19a      0x756 obj/PROTOCOLSTDUART.o
                0x0011b2fa                stdUartProtocolAbstraction::addDataToReceiveBuffer(unsigned char*, int, int)
                0x0011b754                stdUartProtocolAbstraction::stdUartProtocolAbstraction(UartDeviceAbstraction::UARTDevice)
                0x0011b710                stdUartProtocolAbstraction::~stdUartProtocolAbstraction()
                0x0011b58c                stdUartProtocolAbstraction::checkTimeOutElapsed()
                0x0011b732                stdUartProtocolAbstraction::~stdUartProtocolAbstraction()
                0x0011b1a0                stdUartProtocolAbstraction::SetReceiveCallBack(void (*)(UartDeviceAbstraction*, unsigned int))
                0x0011b4ba                stdUartProtocolAbstraction::SendCommand(unsigned char*, int, int)
                0x0011b6de                stdUartProtocolAbstraction::~stdUartProtocolAbstraction()
                0x0011b296                stdUartProtocolAbstraction::rstError()
                0x0011b822                stdUartProtocolAbstraction::stdUartProtocolAbstraction(UartDeviceAbstraction::UARTDevice)
                0x0011b430                stdUartProtocolAbstraction::popPacketReceived(int&)
                0x0011b1a8                stdUartProtocolAbstraction::restoreIntialCondition()
                0x0011b19a                stdUartProtocolAbstraction::SetDataAnalyseCallBack(bool (*)(unsigned short, stdUartProtocolAbstraction*))
                0x0011b2f2                stdUartProtocolAbstraction::IsTransmissionAvailable()
                0x0011b1b8                stdUartProtocolAbstraction::setError(int, bool)
                0x0011b2b0                stdUartProtocolAbstraction::getLastError()
                0x0011b60e                stdUartProtocolAbstraction::Manager()
                0x0011b54c                stdUartProtocolAbstraction::setLastDataReceivedBuffer(int)
                0x0011b48c                stdUartProtocolAbstraction::calculateChecksum(unsigned char*, unsigned char)
                0x0011b1a6                stdUartProtocolAbstraction::stdUartProtocolAbstractionReceiveCallback(UartDeviceAbstraction*, unsigned int)
                0x0011b2f6                stdUartProtocolAbstraction::IsReceptionAvailable()
                0x0011b470                stdUartProtocolAbstraction::getNewPacketReceived()
                0x0011b358                stdUartProtocolAbstraction::setReceivedOpCode(int)
                0x0011b2b6                stdUartProtocolAbstraction::popError()
                0x0011b476                stdUartProtocolAbstraction::rstNewPacketReceived()
 .text          0x0011b8f0     0x1eb2 obj/PROTOCOLSIFRA.o
                0x0011bf34                SIFRAProtocol::getMsg()
                0x0011bc38                SIFRAProtocol::SIFRA_getStatusCmdDecode()
                0x0011bf9c                SIFRAProtocol::jumpToLoaderHandler()
                0x0011ba82                SIFRAProtocol::SIFRA_getInfoCmdDecode()
                0x0011d706                SIFRAProtocol::SIFRAProtocol(UartDeviceAbstraction::UARTDevice, int)
                0x0011be86                SIFRAProtocol::checksum(unsigned char, unsigned char, unsigned char)
                0x0011b9da                SIFRAProtocol::SIFRA_decodeScalesPhaseCmd(unsigned char*)
                0x0011bdd8                SIFRAProtocol::getLastRemoteNodeID()
                0x0011bce6                SIFRAProtocol::SIFRA_setZeroCell8_Cell15()
                0x0011bcbe                SIFRAProtocol::SIFRA_setResetCalib()
                0x0011b8f0                SIFRAProtocol::SIFRA_decodeStartCmd(unsigned char*)
                0x0011bbd8                SIFRAProtocol::SIFRA_setScalesNotCalib()
                0x0011bc98                SIFRAProtocol::SIFRA_setZeroVerification()
                0x0011bd34                SIFRAProtocol::SIFRA_setGainCell15()
                0x0011cd08                SIFRAProtocol::Manager()
                0x0011b9ba                SIFRAProtocol::SIFRA_decodeWeightSensibilityCmd(unsigned char*)
                0x0011bec0                SIFRAProtocol::sendMsg(int)
                0x0011bdde                SIFRAProtocol::checkOpCode(unsigned char, int, int&)
                0x0011c9a4                SIFRAProtocol::sendSIFRAStatus()
                0x0011b9ca                SIFRAProtocol::SIFRA_decodeRestartFormulaCmd(unsigned char*)
                0x0011c11a                SIFRAProtocol::sendSIFRARamDebug()
                0x0011d25c                SIFRAProtocol::SIFRADataAnalyse(unsigned short, stdUartProtocolAbstraction*)
                0x0011bd5c                SIFRAProtocol::SIFRA_setJumpToLoader()
                0x0011bace                SIFRAProtocol::SIFRA_getDebugStartCmdDecode()
                0x0011bb1a                SIFRAProtocol::SIFRA_getDebugRamCmdDecode()
                0x0011bdd2                SIFRAProtocol::setLastRemoteNodeID(unsigned char)
                0x0011d66a                SIFRAProtocol::SIFRAProtocol(UartDeviceAbstraction::UARTDevice, int)
                0x0011bdcc                SIFRAProtocol::getLocalNodeID()
                0x0011c646                SIFRAProtocol::sendSIFRAViaDebug()
                0x0011bd84                SIFRAProtocol::resetApplicationHandler()
                0x0011cbf0                SIFRAProtocol::sendSIFRAStart()
                0x0011bb66                SIFRAProtocol::SIFRA_restartWeightCoverControl()
                0x0011d638                SIFRAProtocol::~SIFRAProtocol()
                0x0011c0b8                SIFRAProtocol::sendAcknowledge()
                0x0011bb40                SIFRAProtocol::SIFRA_setWeightSensibility()
                0x0011bc5e                SIFRAProtocol::SIFRA_setStart()
                0x0011d5f4                SIFRAProtocol::~SIFRAProtocol()
                0x0011d616                SIFRAProtocol::~SIFRAProtocol()
                0x0011bbb2                SIFRAProtocol::SIFRA_setScalesPhase()
                0x0011b9f6                SIFRAProtocol::sendSIFRALoadSamples(float)
                0x0011c52e                SIFRAProtocol::sendSIFRAStartDebug()
                0x0011bdc6                SIFRAProtocol::setLocalNodeID(unsigned char)
                0x0011c832                SIFRAProtocol::sendSIFRAInfo()
                0x0011baf4                SIFRAProtocol::SIFRA_getDebugStatusCmdDecode()
                0x0011baa8                SIFRAProtocol::SIFRA_getDebugViaCmdDecode()
                0x0011bd0c                SIFRAProtocol::SIFRA_setGainCell8()
                0x0011bb8c                SIFRAProtocol::SIFRA_restartFormula()
                0x0011bbfe                SIFRAProtocol::SIFRA_set_Stop_All()
                0x0011c2ee                SIFRAProtocol::sendSIFRAStatusDebug()
 .text          0x0011d7a2     0x9720 obj/CPUSIFRA_MANAGER.o
                0x0011d8d4                SIFRA_Manager::SIFRAMsg_startAcquisitionHandler()
                0x0011d7a6                SIFRA_Manager::SIFRABreak_Manager()
                0x001217a0                SIFRA_Manager::SIFRARisciacquo_Manager(int)
                0x0011f8ea                SIFRA_Manager::Verifica_encoder_motori()
                0x0011da6e                SIFRA_Manager::readLoadInLine8()
                0x0011de06                SIFRA_Manager::Find_Num_of_Enabled_Lines(unsigned char)
                0x00122c82                SIFRA_Manager::SIFRASacca_Manager()
                0x0011e0ea                SIFRA_Manager::salva_rapporto_flussopeso(int)
                0x001214e4                SIFRA_Manager::SIFRAService_Manager()
                0x0011ddbe                SIFRA_Manager::controllo_vuoto(int)
                0x0011e048                SIFRA_Manager::calc_flusso_pompa()
                0x0011da58                SIFRA_Manager::SifraStopTimers()
                0x0011e93a                SIFRA_Manager::SIFRA_resetStatusErrorStop()
                0x00123a68                SIFRA_Manager::SIFRAMsg_debugRamAskedHandler()
                0x0011dbb6                SIFRA_Manager::setErrorEEpromReading()
                0x0012396a                SIFRA_Manager::SIFRATest_OpenMoreEVs()
                0x001215e4                SIFRA_Manager::SIFRAST_Manager(int)
                0x0011fff6                SIFRA_Manager::Read_Param_Backup()
                0x0011f81c                SIFRA_Manager::calc_next_theor_weight(int)
                0x00126b0e                SIFRA_Manager::SIFRA_Manager(SIFRAProtocol*)
                0x0011e9c0                SIFRA_Manager::set_unstable_threshold(unsigned char)
                0x0011dd2a                SIFRA_Manager::getSIFRApreviousStatus()
                0x0011d7a4                SIFRA_Manager::~SIFRA_Manager()
                0x0012026a                SIFRA_Manager::Backup_StatoStart()
                0x0011dd34                SIFRA_Manager::getSIFRAphase()
                0x00123ad8                SIFRA_Manager::SIFRAMsg_infoAskedHandler()
                0x0011d962                SIFRA_Manager::SifraResetViaStatus()
                0x0011e008                SIFRA_Manager::ResetMotorStepCounter()
                0x0011f9f4                SIFRA_Manager::controllo_non_cala(int, int)
                0x0011fd58                SIFRA_Manager::SIFRARampe_Manager(unsigned char, unsigned char)
                0x00124dcc                SIFRA_Manager::SIFRATest_FlussoPompa(int)
                0x00120900                SIFRA_Manager::readZeroInBothLine()
                0x00123af4                SIFRA_Manager::SIFRAMsg_statusAskedHandler()
                0x0011fec6                SIFRA_Manager::SifraResetStateMachine()
                0x0011e60e                SIFRA_Manager::calc_param_weight(ChannelsBackupParam*)
                0x00123b48                SIFRA_Manager::Decode_StartMsg()
                0x0011e474                SIFRA_Manager::check_volume_error(int)
                0x0011fcd0                SIFRA_Manager::SIFRASpeedPump_Manager(unsigned char)
                0x00125366                SIFRA_Manager::SIFRACalibr_Manager()
                0x00121352                SIFRA_Manager::SIFRAOpenLineEV(int)
                0x0011dd3e                SIFRA_Manager::controllo_flussopeso(long, unsigned short, float)
                0x0011dbc2                SIFRA_Manager::GetSystemLoad(unsigned long*)
                0x0011d9ae                SIFRA_Manager::SifraResetStartCmd()
                0x00120c78                SIFRA_Manager::DefaultSystemReset()
                0x0011e036                SIFRA_Manager::getStatePump(int)
                0x0011d8de                SIFRA_Manager::SIFRAMsg_resetApplicationHandler()
                0x0011e8be                SIFRA_Manager::Encoder_counter()
                0x00120d96                SIFRA_Manager::SIFRATestPinch()
                0x0011e290                SIFRA_Manager::Init_Variables()
                0x00120c9e                SIFRA_Manager::SIFRAStop_Manager()
                0x0011e1c4                SIFRA_Manager::Set_START_Erogazione(int)
                0x0011d936                SIFRA_Manager::SIFRAMsg_protocolErrorHandler()
                0x00120d7e                SIFRA_Manager::SIFRACloseLineEV(int)
                0x001225d0                SIFRA_Manager::SIFRAManual_Manager(int)
                0x0011e74e                SIFRA_Manager::AdattaPesoSpecifico(unsigned short)
                0x0011dcbe                SIFRA_Manager::SIFRASetScalesPhase(unsigned char, unsigned char)
                0x0011fb6a                SIFRA_Manager::FlashLed_hw_error()
                0x0011e69e                SIFRA_Manager::aggiorna_capacita(unsigned short, unsigned short, float)
                0x0011d9e2                SIFRA_Manager::SifraResetFillingData()
                0x0011ffa6                SIFRA_Manager::Read_Param_Encoder()
                0x0011eb78                SIFRA_Manager::Verifica_peso_massimo()
                0x00120c20                SIFRA_Manager::SifraResetSystemParams()
                0x0011e960                SIFRA_Manager::SIFRA_resetStatusError()
                0x001201f6                SIFRA_Manager::default_struttura_flussopeso()
                0x0011ea32                SIFRA_Manager::SIFRAPhase_manager()
                0x0011e8ec                SIFRA_Manager::EncoderPumpsControl()
                0x0011ec72                SIFRA_Manager::Verifica_celle()
                0x0012566a                SIFRA_Manager::SIFRASetScalesNotCalib()
                0x00121200                SIFRA_Manager::SIFRAError_Manager()
                0x0012004a                SIFRA_Manager::DownLoad_StatoStart()
                0x0011da0c                SIFRA_Manager::SifraResetServiceData()
                0x0011e22c                SIFRA_Manager::set_air_alarm(int)
                0x0011de46                SIFRA_Manager::Find_Enable_line(unsigned char)
                0x0011e16e                SIFRA_Manager::setta_led_pannello(int, bool)
                0x0011fe90                SIFRA_Manager::setStatePump(int, int)
                0x001256c2                SIFRA_Manager::SIFRASample_Manager()
                0x00120538                SIFRA_Manager::readLoadInLine15()
                0x0011e3f6                SIFRA_Manager::check_conditions(int)
                0x0011d920                SIFRA_Manager::SIFRAMsg_hwErrorHandler()
                0x0011e71c                SIFRA_Manager::ViaDaEseguire()
                0x0012675a                SIFRA_Manager::SIFRA_Manager(SIFRAProtocol*)
                0x00123b10                SIFRA_Manager::SIFRAMsg_setStartHandler()
                0x0011d7a2                SIFRA_Manager::~SIFRA_Manager()
                0x001261ee                SIFRA_Manager::Manager()
                0x00120bec                SIFRA_Manager::SifraResetStatus()
                0x00120152                SIFRA_Manager::Write_Param_Encoder()
                0x0011e980                SIFRA_Manager::Set_weight_threshold()
                0x0011def4                SIFRA_Manager::read_encoder_motors(int)
                0x00125d1c                SIFRA_Manager::SIFRAcheck_new_command()
                0x0011dc96                SIFRA_Manager::changeSIFRAstatus(unsigned char)
                0x0011da1a                SIFRA_Manager::SifraResetBackup()
                0x0011ed3c                SIFRA_Manager::SIFRAAirIn_Manager()
                0x001201a2                SIFRA_Manager::Write_Param_Backup()
                0x0011d94c                SIFRA_Manager::SIFRAMsg_unknownErrorHandler()
                0x0011eb1a                SIFRA_Manager::SIFRACalibResetData()
                0x00120332                SIFRA_Manager::VerificaESD_Damage()
                0x00123aa0                SIFRA_Manager::SIFRAMsg_debugStartAskedHandler()
                0x0011f178                SIFRA_Manager::SIFRATestLed_Manager()
                0x00121d36                SIFRA_Manager::SIFRART_Manager(int)
                0x0011de64                SIFRA_Manager::Setta_filtro_peso(int)
                0x001204e2                SIFRA_Manager::SetHardwareVersion()
                0x001213f2                SIFRA_Manager::SIFRATestEMC_Manager()
                0x0011d81c                SIFRA_Manager::SIFRAWeightControlRestart(char)
                0x00124712                SIFRA_Manager::SIFRALed_Manager()
                0x0011dd20                SIFRA_Manager::getSIFRAstatus()
                0x00123b2c                SIFRA_Manager::SIFRAMsg_setStopAllHandler()
                0x00124f1e                SIFRA_Manager::SIFRATest_Pompe(int)
                0x00123abc                SIFRA_Manager::SIFRAMsg_debugViaAskedHandler()
                0x0011e994                SIFRA_Manager::LoadControl()
                0x0011ff30                SIFRA_Manager::Verifica_apertura_sportello()
                0x0011e1fe                SIFRA_Manager::reset_state_this_led(int, bool)
                0x0011e6f2                SIFRA_Manager::controllo_capacita_iniziale(unsigned short)
                0x00123a84                SIFRA_Manager::SIFRAMsg_debugStatusAskedHandler()
                0x0011e7a6                SIFRA_Manager::UpdateDebugStruct()
                0x0011df40                SIFRA_Manager::encoder_updateCnt()
 .text          0x00126ec2      0x792 obj/NVRDRV.o
                0x00126f90                _nvr_chkRead
                0x001273ac                _nvr_readUserChkBlock
                0x00127068                _nvr_writeUserChkBlock
                0x00127008                _drv_writeMem
                0x0012747a                _nvr_readParam
                0x00126ec2                _nvr_init
                0x0012710c                _nvr_writeParam
                0x00127274                _nvr_chkVerify
                0x00127042                _nvr_chkWrite
                0x00126efa                _nvr_setDeviceAddress
                0x00127236                _nvr_writeUserMem
                0x00126fca                _nvr_readUserMem
                0x00126ee4                _nvr_errors
                0x00126f56                _drv_readMem
                0x00126f18                _nvr_chkCalcBuf
 .text          0x00127654      0x2aa obj/LEDS_PANEL.o
                0x001277b4                _switchoff_leds
                0x00127654                _LedDrivers_clearFifo
                0x001276ac                _switchon_red_leds
                0x0012775c                _switchon_leds
                0x00127898                _LedDrivers_init
                0x00127672                _LedDrivers_sendData
                0x001277fc                _LedDrivers_DisplayTest
                0x00127704                _switchon_green_leds
 .text          0x001278fe       0x20 c:\gcc850\lib\libc.a(lib_a-atoi.o)
                0x0012790e                _atoi
                0x001278fe                __atoi_r
 .text          0x0012791e       0x20 c:\gcc850\lib\libc.a(lib_a-memcpy.o)
                0x0012791e                _memcpy
 .text          0x0012793e       0x1a c:\gcc850\lib\libc.a(lib_a-memset.o)
                0x0012793e                _memset
 .text          0x00127958       0xa6 c:\gcc850\lib\libc.a(lib_a-sprintf.o)
                0x00127958                _sprintf
                0x001279ae                __sprintf_r
 .text          0x001279fe       0x34 c:\gcc850\lib\libc.a(lib_a-strcmp.o)
                0x001279fe                _strcmp
 .text          0x00127a32       0x20 c:\gcc850\lib\libc.a(lib_a-strcpy.o)
                0x00127a32                _strcpy
 .text          0x00127a52       0x1a c:\gcc850\lib\libc.a(lib_a-strlen.o)
                0x00127a52                _strlen
 .text          0x00127a6c      0x226 c:\gcc850\lib\libc.a(lib_a-strtol.o)
                0x00127c78                _strtol
                0x00127a6c                __strtol_r
 .text          0x00127c92     0x1a6a c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
                0x00127e3c                __svfprintf_r
 .text          0x001296fc        0x0 c:\gcc850\lib\libc.a(lib_a-ctype_.o)
 .text          0x001296fc     0x1530 c:\gcc850\lib\libc.a(lib_a-dtoa.o)
                0x0012990a                __dtoa_r
 .text          0x0012ac2c      0x324 c:\gcc850\lib\libc.a(lib_a-freer.o)
                0x0012ac2c                __malloc_trim_r
                0x0012acfc                __free_r
 .text          0x0012af50        0x0 c:\gcc850\lib\libc.a(lib_a-impure.o)
 .text          0x0012af50       0x9a c:\gcc850\lib\libc.a(lib_a-locale.o)
                0x0012afd4                _setlocale
                0x0012af6e                __setlocale_r
                0x0012af50                ___locale_charset
                0x0012af64                _localeconv
                0x0012af5a                __localeconv_r
 .text          0x0012afea      0x6a8 c:\gcc850\lib\libc.a(lib_a-mallocr.o)
                0x0012afea                __malloc_r
 .text          0x0012b692       0x32 c:\gcc850\lib\libc.a(lib_a-memchr.o)
                0x0012b692                _memchr
 .text          0x0012b6c4       0x48 c:\gcc850\lib\libc.a(lib_a-memmove.o)
                0x0012b6c4                _memmove
 .text          0x0012b70c        0x4 c:\gcc850\lib\libc.a(lib_a-mlock.o)
                0x0012b70c                ___malloc_lock
                0x0012b70e                ___malloc_unlock
 .text          0x0012b710      0xbc8 c:\gcc850\lib\libc.a(lib_a-mprec.o)
                0x0012bb40                ___d2b
                0x0012ba68                ___any_on
                0x0012b7fa                ___mcmp
                0x0012be4e                ___multiply
                0x0012b88a                ___b2d
                0x0012ba1a                ___copybits
                0x0012bc40                ___mdiff
                0x0012c218                ___s2b
                0x0012b77e                ___lo0bits
                0x0012bad2                __Balloc
                0x0012b9c0                __mprec_log10
                0x0012c092                ___multadd
                0x0012b94c                ___ratio
                0x0012c078                ___i2b
                0x0012c156                ___pow5mult
                0x0012bd6c                ___lshift
                0x0012b710                __Bfree
                0x0012b72e                ___hi0bits
                0x0012b836                ___ulp
 .text          0x0012c2d8      0x452 c:\gcc850\lib\libc.a(lib_a-reallocr.o)
                0x0012c2d8                __realloc_r
 .text          0x0012c72a       0x26 c:\gcc850\lib\libc.a(lib_a-s_isinfd.o)
                0x0012c72a                ___isinfd
 .text          0x0012c750       0x1e c:\gcc850\lib\libc.a(lib_a-s_isnand.o)
                0x0012c750                ___isnand
 .text          0x0012c76e       0x2a c:\gcc850\lib\libc.a(lib_a-sbrkr.o)
                0x0012c76e                __sbrk_r
 .text          0x0012c798       0x16 c:\gcc850\lib\libc.a(lib_a-stat.o)
                0x0012c798                __stat
 .text          0x0012c7ae       0x12 c:\gcc850\lib\libc.a(lib_a-trap.o)
                0x0012c7ae                ___trap0
 .text          0x0012c7c0       0x8a c:\gcc850\lib\libc.a(lib_a-callocr.o)
                0x0012c7c0                __calloc_r
 .text          0x0012c84a       0x5e c:\gcc850\lib\libc.a(lib_a-sbrk.o)
                0x0012c84a                __sbrk
 .text          0x0012c8a8       0x16 c:\gcc850\lib\libc.a(lib_a-write.o)
                0x0012c8a8                __write
 .text          0x0012c8be       0x10 c:\gcc850\lib\libc.a(lib_a-abort.o)
                0x0012c8be                _abort
 .text          0x0012c8ce      0x1a8 c:\gcc850\lib\libc.a(lib_a-signal.o)
                0x0012c8ce                __raise_r
                0x0012ca00                ___sigtramp
                0x0012c93a                _raise
                0x0012c98c                __init_signal
                0x0012c99c                ___sigtramp_r
                0x0012ca60                _signal
                0x0012ca12                __signal_r
                0x0012c94c                __init_signal_r
 .text          0x0012ca76       0x3a c:\gcc850\lib\libc.a(lib_a-signalr.o)
                0x0012ca76                __getpid_r
                0x0012ca82                __kill_r
 .text          0x0012cab0       0x4a c:\gcc850\lib\libc.a(lib_a-_Exit.o)
                0x0012cab0                __exit
 .text          0x0012cafa        0x4 c:\gcc850\lib\libc.a(lib_a-getpid.o)
                0x0012cafa                __getpid
 .text          0x0012cafe       0x18 c:\gcc850\lib\libc.a(lib_a-kill.o)
                0x0012cafe                __kill
 .text          0x0012cb16       0x3e c:\gcc850\lib\libgcc.a(_mulsi3.o)
                0x0012cb16                ___mulsi3
 .text          0x0012cb54       0x32 c:\gcc850\lib\libgcc.a(_divsi3.o)
                0x0012cb54                ___divsi3
 .text          0x0012cb86       0x36 c:\gcc850\lib\libgcc.a(_udivsi3.o)
                0x0012cb86                ___udivsi3
 .text          0x0012cbbc       0x2a c:\gcc850\lib\libgcc.a(_modsi3.o)
                0x0012cbbc                ___modsi3
 .text          0x0012cbe6       0x2a c:\gcc850\lib\libgcc.a(_umodsi3.o)
                0x0012cbe6                ___umodsi3
 .text          0x0012cc10       0x68 c:\gcc850\lib\libgcc.a(_save_20c.o)
                0x0012cc44                __return_r20_r31
                0x0012cc10                __save_r20_r31
 .text          0x0012cc78       0x50 c:\gcc850\lib\libgcc.a(_save_23c.o)
                0x0012cc78                __save_r23_r31
                0x0012cca0                __return_r23_r31
 .text          0x0012ccc8       0x40 c:\gcc850\lib\libgcc.a(_save_25c.o)
                0x0012cce8                __return_r25_r31
                0x0012ccc8                __save_r25_r31
 .text          0x0012cd08       0x38 c:\gcc850\lib\libgcc.a(_save_26c.o)
                0x0012cd24                __return_r26_r31
                0x0012cd08                __save_r26_r31
 .text          0x0012cd40       0x30 c:\gcc850\lib\libgcc.a(_save_27c.o)
                0x0012cd40                __save_r27_r31
                0x0012cd58                __return_r27_r31
 .text          0x0012cd70       0x28 c:\gcc850\lib\libgcc.a(_save_28c.o)
                0x0012cd70                __save_r28_r31
                0x0012cd84                __return_r28_r31
 .text          0x0012cd98       0x20 c:\gcc850\lib\libgcc.a(_save_29c.o)
                0x0012cda8                __return_r29_r31
                0x0012cd98                __save_r29_r31
 .text          0x0012cdb8       0x18 c:\gcc850\lib\libgcc.a(_save_31c.o)
                0x0012cdc4                __return_r31
                0x0012cdb8                __save_r31
 .text          0x0012cdd0       0x14 c:\gcc850\lib\libgcc.a(_save_varargs.o)
                0x0012cdd0                __save_r6_r9
 .text          0x0012cde4       0x36 c:\gcc850\lib\libgcc.a(_fixunssfsi.o)
                0x0012cde4                ___fixunssfsi
 .text          0x0012ce1a      0x25e c:\gcc850\lib\libgcc.a(_addsub_sf.o)
                0x0012cfc0                ___subsf3
                0x0012d022                ___addsf3
 .text          0x0012d078      0x174 c:\gcc850\lib\libgcc.a(_mul_sf.o)
                0x0012d078                ___mulsf3
 .text          0x0012d1ec      0x11c c:\gcc850\lib\libgcc.a(_div_sf.o)
                0x0012d1ec                ___divsf3
 .text          0x0012d308       0x66 c:\gcc850\lib\libgcc.a(_ne_sf.o)
                0x0012d308                ___nesf2
 .text          0x0012d36e       0x60 c:\gcc850\lib\libgcc.a(_gt_sf.o)
                0x0012d36e                ___gtsf2
 .text          0x0012d3ce       0x60 c:\gcc850\lib\libgcc.a(_ge_sf.o)
                0x0012d3ce                ___gesf2
 .text          0x0012d42e       0x66 c:\gcc850\lib\libgcc.a(_lt_sf.o)
                0x0012d42e                ___ltsf2
 .text          0x0012d494       0x66 c:\gcc850\lib\libgcc.a(_le_sf.o)
                0x0012d494                ___lesf2
 .text          0x0012d4fa       0x70 c:\gcc850\lib\libgcc.a(_si_to_sf.o)
                0x0012d4fa                ___floatsisf
 .text          0x0012d56a       0x82 c:\gcc850\lib\libgcc.a(_sf_to_si.o)
                0x0012d56a                ___fixsfsi
 .text          0x0012d5ec        0x0 c:\gcc850\lib\libgcc.a(_thenan_sf.o)
 .text          0x0012d5ec       0x7a c:\gcc850\lib\libgcc.a(_usi_to_sf.o)
                0x0012d5ec                ___floatunsisf
 .text          0x0012d666      0x3fa c:\gcc850\lib\libgcc.a(_addsub_df.o)
                0x0012d998                ___subdf3
                0x0012da02                ___adddf3
 .text          0x0012da60      0x270 c:\gcc850\lib\libgcc.a(_mul_df.o)
                0x0012da60                ___muldf3
 .text          0x0012dcd0      0x188 c:\gcc850\lib\libgcc.a(_div_df.o)
                0x0012dcd0                ___divdf3
 .text          0x0012de58       0x6e c:\gcc850\lib\libgcc.a(_eq_df.o)
                0x0012de58                ___eqdf2
 .text          0x0012dec6       0x6e c:\gcc850\lib\libgcc.a(_ne_df.o)
                0x0012dec6                ___nedf2
 .text          0x0012df34       0x68 c:\gcc850\lib\libgcc.a(_gt_df.o)
                0x0012df34                ___gtdf2
 .text          0x0012df9c       0x68 c:\gcc850\lib\libgcc.a(_ge_df.o)
                0x0012df9c                ___gedf2
 .text          0x0012e004       0x6e c:\gcc850\lib\libgcc.a(_lt_df.o)
                0x0012e004                ___ltdf2
 .text          0x0012e072       0x9e c:\gcc850\lib\libgcc.a(_si_to_df.o)
                0x0012e072                ___floatsidf
 .text          0x0012e110       0xaa c:\gcc850\lib\libgcc.a(_df_to_si.o)
                0x0012e110                ___fixdfsi
 .text          0x0012e1ba        0x0 c:\gcc850\lib\libgcc.a(_thenan_df.o)
 .text          0x0012e1ba       0xc2 c:\gcc850\lib\libgcc.a(_usi_to_df.o)
                0x0012e1ba                ___floatunsidf
 .text          0x0012e27c       0x12 c:\gcc850\lib\libgcc.a(_ucmpdi2.o)
                0x0012e27c                ___ucmpdi2
 .text          0x0012e28e       0xde c:\gcc850\lib\libgcc.a(_muldi3.o)
                0x0012e28e                ___muldi3
 .text          0x0012e36c       0x58 c:\gcc850\lib\libgcc.a(_clzsi2.o)
                0x0012e36c                ___clzsi2
 .text          0x0012e3c4      0x118 c:\gcc850\lib\libgcc.a(_pack_sf.o)
                0x0012e3c4                ___pack_f
 .text          0x0012e4dc       0xaa c:\gcc850\lib\libgcc.a(_unpack_sf.o)
                0x0012e4dc                ___unpack_f
 .text          0x0012e586       0x8c c:\gcc850\lib\libgcc.a(_fpcmp_parts_sf.o)
                0x0012e586                ___fpcmp_parts_f
 .text          0x0012e612      0x1fc c:\gcc850\lib\libgcc.a(_pack_df.o)
                0x0012e612                ___pack_d
 .text          0x0012e80e       0xda c:\gcc850\lib\libgcc.a(_unpack_df.o)
                0x0012e80e                ___unpack_d
 .text          0x0012e8e8       0xa4 c:\gcc850\lib\libgcc.a(_fpcmp_parts_df.o)
                0x0012e8e8                ___fpcmp_parts_d
 .text          0x0012e98c        0x0 c:\gcc850\lib\libgcc.a(_clz.o)
                0x0012e990                . = ALIGN (0x10)
 *fill*         0x0012e98c        0x4 00
 *(.call_table_text)
 *(.gnu.warning)
 *(.gnu.linkonce.t*)
 .gnu.linkonce.t._ZN9HwChannelItLi5EE13physicalValueEt
                0x0012e990       0x3a obj/main.o
                0x0012e990                HwChannel<unsigned short, 5>::physicalValue(unsigned short)
 .gnu.linkonce.t._ZN9HwChannelImLi10EE13physicalValueEm
                0x0012e9ca       0x36 obj/main.o
                0x0012e9ca                HwChannel<unsigned long, 10>::physicalValue(unsigned long)
 .gnu.linkonce.t._ZN20VoltageHwChanManagerItLi5EE14getChannelTypeEv
                0x0012ea00        0xe obj/main.o
                0x0012ea00                VoltageHwChanManager<unsigned short, 5>::getChannelType()
 .gnu.linkonce.t._ZN13HwChanManagerItLi5EE14getChannelTypeEv
                0x0012ea0e        0x4 obj/main.o
                0x0012ea0e                HwChanManager<unsigned short, 5>::getChannelType()
 .gnu.linkonce.t._ZN13HwChanManagerImLi10EE14getChannelTypeEv
                0x0012ea12        0x4 obj/main.o
                0x0012ea12                HwChanManager<unsigned long, 10>::getChannelType()
 .gnu.linkonce.t._ZN6StringD0Ev
                0x0012ea16       0x4e obj/STRCLASS.o
                0x0012ea16                String::~String()
 .gnu.linkonce.t._ZN6StringD1Ev
                0x0012ea64       0x26 obj/STRCLASS.o
                0x0012ea64                String::~String()
 .gnu.linkonce.t._ZN21UartDeviceAbstraction9GetParityEv
                0x0012ea8a        0x6 obj/QUEUEUART.o
                0x0012ea8a                UartDeviceAbstraction::GetParity()
 .gnu.linkonce.t._ZN21UartDeviceAbstraction12GetFrameBitsEv
                0x0012ea90        0x6 obj/QUEUEUART.o
                0x0012ea90                UartDeviceAbstraction::GetFrameBits()
 .gnu.linkonce.t._ZN21UartDeviceAbstraction11GetStopBitsEv
                0x0012ea96        0x6 obj/QUEUEUART.o
                0x0012ea96                UartDeviceAbstraction::GetStopBits()
 .gnu.linkonce.t._ZN21UartDeviceAbstraction11GetBaudRateEv
                0x0012ea9c        0x6 obj/QUEUEUART.o
                0x0012ea9c                UartDeviceAbstraction::GetBaudRate()
 .gnu.linkonce.t._ZN21UartDeviceAbstraction12GetLastErrorEv
                0x0012eaa2        0x6 obj/QUEUEUART.o
                0x0012eaa2                UartDeviceAbstraction::GetLastError()
 .gnu.linkonce.t._ZN21UartDeviceAbstraction8SetErrorEi
                0x0012eaa8        0x6 obj/QUEUEUART.o
                0x0012eaa8                UartDeviceAbstraction::SetError(int)
 .gnu.linkonce.t._ZN9QueueUart6TurnOnEv
                0x0012eaae       0x16 obj/QUEUEUART.o
                0x0012eaae                QueueUart::TurnOn()
 .gnu.linkonce.t._ZN9QueueUart7TurnOffEv
                0x0012eac4       0x16 obj/QUEUEUART.o
                0x0012eac4                QueueUart::TurnOff()
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction7sendMsgEi
                0x0012eada        0x4 obj/PROTOCOLSTDUART.o
                0x0012eada                stdUartProtocolAbstraction::sendMsg(int)
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction6getMsgEv
                0x0012eade        0x4 obj/PROTOCOLSTDUART.o
                0x0012eade                stdUartProtocolAbstraction::getMsg()
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction23ClearTransmissionBufferEv
                0x0012eae2       0x16 obj/PROTOCOLSTDUART.o
                0x0012eae2                stdUartProtocolAbstraction::ClearTransmissionBuffer()
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction31GetNumBytesInTransmissionBufferEv
                0x0012eaf8       0x16 obj/PROTOCOLSTDUART.o
                0x0012eaf8                stdUartProtocolAbstraction::GetNumBytesInTransmissionBuffer()
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction7TurnOffEv
                0x0012eb0e       0x16 obj/PROTOCOLSTDUART.o
                0x0012eb0e                stdUartProtocolAbstraction::TurnOff()
 .gnu.linkonce.t._ZN26stdUartProtocolAbstraction6TurnOnEv
                0x0012eb24       0x16 obj/PROTOCOLSTDUART.o
                0x0012eb24                stdUartProtocolAbstraction::TurnOn()
 .gnu.linkonce.t._ZN13SIFRAProtocol31GetNumBytesInTransmissionBufferEv
                0x0012eb3a       0x16 obj/PROTOCOLSIFRA.o
                0x0012eb3a                SIFRAProtocol::GetNumBytesInTransmissionBuffer()

.ctors          0x0012eb50       0x18
                0x0012eb50                . = ALIGN (0x10)
                0x0012eb50                ___ctors = .
 *(.ctors)
 .ctors         0x0012eb50        0x4 obj/SWTIM.o
 .ctors         0x0012eb54        0x4 obj/SOUND.o
 .ctors         0x0012eb58        0x4 obj/ADC.o
 .ctors         0x0012eb5c        0x4 obj/PWM.o
 .ctors         0x0012eb60        0x4 obj/PROTOCOLSIFRA.o
 .ctors         0x0012eb64        0x4 obj/LEDS_PANEL.o
                0x0012eb68                ___ctors_end = .

.dtors          0x0012eb68        0x0
                0x0012eb68                ___dtors = .
 *(.dtors)
                0x0012eb68                ___dtors_end = .
                0x0012f000                . = ALIGN (0x1000)
                0x0012f000                __etext = .
                0x0012f000                PROVIDE (_etext, .)

.ramcode        0x00000000        0x0 load address 0x0012f000
                0x00000000                __ramcode_start = .
 *(.ramcode)
                0x00000000                . = ALIGN (0x4)
                0x00000000                __ramcode_end = .
                0x00000000                PROVIDE (_intflash_end, __ramcode_end)
                0x00000000                __message_start = 0x0
                0x00000000                __message_end = 0x0

.rodata         0x00140000      0x9f0
                0x00140000                . = ALIGN (0x4)
                0x00140000                __rodata_start = .
 *(.rodata)
 .rodata        0x00140000       0x38 obj/main.o
                0x00140000                _sAppName
                0x0014000a                _sAppRevision
                0x0014001c                _sAppDate
                0x00140013                _sHwVersion
                0x00140034                _sAppDateLength
                0x00140030                _sHwVersionLength
                0x0014002c                _sAppRevisionLength
                0x00140028                _sAppNameLength
 .rodata        0x00140038        0x1 obj/STRCLASS.o
 *fill*         0x00140039        0x3 00
 .rodata        0x0014003c       0xb8 obj/util.o
 .rodata        0x001400f4       0x75 c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
 .rodata        0x00140169      0x281 c:\gcc850\lib\libc.a(lib_a-ctype_.o)
                0x00140169                __ctype_
 .rodata        0x001403ea        0xf c:\gcc850\lib\libc.a(lib_a-dtoa.o)
 .rodata        0x001403f9        0x2 c:\gcc850\lib\libc.a(lib_a-impure.o)
 *fill*         0x001403fb        0x1 00
 .rodata        0x001403fc       0x48 c:\gcc850\lib\libc.a(lib_a-locale.o)
 .rodata        0x00140444      0x124 c:\gcc850\lib\libc.a(lib_a-mprec.o)
                0x00140534                ___mprec_tinytens
                0x0014050c                ___mprec_bigtens
                0x00140444                ___mprec_tens
 .rodata        0x00140568       0x1a c:\gcc850\lib\libc.a(lib_a-sbrk.o)
 *fill*         0x00140582        0x2 00
 .rodata        0x00140584       0x10 c:\gcc850\lib\libgcc.a(_thenan_sf.o)
                0x00140584                ___thenan_sf
 .rodata        0x00140594       0x14 c:\gcc850\lib\libgcc.a(_thenan_df.o)
                0x00140594                ___thenan_df
 .rodata        0x001405a8      0x100 c:\gcc850\lib\libgcc.a(_clz.o)
                0x001405a8                ___clz_tab
 *(.gnu.linkonce.r*)
 .gnu.linkonce.r._ZTV20GenericHwChanManagerImLi10EE
                0x001406a8        0xc obj/main.o
                0x001406a8                vtable for GenericHwChanManager<unsigned long, 10>
 .gnu.linkonce.r._ZTV13HwChanManagerImLi10EE
                0x001406b4        0xc obj/main.o
                0x001406b4                vtable for HwChanManager<unsigned long, 10>
 .gnu.linkonce.r._ZTV16GenericHwChannelImLi10EE
                0x001406c0        0xc obj/main.o
                0x001406c0                vtable for GenericHwChannel<unsigned long, 10>
 .gnu.linkonce.r._ZTV9HwChannelImLi10EE
                0x001406cc        0xc obj/main.o
                0x001406cc                vtable for HwChannel<unsigned long, 10>
 .gnu.linkonce.r._ZTV20VoltageHwChanManagerItLi5EE
                0x001406d8        0xc obj/main.o
                0x001406d8                vtable for VoltageHwChanManager<unsigned short, 5>
 .gnu.linkonce.r._ZTV13HwChanManagerItLi5EE
                0x001406e4        0xc obj/main.o
                0x001406e4                vtable for HwChanManager<unsigned short, 5>
 .gnu.linkonce.r._ZTV16VoltageHwChannelItLi5EE
                0x001406f0        0xc obj/main.o
                0x001406f0                vtable for VoltageHwChannel<unsigned short, 5>
 .gnu.linkonce.r._ZTV9HwChannelItLi5EE
                0x001406fc        0xc obj/main.o
                0x001406fc                vtable for HwChannel<unsigned short, 5>
 .gnu.linkonce.r._ZTV6String
                0x00140708       0x10 obj/STRCLASS.o
                0x00140708                vtable for String
 .gnu.linkonce.r._ZTV9QueueUart
                0x00140718       0xb0 obj/QUEUEUART.o
                0x00140718                vtable for QueueUart
 .gnu.linkonce.r._ZTV21UartDeviceAbstraction
                0x001407c8       0x70 obj/QUEUEUART.o
                0x001407c8                vtable for UartDeviceAbstraction
 .gnu.linkonce.r._ZTV26stdUartProtocolAbstraction
                0x00140838       0xdc obj/PROTOCOLSTDUART.o
                0x00140838                vtable for stdUartProtocolAbstraction
 .gnu.linkonce.r._ZTV13SIFRAProtocol
                0x00140914       0xdc obj/PROTOCOLSIFRA.o
                0x00140914                vtable for SIFRAProtocol
 *(.gcc_except_table)
                0x001409f0                . = ALIGN (0x4)

.rodata.cst4    0x001409f0        0xc
                0x001409f0                __rodata.cst4_start = .
                0x001409f0                . = ALIGN (0x4)
 *(.rodata.cst4)
 .rodata.cst4   0x001409f0        0x8 c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
 .rodata.cst4   0x001409f8        0x4 c:\gcc850\lib\libc.a(lib_a-dtoa.o)
                0x001409fc                . = ALIGN (0x4)
                0x001409fc                __rodata_end = .
                0x001409fc                _end_rodata = .
                0x001409fc                PROVIDE (_end_rodata, .)

.data           0x00145000      0x844 load address 0x001409fc
                0x00145000                . = ALIGN (0x10)
                0x00145000                __data_start = .
 *(.data)
 .data          0x00145000        0x0 obj/startup.o
 .data          0x00145000        0x0 obj/crt0.o
 .data          0x00145000        0x0 obj/crt1.o
 .data          0x00145000        0x0 obj/main.o
 .data          0x00145000        0x2 obj/IRQSG2.o
 *fill*         0x00145002        0x2 00
 .data          0x00145004        0x8 obj/ALLOC.o
 .data          0x0014500c        0x0 obj/NEW.o
 .data          0x0014500c        0x0 obj/STRCLASS.o
 .data          0x0014500c        0x0 obj/SWTIM.o
 .data          0x0014500c        0x0 obj/util.o
 .data          0x0014500c        0x0 obj/I2C_SW.o
 .data          0x0014500c        0x0 obj/I2Ceeprom.o
 .data          0x0014500c        0x0 obj/sioSG2.o
 .data          0x0014500c        0x0 obj/SOUND.o
 .data          0x0014500c        0x4 obj/ADC.o
 .data          0x00145010        0x0 obj/PWM.o
 .data          0x00145010        0x0 obj/QUEUEUART.o
 .data          0x00145010        0x0 obj/PROTOCOLSTDUART.o
 .data          0x00145010        0x0 obj/PROTOCOLSIFRA.o
 .data          0x00145010        0x8 obj/CPUSIFRA_MANAGER.o
                0x00145010                _m_tolleranza
 .data          0x00145018        0x0 obj/NVRDRV.o
 .data          0x00145018        0x0 obj/LEDS_PANEL.o
 .data          0x00145018        0x0 c:\gcc850\lib\libc.a(lib_a-atoi.o)
 .data          0x00145018        0x0 c:\gcc850\lib\libc.a(lib_a-memcpy.o)
 .data          0x00145018        0x0 c:\gcc850\lib\libc.a(lib_a-memset.o)
 .data          0x00145018        0x0 c:\gcc850\lib\libc.a(lib_a-sprintf.o)
 .data          0x00145018        0x0 c:\gcc850\lib\libc.a(lib_a-strcmp.o)
 .data          0x00145018        0x0 c:\gcc850\lib\libc.a(lib_a-strcpy.o)
 .data          0x00145018        0x0 c:\gcc850\lib\libc.a(lib_a-strlen.o)
 .data          0x00145018        0x0 c:\gcc850\lib\libc.a(lib_a-strtol.o)
 .data          0x00145018        0x0 c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
 .data          0x00145018        0x8 c:\gcc850\lib\libc.a(lib_a-ctype_.o)
                0x0014501c                ___ctype_ptr__
                0x00145018                ___ctype_ptr
 .data          0x00145020        0x0 c:\gcc850\lib\libc.a(lib_a-dtoa.o)
 .data          0x00145020        0x0 c:\gcc850\lib\libc.a(lib_a-freer.o)
 .data          0x00145020      0x400 c:\gcc850\lib\libc.a(lib_a-impure.o)
 .data          0x00145420       0x10 c:\gcc850\lib\libc.a(lib_a-locale.o)
                0x00145420                ___mb_cur_max
                0x00145424                ___lc_ctype
 .data          0x00145430      0x410 c:\gcc850\lib\libc.a(lib_a-mallocr.o)
                0x00145430                ___malloc_av_
                0x00145838                ___malloc_trim_threshold
                0x0014583c                ___malloc_sbrk_base
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-memchr.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-memmove.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-mlock.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-mprec.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-reallocr.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-s_isinfd.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-s_isnand.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-sbrkr.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-stat.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-trap.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-callocr.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-sbrk.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-write.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-abort.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-signal.o)
 .data          0x00145840        0x0 c:\gcc850\lib\libc.a(lib_a-signalr.o)
 .data          0x00145840        0x4 c:\gcc850\lib\libc.a(lib_a-_Exit.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libc.a(lib_a-getpid.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libc.a(lib_a-kill.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_mulsi3.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_divsi3.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_udivsi3.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_modsi3.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_umodsi3.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_save_20c.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_save_23c.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_save_25c.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_save_26c.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_save_27c.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_save_28c.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_save_29c.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_save_31c.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_save_varargs.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_fixunssfsi.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_addsub_sf.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_mul_sf.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_div_sf.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_ne_sf.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_gt_sf.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_ge_sf.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_lt_sf.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_le_sf.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_si_to_sf.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_sf_to_si.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_thenan_sf.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_usi_to_sf.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_addsub_df.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_mul_df.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_div_df.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_eq_df.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_ne_df.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_gt_df.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_ge_df.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_lt_df.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_si_to_df.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_df_to_si.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_thenan_df.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_usi_to_df.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_ucmpdi2.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_muldi3.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_clzsi2.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_pack_sf.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_unpack_sf.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_fpcmp_parts_sf.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_pack_df.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_unpack_df.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_fpcmp_parts_df.o)
 .data          0x00145844        0x0 c:\gcc850\lib\libgcc.a(_clz.o)
 *(.gnu.linkonce.d*)
                0x00145844                . = ALIGN (0x4)
                0x00145844                __data_end = .
                0x001409fc                PROVIDE (__datarom_end, __rodata_end)

.got
 *(.got.plt)
 *(.got)

.dynamic
 *(.dynamic)

.tdata          0x00145844        0x0
                0x00145844                PROVIDE (__ep, .)
 *(.tbyte)
 *(.tcommon_byte)
 *(.tdata)
 *(.tbss)
 *(.tcommon)

.sdata          0x00145844        0x4
                0x0014d844                PROVIDE (__gp, (. + 0x8000))
 *(.sdata)
 .sdata         0x00145844        0x4 c:\gcc850\lib\libc.a(lib_a-impure.o)
                0x00145844                __impure_ptr
                0x00145848                __sbss_start = .
 *(.sbss)
 *(.scommon)

.rosdata        0x00145848        0x4
 *(.rosdata)
 .rosdata       0x00145848        0x4 c:\gcc850\lib\libc.a(lib_a-impure.o)
                0x00145848                __global_impure_ptr
                0x00145848                _edata = DEFINED (__sbss_start)?__sbss_start:.
                0x00145848                PROVIDE (edata, _edata)

.bss            0x0014584c      0xd98
                0x00145848                __bss_start = DEFINED (__sbss_start)?__sbss_start:.
 *(.dynbss)
 *(.bss)
 .bss           0x0014584c        0x0 obj/startup.o
 .bss           0x0014584c        0x0 obj/crt0.o
 .bss           0x0014584c        0x2 obj/crt1.o
 *fill*         0x0014584e        0x2 00
 .bss           0x00145850       0x18 obj/main.o
                0x00145858                _SifraProtocol
                0x00145854                _powerVoltageChan
                0x00145862                _time_sec
                0x00145860                _time_msec
                0x0014585c                _CpuSifra
                0x00145850                _weightChan
 .bss           0x00145868       0xf8 obj/IRQSG2.o
 .bss           0x00145960       0x14 obj/ALLOC.o
 .bss           0x00145974      0x3e8 obj/NEW.o
 .bss           0x00145d5c        0x0 obj/STRCLASS.o
 .bss           0x00145d5c        0x8 obj/SWTIM.o
                0x00145d5c                _globalTimer
 .bss           0x00145d64       0x32 obj/util.o
 .bss           0x00145d96        0x0 obj/I2C_SW.o
 .bss           0x00145d96        0x0 obj/I2Ceeprom.o
 .bss           0x00145d96        0x0 obj/sioSG2.o
 *fill*         0x00145d96        0x2 00
 .bss           0x00145d98       0x28 obj/SOUND.o
 .bss           0x00145dc0      0x544 obj/ADC.o
                0x001462b7                _m_confRegSpi2_PowerSave
                0x0014625c                _powerSamplePeriod
                0x001462ce                _m_endContinuousConversionSpi2
                0x001462cf                _m_initializationSequenceStateSpi2
                0x00146289                _m_TxState
                0x0014602c                _ADC5_serial_fifo
                0x00145df4                _ADC1_serial_fifo
                0x001462c9                _m_TxStateSpi2
                0x00146284                _m_confReg
                0x001462ba                _m_confRegSpi2_RstValid
                0x00145dc0                _mV_Power_ADC
                0x00146294                _m_lastConfRegWrote
                0x001462cc                _m_numByteToReceivedSpi2
                0x0014628f                _m_initializationSequenceState
                0x001462bf                _m_confRegSpi2_UniBiPolar
                0x00146278                _m_confReg_RstSys
                0x00146288                _m_confRegStatus
                0x00146148                _CS5530_rx_fifoSpi2
                0x001462dc                _timerSpi2
                0x0014626a                _state_adc2
                0x001462e8                _m_num_max_adc_for_channelSpi2
                0x001462ec                _wait_reset_ADC
                0x0014621c                _contadc1
                0x00146290                _m_txBufferEmpty
                0x00146266                _state
                0x0014628a                _m_CommandSent
                0x00146276                _m_confReg_PowerSave
                0x001462bc                _m_confRegSpi2_VoltageRef
                0x001462d4                _m_lastConfRegSpi2Wrote
                0x0014627c                _m_confReg_LatchBit
                0x00146298                _m_validDataPresentInADCBuffer
                0x00146274                _vol_tick
                0x00146272                _chanToSample
                0x0014629c                _timerSpi
                0x0014628b                _m_numByteReceived
                0x00145f58                _CS5530_rx_fifo
                0x0014628d                _m_adcStates
                0x001462b9                _m_confRegSpi2_RstSys
                0x001462d0                _m_txBufferEmptySpi2
                0x001462c4                _m_confRegSpi2
                0x001462e9                _adc_to_sampleSpi2
                0x00146292                _m_startContinuousConversion
                0x0014627e                _m_confReg_UniBiPolar
                0x00146260                _pwrVoltageAverage
                0x00146277                _m_confReg_PowerDown
                0x00146074                _CS5530_tx_fifoSpi2
                0x00146279                _m_confReg_RstValid
                0x00146291                _m_spiOrPinMode
                0x001462c8                _m_confRegStatusSpi2
                0x00146280                _m_confReg_filterRate
                0x001462bb                _m_confRegSpi2_InputShort
                0x001462cd                _m_adcStatesSpi2
                0x001462cb                _m_numByteReceivedSpi2
                0x00146264                _numPwrSamples
                0x00145e84                _CS5530_tx_fifo
                0x00146220                _m_data
                0x001462b4                _m_num_max_adc_for_channel
                0x001462b8                _m_confRegSpi2_PowerDown
                0x001462d1                _m_spiOrPinModeSpi2
                0x00146268                _state_adc1
                0x00145e3c                _ADC2_serial_fifo
                0x001462c1                _m_confRegSpi2_filterRate
                0x0014627d                _m_confReg_WordRate
                0x001462a8                _watchdog_adc_timer
                0x0014627a                _m_confReg_InputShort
                0x001462c0                _m_confRegSpi2_OpenCircuitDetect
                0x001462d2                _m_startContinuousConversionSpi2
                0x001462b6                _adc_to_sample
                0x00146224                _Chan
                0x0014627b                _m_confReg_VoltageRef
                0x001462bd                _m_confRegSpi2_LatchBit
                0x001462be                _m_confRegSpi2_WordRate
                0x00146270                _state_adc5
                0x0014628c                _m_numByteToReceived
                0x001462d8                _m_validDataPresentInADCBufferSpi2
                0x0014628e                _m_endContinuousConversion
                0x001462b5                _numByteSent
                0x0014626c                _state_adc3
                0x0014627f                _m_confReg_OpenCircuitDetect
                0x001462ca                _m_CommandSentSpi2
                0x0014626e                _state_adc4
 .bss           0x00146304       0x64 obj/PWM.o
                0x00146338                _stato_pompa
                0x0014630c                _coverState_open
                0x00146304                _conta
                0x00146310                _pwm_ev
                0x00146341                _previousstate_EVs
                0x00146350                _EV_timer
                0x00146340                _state_EVs
                0x00146344                _PWM_timer
                0x0014633c                _pre_stato_pompa
                0x00146308                _enable_EVs
                0x0014635c                _MotorStatus
                0x00146324                _pwm_mot
 .bss           0x00146368        0xc obj/QUEUEUART.o
                0x00146370                UartDeviceAbstraction::m_pUart2DeviceAbstraction
                0x00146368                UartDeviceAbstraction::m_pUart0DeviceAbstraction
                0x0014636c                UartDeviceAbstraction::m_pUart1DeviceAbstraction
 .bss           0x00146374        0x0 obj/PROTOCOLSTDUART.o
 .bss           0x00146374      0x1fc obj/PROTOCOLSIFRA.o
                0x001463fc                _Via
                0x00146528                _bk
                0x001463f8                _WeightCmd
                0x001463d0                _StatusDebug
                0x0014655c                _structEnc
                0x0014651c                _g_stateMachine
                0x00146378                _StartCmd
                0x00146374                _fp
                0x001463ac                _StatusCmd
                0x001463fa                _g_scalesPhaseCmd
                0x001463f9                _g_restartFormulaCmd
 .bss           0x00146570        0x4 obj/CPUSIFRA_MANAGER.o
                0x00146570                _fpp
 .bss           0x00146574        0xa obj/NVRDRV.o
                0x00146574                _m_chk
 *fill*         0x0014657e        0x2 00
 .bss           0x00146580       0x1c obj/LEDS_PANEL.o
                0x00146580                _DISPLAY_tx_fifo
 .bss           0x0014659c        0x0 c:\gcc850\lib\libc.a(lib_a-atoi.o)
 .bss           0x0014659c        0x0 c:\gcc850\lib\libc.a(lib_a-memcpy.o)
 .bss           0x0014659c        0x0 c:\gcc850\lib\libc.a(lib_a-memset.o)
 .bss           0x0014659c        0x0 c:\gcc850\lib\libc.a(lib_a-sprintf.o)
 .bss           0x0014659c        0x0 c:\gcc850\lib\libc.a(lib_a-strcmp.o)
 .bss           0x0014659c        0x0 c:\gcc850\lib\libc.a(lib_a-strcpy.o)
 .bss           0x0014659c        0x0 c:\gcc850\lib\libc.a(lib_a-strlen.o)
 .bss           0x0014659c        0x0 c:\gcc850\lib\libc.a(lib_a-strtol.o)
 .bss           0x0014659c        0x0 c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
 .bss           0x0014659c        0x0 c:\gcc850\lib\libc.a(lib_a-ctype_.o)
 .bss           0x0014659c        0x0 c:\gcc850\lib\libc.a(lib_a-dtoa.o)
 .bss           0x0014659c        0x0 c:\gcc850\lib\libc.a(lib_a-freer.o)
 .bss           0x0014659c        0x0 c:\gcc850\lib\libc.a(lib_a-impure.o)
 .bss           0x0014659c        0xc c:\gcc850\lib\libc.a(lib_a-locale.o)
                0x001465a0                ___mlocale_changed
                0x001465a4                __PathLocale
                0x0014659c                ___nlocale_changed
 .bss           0x001465a8       0x34 c:\gcc850\lib\libc.a(lib_a-mallocr.o)
                0x001465a8                ___malloc_top_pad
                0x001465b4                ___malloc_current_mallinfo
                0x001465ac                ___malloc_max_sbrked_mem
                0x001465b0                ___malloc_max_total_mem
 .bss           0x001465dc        0x0 c:\gcc850\lib\libc.a(lib_a-memchr.o)
 .bss           0x001465dc        0x0 c:\gcc850\lib\libc.a(lib_a-memmove.o)
 .bss           0x001465dc        0x0 c:\gcc850\lib\libc.a(lib_a-mlock.o)
 .bss           0x001465dc        0x0 c:\gcc850\lib\libc.a(lib_a-mprec.o)
 .bss           0x001465dc        0x0 c:\gcc850\lib\libc.a(lib_a-reallocr.o)
 .bss           0x001465dc        0x0 c:\gcc850\lib\libc.a(lib_a-s_isinfd.o)
 .bss           0x001465dc        0x0 c:\gcc850\lib\libc.a(lib_a-s_isnand.o)
 .bss           0x001465dc        0x0 c:\gcc850\lib\libc.a(lib_a-sbrkr.o)
 .bss           0x001465dc        0x0 c:\gcc850\lib\libc.a(lib_a-stat.o)
 .bss           0x001465dc        0x0 c:\gcc850\lib\libc.a(lib_a-trap.o)
 .bss           0x001465dc        0x0 c:\gcc850\lib\libc.a(lib_a-callocr.o)
 .bss           0x001465dc        0x4 c:\gcc850\lib\libc.a(lib_a-sbrk.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libc.a(lib_a-write.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libc.a(lib_a-abort.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libc.a(lib_a-signal.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libc.a(lib_a-signalr.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libc.a(lib_a-_Exit.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libc.a(lib_a-getpid.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libc.a(lib_a-kill.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_mulsi3.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_divsi3.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_udivsi3.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_modsi3.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_umodsi3.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_save_20c.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_save_23c.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_save_25c.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_save_26c.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_save_27c.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_save_28c.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_save_29c.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_save_31c.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_save_varargs.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_fixunssfsi.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_addsub_sf.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_mul_sf.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_div_sf.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_ne_sf.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_gt_sf.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_ge_sf.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_lt_sf.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_le_sf.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_si_to_sf.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_sf_to_si.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_thenan_sf.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_usi_to_sf.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_addsub_df.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_mul_df.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_div_df.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_eq_df.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_ne_df.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_gt_df.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_ge_df.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_lt_df.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_si_to_df.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_df_to_si.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_thenan_df.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_usi_to_df.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_ucmpdi2.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_muldi3.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_clzsi2.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_pack_sf.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_unpack_sf.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_fpcmp_parts_sf.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_pack_df.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_unpack_df.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_fpcmp_parts_df.o)
 .bss           0x001465e0        0x0 c:\gcc850\lib\libgcc.a(_clz.o)
 *(COMMON)
 COMMON         0x001465e0        0x4 c:\gcc850\lib\libc.a(lib_a-stat.o)
                0x001465e0                _errno
                0x001465e4                _end = .
                0x001465e4                PROVIDE (end, .)
                0x001465e4                . = ALIGN (0x4)
                0x001465e4                __base_small_heap = .
                0x001465e4                PROVIDE (_base_small_heap, .)

.stack          0x00163000     0x1000
                0x00163000                __end_small_heap = .
                0x00163000                PROVIDE (_end_small_heap, __end_small_heap)
                0x00163000                __stack = .
 *(.stack)
 .stack         0x00163000     0x1000 obj/startup.o
                0x00163000                __system_stack
                0x00164000                __end_stack = .
                0x00164000                PROVIDE (_end_stack, __end_stack)

.xdata          0x00165000        0x0
                0x00165000                __xdata_start = .
 *(.xdata)
                0x00165000                __xdata = .
                0x00165000                __xdata_end = .
                0x00165000                . = ALIGN (0x4)
                0x00165000                __base_heap = .
                0x00165000                PROVIDE (_base_heap, .)
                0x0017ffff                __end_heap = (. + 0x1afff)
                0x0017ffff                PROVIDE (_end_heap, (. + 0x1afff))

.disk
 *(.disk)

.stab           0x00000000    0x43c5c
 *(.stab)
 .stab          0x00000000      0x7e0 obj/crt1.o
 .stab          0x000007e0     0x1f50 obj/main.o
                               0x1f5c (size before relaxing)
 .stab          0x00002730     0x3eac obj/IRQSG2.o
                               0x3eb8 (size before relaxing)
 .stab          0x000065dc      0xc54 obj/ALLOC.o
                                0xc60 (size before relaxing)
 .stab          0x00007230      0x924 obj/NEW.o
                                0x930 (size before relaxing)
 .stab          0x00007b54      0xf0c obj/STRCLASS.o
                                0xf18 (size before relaxing)
 .stab          0x00008a60      0xaec obj/SWTIM.o
                                0xaf8 (size before relaxing)
 .stab          0x0000954c     0x1608 obj/util.o
                               0x1614 (size before relaxing)
 .stab          0x0000ab54      0xce4 obj/I2C_SW.o
                                0xcf0 (size before relaxing)
 .stab          0x0000b838     0x10f8 obj/I2Ceeprom.o
                               0x1104 (size before relaxing)
 .stab          0x0000c930     0x1c68 obj/sioSG2.o
                               0x1c74 (size before relaxing)
 .stab          0x0000e598      0xe64 obj/SOUND.o
                                0xe70 (size before relaxing)
 .stab          0x0000f3fc     0x756c obj/ADC.o
                               0x7578 (size before relaxing)
 .stab          0x00016968     0x19e0 obj/PWM.o
                               0x19ec (size before relaxing)
 .stab          0x00018348     0x3a08 obj/QUEUEUART.o
                               0x3a14 (size before relaxing)
 .stab          0x0001bd50     0x2130 obj/PROTOCOLSTDUART.o
                               0x213c (size before relaxing)
 .stab          0x0001de80     0x3e64 obj/PROTOCOLSIFRA.o
                               0x3e70 (size before relaxing)
 .stab          0x00021ce4     0xca2c obj/CPUSIFRA_MANAGER.o
                               0xca38 (size before relaxing)
 .stab          0x0002e710     0x1338 obj/NVRDRV.o
                               0x1344 (size before relaxing)
 .stab          0x0002fa48      0xbdc obj/LEDS_PANEL.o
                                0xbe8 (size before relaxing)
 .stab          0x00030624      0x45c c:\gcc850\lib\libc.a(lib_a-atoi.o)
                                0x468 (size before relaxing)
 .stab          0x00030a80      0x1b0 c:\gcc850\lib\libc.a(lib_a-memcpy.o)
                                0x1bc (size before relaxing)
 .stab          0x00030c30      0x228 c:\gcc850\lib\libc.a(lib_a-memset.o)
                                0x42c (size before relaxing)
 .stab          0x00030e58      0x6b4 c:\gcc850\lib\libc.a(lib_a-sprintf.o)
                                0x8e8 (size before relaxing)
 .stab          0x0003150c      0x1e0 c:\gcc850\lib\libc.a(lib_a-strcmp.o)
                                0x408 (size before relaxing)
 .stab          0x000316ec      0x1bc c:\gcc850\lib\libc.a(lib_a-strcpy.o)
                                0x3e4 (size before relaxing)
 .stab          0x000318a8      0x1d4 c:\gcc850\lib\libc.a(lib_a-strlen.o)
                                0x3fc (size before relaxing)
 .stab          0x00031a7c      0x594 c:\gcc850\lib\libc.a(lib_a-strtol.o)
                                0x828 (size before relaxing)
 .stab          0x00032010     0x2034 c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
                               0x24f0 (size before relaxing)
 .stab          0x00034044      0x114 c:\gcc850\lib\libc.a(lib_a-ctype_.o)
                                0x120 (size before relaxing)
 .stab          0x00034158     0x1d1c c:\gcc850\lib\libc.a(lib_a-dtoa.o)
                               0x2190 (size before relaxing)
 .stab          0x00035e74      0x750 c:\gcc850\lib\libc.a(lib_a-freer.o)
                                0xbac (size before relaxing)
 .stab          0x000365c4      0x174 c:\gcc850\lib\libc.a(lib_a-impure.o)
                                0x3d8 (size before relaxing)
 .stab          0x00036738      0x4e0 c:\gcc850\lib\libc.a(lib_a-locale.o)
                                0x6cc (size before relaxing)
 .stab          0x00036c18      0xee8 c:\gcc850\lib\libc.a(lib_a-mallocr.o)
                               0x1344 (size before relaxing)
 .stab          0x00037b00      0x258 c:\gcc850\lib\libc.a(lib_a-memchr.o)
                                0x480 (size before relaxing)
 .stab          0x00037d58      0x258 c:\gcc850\lib\libc.a(lib_a-memmove.o)
                                0x480 (size before relaxing)
 .stab          0x00037fb0      0x204 c:\gcc850\lib\libc.a(lib_a-mlock.o)
                                0x420 (size before relaxing)
 .stab          0x000381b4     0x2448 c:\gcc850\lib\libc.a(lib_a-mprec.o)
                               0x2958 (size before relaxing)
 .stab          0x0003a5fc      0xa20 c:\gcc850\lib\libc.a(lib_a-reallocr.o)
                                0xe7c (size before relaxing)
 .stab          0x0003b01c      0x1ec c:\gcc850\lib\libc.a(lib_a-s_isinfd.o)
                                0x618 (size before relaxing)
 .stab          0x0003b208      0x1bc c:\gcc850\lib\libc.a(lib_a-s_isnand.o)
                                0x60c (size before relaxing)
 .stab          0x0003b3c4      0x270 c:\gcc850\lib\libc.a(lib_a-sbrkr.o)
                                0x654 (size before relaxing)
 .stab          0x0003b634      0x450 c:\gcc850\lib\libc.a(lib_a-stat.o)
                                0x624 (size before relaxing)
 .stab          0x0003ba84      0x2e8 c:\gcc850\lib\libc.a(lib_a-callocr.o)
                                0x744 (size before relaxing)
 .stab          0x0003bd6c      0x2dc c:\gcc850\lib\libc.a(lib_a-sbrk.o)
                                0x708 (size before relaxing)
 .stab          0x0003c048      0x1f8 c:\gcc850\lib\libc.a(lib_a-write.o)
                                0x624 (size before relaxing)
 .stab          0x0003c240      0x24c c:\gcc850\lib\libc.a(lib_a-abort.o)
                                0x66c (size before relaxing)
 .stab          0x0003c48c      0x7bc c:\gcc850\lib\libc.a(lib_a-signal.o)
                                0xac8 (size before relaxing)
 .stab          0x0003cc48      0x2e8 c:\gcc850\lib\libc.a(lib_a-signalr.o)
                                0x72c (size before relaxing)
 .stab          0x0003cf30      0x228 c:\gcc850\lib\libc.a(lib_a-_Exit.o)
                                0x654 (size before relaxing)
 .stab          0x0003d158      0x1c8 c:\gcc850\lib\libc.a(lib_a-getpid.o)
                                0x5f4 (size before relaxing)
 .stab          0x0003d320      0x1e0 c:\gcc850\lib\libc.a(lib_a-kill.o)
                                0x60c (size before relaxing)
 .stab          0x0003d500      0x36c c:\gcc850\lib\libgcc.a(_fixunssfsi.o)
                                0x378 (size before relaxing)
 .stab          0x0003d86c      0x864 c:\gcc850\lib\libgcc.a(_addsub_sf.o)
                                0x90c (size before relaxing)
 .stab          0x0003e0d0      0x5a0 c:\gcc850\lib\libgcc.a(_mul_sf.o)
                                0x720 (size before relaxing)
 .stab          0x0003e670      0x4ec c:\gcc850\lib\libgcc.a(_div_sf.o)
                                0x66c (size before relaxing)
 .stab          0x0003eb5c      0x228 c:\gcc850\lib\libgcc.a(_ne_sf.o)
                                0x3a8 (size before relaxing)
 .stab          0x0003ed84      0x228 c:\gcc850\lib\libgcc.a(_gt_sf.o)
                                0x3a8 (size before relaxing)
 .stab          0x0003efac      0x228 c:\gcc850\lib\libgcc.a(_ge_sf.o)
                                0x3a8 (size before relaxing)
 .stab          0x0003f1d4      0x228 c:\gcc850\lib\libgcc.a(_lt_sf.o)
                                0x3a8 (size before relaxing)
 .stab          0x0003f3fc      0x228 c:\gcc850\lib\libgcc.a(_le_sf.o)
                                0x3a8 (size before relaxing)
 .stab          0x0003f624      0x2dc c:\gcc850\lib\libgcc.a(_si_to_sf.o)
                                0x45c (size before relaxing)
 .stab          0x0003f900      0x288 c:\gcc850\lib\libgcc.a(_sf_to_si.o)
                                0x408 (size before relaxing)
 .stab          0x0003fb88      0x120 c:\gcc850\lib\libgcc.a(_thenan_sf.o)
                                0x2a0 (size before relaxing)
 .stab          0x0003fca8      0x2c4 c:\gcc850\lib\libgcc.a(_usi_to_sf.o)
                                0x444 (size before relaxing)
 .stab          0x0003ff6c      0x8e8 c:\gcc850\lib\libgcc.a(_addsub_df.o)
                                0x990 (size before relaxing)
 .stab          0x00040854      0x5c4 c:\gcc850\lib\libgcc.a(_mul_df.o)
                                0x744 (size before relaxing)
 .stab          0x00040e18      0x4a4 c:\gcc850\lib\libgcc.a(_div_df.o)
                                0x624 (size before relaxing)
 .stab          0x000412bc      0x21c c:\gcc850\lib\libgcc.a(_eq_df.o)
                                0x39c (size before relaxing)
 .stab          0x000414d8      0x21c c:\gcc850\lib\libgcc.a(_ne_df.o)
                                0x39c (size before relaxing)
 .stab          0x000416f4      0x228 c:\gcc850\lib\libgcc.a(_gt_df.o)
                                0x3a8 (size before relaxing)
 .stab          0x0004191c      0x228 c:\gcc850\lib\libgcc.a(_ge_df.o)
                                0x3a8 (size before relaxing)
 .stab          0x00041b44      0x21c c:\gcc850\lib\libgcc.a(_lt_df.o)
                                0x39c (size before relaxing)
 .stab          0x00041d60      0x2f4 c:\gcc850\lib\libgcc.a(_si_to_df.o)
                                0x474 (size before relaxing)
 .stab          0x00042054      0x270 c:\gcc850\lib\libgcc.a(_df_to_si.o)
                                0x3f0 (size before relaxing)
 .stab          0x000422c4      0x120 c:\gcc850\lib\libgcc.a(_thenan_df.o)
                                0x2a0 (size before relaxing)
 .stab          0x000423e4      0x300 c:\gcc850\lib\libgcc.a(_usi_to_df.o)
                                0x480 (size before relaxing)
 .stab          0x000426e4      0x198 c:\gcc850\lib\libgcc.a(_clzsi2.o)
                                0x348 (size before relaxing)
 .stab          0x0004287c      0x360 c:\gcc850\lib\libgcc.a(_pack_sf.o)
                                0x4e0 (size before relaxing)
 .stab          0x00042bdc      0x354 c:\gcc850\lib\libgcc.a(_unpack_sf.o)
                                0x4d4 (size before relaxing)
 .stab          0x00042f30      0x294 c:\gcc850\lib\libgcc.a(_fpcmp_parts_sf.o)
                                0x414 (size before relaxing)
 .stab          0x000431c4      0x36c c:\gcc850\lib\libgcc.a(_pack_df.o)
                                0x4ec (size before relaxing)
 .stab          0x00043530      0x33c c:\gcc850\lib\libgcc.a(_unpack_df.o)
                                0x4bc (size before relaxing)
 .stab          0x0004386c      0x2b8 c:\gcc850\lib\libgcc.a(_fpcmp_parts_df.o)
                                0x438 (size before relaxing)
 .stab          0x00043b24      0x138 c:\gcc850\lib\libgcc.a(_clz.o)
                                0x2e8 (size before relaxing)

.stabstr        0x00000000    0x3dc37
 *(.stabstr)
 .stabstr       0x00000000    0x3dc37 obj/crt1.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000      0x60c
 *(.comment)
 .comment       0x00000000       0x12 obj/crt1.o
 .comment       0x00000012       0x12 obj/main.o
 .comment       0x00000024       0x12 obj/IRQSG2.o
 .comment       0x00000036       0x12 obj/ALLOC.o
 .comment       0x00000048       0x12 obj/NEW.o
 .comment       0x0000005a       0x12 obj/STRCLASS.o
 .comment       0x0000006c       0x12 obj/SWTIM.o
 .comment       0x0000007e       0x12 obj/util.o
 .comment       0x00000090       0x12 obj/I2C_SW.o
 .comment       0x000000a2       0x12 obj/I2Ceeprom.o
 .comment       0x000000b4       0x12 obj/sioSG2.o
 .comment       0x000000c6       0x12 obj/SOUND.o
 .comment       0x000000d8       0x12 obj/ADC.o
 .comment       0x000000ea       0x12 obj/PWM.o
 .comment       0x000000fc       0x12 obj/QUEUEUART.o
 .comment       0x0000010e       0x12 obj/PROTOCOLSTDUART.o
 .comment       0x00000120       0x12 obj/PROTOCOLSIFRA.o
 .comment       0x00000132       0x12 obj/CPUSIFRA_MANAGER.o
 .comment       0x00000144       0x12 obj/NVRDRV.o
 .comment       0x00000156       0x12 obj/LEDS_PANEL.o
 .comment       0x00000168       0x12 c:\gcc850\lib\libc.a(lib_a-atoi.o)
 .comment       0x0000017a       0x12 c:\gcc850\lib\libc.a(lib_a-memcpy.o)
 .comment       0x0000018c       0x12 c:\gcc850\lib\libc.a(lib_a-memset.o)
 .comment       0x0000019e       0x12 c:\gcc850\lib\libc.a(lib_a-sprintf.o)
 .comment       0x000001b0       0x12 c:\gcc850\lib\libc.a(lib_a-strcmp.o)
 .comment       0x000001c2       0x12 c:\gcc850\lib\libc.a(lib_a-strcpy.o)
 .comment       0x000001d4       0x12 c:\gcc850\lib\libc.a(lib_a-strlen.o)
 .comment       0x000001e6       0x12 c:\gcc850\lib\libc.a(lib_a-strtol.o)
 .comment       0x000001f8       0x12 c:\gcc850\lib\libc.a(lib_a-svfprintf.o)
 .comment       0x0000020a       0x12 c:\gcc850\lib\libc.a(lib_a-ctype_.o)
 .comment       0x0000021c       0x12 c:\gcc850\lib\libc.a(lib_a-dtoa.o)
 .comment       0x0000022e       0x12 c:\gcc850\lib\libc.a(lib_a-freer.o)
 .comment       0x00000240       0x12 c:\gcc850\lib\libc.a(lib_a-impure.o)
 .comment       0x00000252       0x12 c:\gcc850\lib\libc.a(lib_a-locale.o)
 .comment       0x00000264       0x12 c:\gcc850\lib\libc.a(lib_a-mallocr.o)
 .comment       0x00000276       0x12 c:\gcc850\lib\libc.a(lib_a-memchr.o)
 .comment       0x00000288       0x12 c:\gcc850\lib\libc.a(lib_a-memmove.o)
 .comment       0x0000029a       0x12 c:\gcc850\lib\libc.a(lib_a-mlock.o)
 .comment       0x000002ac       0x12 c:\gcc850\lib\libc.a(lib_a-mprec.o)
 .comment       0x000002be       0x12 c:\gcc850\lib\libc.a(lib_a-reallocr.o)
 .comment       0x000002d0       0x12 c:\gcc850\lib\libc.a(lib_a-s_isinfd.o)
 .comment       0x000002e2       0x12 c:\gcc850\lib\libc.a(lib_a-s_isnand.o)
 .comment       0x000002f4       0x12 c:\gcc850\lib\libc.a(lib_a-sbrkr.o)
 .comment       0x00000306       0x12 c:\gcc850\lib\libc.a(lib_a-stat.o)
 .comment       0x00000318       0x12 c:\gcc850\lib\libc.a(lib_a-callocr.o)
 .comment       0x0000032a       0x12 c:\gcc850\lib\libc.a(lib_a-sbrk.o)
 .comment       0x0000033c       0x12 c:\gcc850\lib\libc.a(lib_a-write.o)
 .comment       0x0000034e       0x12 c:\gcc850\lib\libc.a(lib_a-abort.o)
 .comment       0x00000360       0x12 c:\gcc850\lib\libc.a(lib_a-signal.o)
 .comment       0x00000372       0x12 c:\gcc850\lib\libc.a(lib_a-signalr.o)
 .comment       0x00000384       0x12 c:\gcc850\lib\libc.a(lib_a-_Exit.o)
 .comment       0x00000396       0x12 c:\gcc850\lib\libc.a(lib_a-getpid.o)
 .comment       0x000003a8       0x12 c:\gcc850\lib\libc.a(lib_a-kill.o)
 .comment       0x000003ba       0x12 c:\gcc850\lib\libgcc.a(_fixunssfsi.o)
 .comment       0x000003cc       0x12 c:\gcc850\lib\libgcc.a(_addsub_sf.o)
 .comment       0x000003de       0x12 c:\gcc850\lib\libgcc.a(_mul_sf.o)
 .comment       0x000003f0       0x12 c:\gcc850\lib\libgcc.a(_div_sf.o)
 .comment       0x00000402       0x12 c:\gcc850\lib\libgcc.a(_ne_sf.o)
 .comment       0x00000414       0x12 c:\gcc850\lib\libgcc.a(_gt_sf.o)
 .comment       0x00000426       0x12 c:\gcc850\lib\libgcc.a(_ge_sf.o)
 .comment       0x00000438       0x12 c:\gcc850\lib\libgcc.a(_lt_sf.o)
 .comment       0x0000044a       0x12 c:\gcc850\lib\libgcc.a(_le_sf.o)
 .comment       0x0000045c       0x12 c:\gcc850\lib\libgcc.a(_si_to_sf.o)
 .comment       0x0000046e       0x12 c:\gcc850\lib\libgcc.a(_sf_to_si.o)
 .comment       0x00000480       0x12 c:\gcc850\lib\libgcc.a(_thenan_sf.o)
 .comment       0x00000492       0x12 c:\gcc850\lib\libgcc.a(_usi_to_sf.o)
 .comment       0x000004a4       0x12 c:\gcc850\lib\libgcc.a(_addsub_df.o)
 .comment       0x000004b6       0x12 c:\gcc850\lib\libgcc.a(_mul_df.o)
 .comment       0x000004c8       0x12 c:\gcc850\lib\libgcc.a(_div_df.o)
 .comment       0x000004da       0x12 c:\gcc850\lib\libgcc.a(_eq_df.o)
 .comment       0x000004ec       0x12 c:\gcc850\lib\libgcc.a(_ne_df.o)
 .comment       0x000004fe       0x12 c:\gcc850\lib\libgcc.a(_gt_df.o)
 .comment       0x00000510       0x12 c:\gcc850\lib\libgcc.a(_ge_df.o)
 .comment       0x00000522       0x12 c:\gcc850\lib\libgcc.a(_lt_df.o)
 .comment       0x00000534       0x12 c:\gcc850\lib\libgcc.a(_si_to_df.o)
 .comment       0x00000546       0x12 c:\gcc850\lib\libgcc.a(_df_to_si.o)
 .comment       0x00000558       0x12 c:\gcc850\lib\libgcc.a(_thenan_df.o)
 .comment       0x0000056a       0x12 c:\gcc850\lib\libgcc.a(_usi_to_df.o)
 .comment       0x0000057c       0x12 c:\gcc850\lib\libgcc.a(_clzsi2.o)
 .comment       0x0000058e       0x12 c:\gcc850\lib\libgcc.a(_pack_sf.o)
 .comment       0x000005a0       0x12 c:\gcc850\lib\libgcc.a(_unpack_sf.o)
 .comment       0x000005b2       0x12 c:\gcc850\lib\libgcc.a(_fpcmp_parts_sf.o)
 .comment       0x000005c4       0x12 c:\gcc850\lib\libgcc.a(_pack_df.o)
 .comment       0x000005d6       0x12 c:\gcc850\lib\libgcc.a(_unpack_df.o)
 .comment       0x000005e8       0x12 c:\gcc850\lib\libgcc.a(_fpcmp_parts_df.o)
 .comment       0x000005fa       0x12 c:\gcc850\lib\libgcc.a(_clz.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.zdata
 *(.zdata)
 *(.zbss)
 *(reszdata)
 *(.zcommon)

.rozdata
 *(.rozdata)
 *(romzdata)
 *(romzbss)
LOAD obj/crt0.o
LOAD obj/crt1.o
LOAD obj/main.o
LOAD obj/IRQSG2.o
LOAD obj/ALLOC.o
LOAD obj/NEW.o
LOAD obj/STRCLASS.o
LOAD obj/SWTIM.o
LOAD obj/util.o
LOAD obj/I2C_SW.o
LOAD obj/I2Ceeprom.o
LOAD obj/sioSG2.o
LOAD obj/SOUND.o
LOAD obj/ADC.o
LOAD obj/PWM.o
LOAD obj/QUEUEUART.o
LOAD obj/PROTOCOLSTDUART.o
LOAD obj/PROTOCOLSIFRA.o
LOAD obj/CPUSIFRA_MANAGER.o
LOAD obj/NVRDRV.o
LOAD obj/LEDS_PANEL.o
LOAD c:\gcc850\lib\libm.a
LOAD c:\gcc850\lib\libc.a
LOAD c:\gcc850\lib\libgcc.a
OUTPUT(SG2.OUT elf32-v850)
